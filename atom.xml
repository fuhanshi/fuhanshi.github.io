<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡希的博客</title>
  
  <subtitle>因为喜欢，所以热爱</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-08T09:37:29.053Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>凡希</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(CCA）典型相关分析</title>
    <link href="http://yoursite.com/2018/11/08/%E5%85%B8%E5%9E%8B%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/11/08/典型相关分析/</id>
    <published>2018-11-08T05:18:17.000Z</published>
    <updated>2018-11-08T09:37:29.053Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h2><p><code>典型相关分析</code>是<strong>研究两组变量整体之间相关关系</strong>的多元分析方法，它借助<strong>主成分分析降维</strong>的思想，分别对两组变量提取主成分，且<strong>使从两组变量提取的主成分之间的相关程度达到最大，而从同一组内部提取的各主成分之间互不相关</strong>，<strong>用从两组分别提取的主成分的相关性来描述两组变量整体的线性相关关系</strong>。<br></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>1)</strong>仍用相关系数来描述相关性<br><br><strong>2)</strong>从$X$中提取部分信息$U$，从$Y$中提取部分信息$V$ <br><br><strong>3)</strong>$Ｕ,Ｖ$均为$X,Y$的线性组合，即<br><br>$U=a_1X_1+a_2X_2+…+a_pX_p$ <br><br>$V=b_1Y_1+b_2Y_2+…+b_qY_q$ <br><br><strong>4)</strong>让$\rho_{U,V}$越大越好，此时把$U,V$称为（第一对）典型相关因子　<br><br><strong>5)</strong>去除$U,V$的影响后，类似的可以获得第二对，第三对，…典型相关因子，并且它们的相关程度越来越小<br></p><h2 id="总体典型相关和典型变量的数学理论"><a href="#总体典型相关和典型变量的数学理论" class="headerlink" title="总体典型相关和典型变量的数学理论"></a>总体典型相关和典型变量的数学理论</h2><p>先来求解第一对典型相关因子，注意，按照数学语言，这里本应该用$U_1,V_1$来表示，但是为了书写方便，我们以直接以$U,V$来表示了　<br><br>对于$X与Y$的一对线性组合<br>$$U=a_1X_1+a_2X_2+…+a_pX_p＝a’x$$<br>$$V=b_1Y_1+b_2Y_2+…+b_qY_q=b’y$$ <br><br>目标函数是$U和V$的相关系数的极大值，即<br>$$max\rho_{U,V}=\rho_{a’x,b’y}$$<br>其中$a’,b’,x,y$形式如下 <br><br>$$a’=[a_1,a_2,…,a_p]$$<br>$$b’=[b_1,b_2,…,b_q]$$<br>$$x=[X_1,X_2,…,X_p]’$$<br>$$y=[Y_1,Y_2,…Y_q]’$$<br>所以我们要求解使得目标函数极大时的$a’和b’$这两个系数向量。<br><br>$x,y$的协方差矩阵为<br>$cov[x,y]’=\sum=[\begin{matrix}<br>   \Sigma_{11} &amp; \Sigma_{12} \<br>   \Sigma_{21} &amp;\Sigma_{22}<br>  \end{matrix} ]$ <br><br>  (注意：这里是2*2的分块矩阵，格式显示有误)　<br><br>一般的，$U和V$之间的相关系数为<br>$$\rho=\frac{cov(U,V)}{\sqrt{varUvarV}.}=\frac{cov(a’x,b’y)}{\sqrt{var(a’x)var(b’y)}.}$$<br>这里限定取标准化的随机变量$U和V$(编程时直接对数据标准化一下就行了，总体不只有一个U,V,所以可以标准化，即减均值除以标准差)，所以我们的目标函数就简化为如下形式<br>$$\rho=cov(U,V)＝cov(a’x,b’y)=a’cov(x,y)b=a’\Sigma_{12}b$$<br>约束条件为<br>$$var(U)=var(a’x)=a’\Sigma_{11}a=1$$<br>$$var(V)=var(b’x)=b’\Sigma_{22}b=1$$</p><hr><p>接下来我们就可以利用拉格朗日乘数法对该问题进行求解了<br></p><p><strong>[问题]</strong>　<br><br>$$max\rho_{U,V}=a’\Sigma_{12}b$$<br>$$st.$$<br>$$a’\Sigma_{11}a=1$$<br>$$b’\Sigma_{22}b=1$$</p><p><strong>[求解]</strong>　<br></p><ul><li><p>知识回顾之矩阵求偏导</p><blockquote><p>$a’=[a_1,a_2,…,a_n]，X=[x_1,x_2,…,x_n]$ <br><br>则$a’X=a_1x_1+a_2x_2+…+a_nx_n$ <br><br>所以$\frac{\partial{a’X}.}{\partial{x}.}=[\frac{\partial{a’X}.}{\partial{x_1}.}],\frac{\partial{a’X}.}{\partial{x_2}.},…,\frac{\partial{a’X}.}{\partial{x_n}.}]’=[a_1,a_2,…,a_n]’$ <br><br>所以可以得到以下公式:　<br><br>$\frac{\partial{a’X}.}{\partial{x}.}=a$ <br><br>或者<br><br>$\frac{\partial{X’a}.}{\partial{x}.}=a$ <br></p></blockquote></li><li><p>知识回顾之二次型求偏导</p><blockquote><p>$\frac{\partial{X’AX}.}{\partial{x}.}=2AX$ <br></p></blockquote></li><li><p>拉格朗日乘数法求解</p><blockquote><p>$L(a,b,\lambda,\mu)=a’\Sigma_{12}b-\frac{\lambda}{2}(a’\Sigma_{11}a-1)-\frac{\mu}{2}(b’\Sigma_{22}b-1)$ <br><br>求偏导，得：　<br><br>$\frac{\partial{L}.}{\partial{a}}=\Sigma_{12}b-\lambda\Sigma_{11}a=0$ <br><br>$\frac{\partial{L}.}{\partial{b}.}=\Sigma_{21}a-\mu\Sigma_{22}b=0$ <br><br>$\frac{\partial{L}.}{\partial{\lambda}.}=a’\Sigma_{11}a-1=0$ <br><br>$\frac{\partial{L}.}{\partial{\mu}.}=b’\Sigma_{22}b-1=0$ <br><br>记前两个式子为(1)(2)式，后两个为(３)(４)式　<br><br>由(3)(4)得到$a’\Sigma_{11}a=1$，$b’\Sigma_{22}b=1$ <br></p><p>现在来处理(１)(２)式：　<br><br>由（１）得，$\Sigma_{12}b=\lambda\Sigma_{11}a$，两边同时左乘$a’$得，$a’\Sigma_{12}b=\lambda a’\Sigma_{11}a=\lambda$ <br><br>同理对（２）进行操作，有，$\Sigma_{21}a=\mu\Sigma_{22}b$，两边同时左乘$b’$，得到$b’\Sigma_{21}a=\mu b’\Sigma_{22}b=\mu$ <br></p><p>观察发现，$a’\Sigma_{12}b$和$b’\Sigma_{21}a$互为转置，前者等于$\lambda$，后者等于$\mu$，所以有$\lambda=\mu$，再看目标函数，发现前者还是目标函数的表达式，所以要使得目标函数最大，也就是使得$\lambda＝\mu$达到最大，不妨把(1)(2)统一为$\lambda$表示，则（１）（２）两式可化为:<br><br>$\Sigma_{12}b-\lambda\Sigma_{11}a=0$  ……….(1’)<br><br>$\Sigma_{21}a-\lambda\Sigma_{22}b=0$  ……….(2’)<br></p><p>由(1’)得，$\frac{1}{\lambda}\Sigma_{12}b=\Sigma_{11}a$，进而得$a=\Sigma_{11}^{-1}(\frac{1}{\lambda}\Sigma_{12}b)$，代入(2’)得，$\Sigma_{21}(\Sigma_{11}^{-1}(\frac{1}{\lambda}\Sigma_{12}b))=\lambda\Sigma_{22}b$，即$\Sigma_{21}(\Sigma_{11}^{-1}(\Sigma_{12}b))={\lambda}^2\Sigma_{22}b$，即${\Sigma_{22}.}^{-1}\Sigma_{21}(\Sigma_{11}^{-1}(\Sigma_{12}b))={\lambda}^2b$，记${\Sigma_{22}.}^{-1}\Sigma_{21}(\Sigma_{11}^{-1}(\Sigma_{12}))=H$，则有$Hb={\lambda}^2b$ <br></p><p>可以看出，${\lambda}^2$是$H={\Sigma_{22}.}^{-1}\Sigma_{21}(\Sigma_{11}^{-1}(\Sigma_{12}))$的特征值，$b$是${\lambda}^2$的特征向量，结合之前分析的结果，要使得目标函数达到最大，就是使得$\lambda$达到最大，那么此时当${\lambda}^2$达到最大时，$b$就是$H$的最大特征值(${.{\lambda}^2}_{max}$)对应的特征向量.<br><br>同理可以得到，$a$是$H’$的最大特征值对应的特征向量，过程如下：<br></p><p>由(2’)得，$\frac{1}{\lambda}\Sigma_{21}a=\Sigma_{22}b$，进而得$b=\Sigma_{22}^{-1}(\frac{1}{\lambda}\Sigma_{21}a)$，代入(1’)得，$\Sigma_{12} \Sigma_{22}^{-1}(\frac{1}{\lambda}\Sigma_{21}a)-\lambda\Sigma_{11}a=0$，即$\Sigma_{12} \Sigma_{22}^{-1}(\Sigma_{21}a)-{\lambda}^2\Sigma_{11}a=0$，即有${\Sigma_{11}}^{-1}\Sigma_{12} \Sigma_{22}^{-1}(\Sigma_{21}a)={\lambda}^2a$ ，记$H’={\Sigma_{11}}^{-1}\Sigma_{12} \Sigma_{22}^{-1}(\Sigma_{21})$，即有$H’a={\lambda}^2a$  <br></p><p>此时的${\lambda}^2$是$H’$的特征值，$a$是${\lambda}^2$对应的特征向量<br></p><p>要求最大的$\lambda$,所以$a$为${\lambda}<em>{max}$对应的特征向量.<br><br>现在来观察一下$H＝{\Sigma</em>{22}.}^{-1}\Sigma_{21}(\Sigma_{11}^{-1}(\Sigma_{12}))$和$H’＝{\Sigma_{11}.}^{-1}\Sigma_{12} \Sigma_{22}^{-1}(\Sigma_{21})$ <br><br>不妨记${\Sigma_{22}}^{-1}\Sigma_{21}=A$，${\Sigma_{11}.}^{-1}\Sigma_{12}=B$ <br><br>则在求解$b$时，即求$AB$最大特征值(${\lambda}^2$)对应的特征向量　<br><br>在求解$a$时，即求$BA$的最大特征值(${\lambda}^2$)对应的特征向量 <br></p></blockquote></li></ul><h2 id="求解下一对"><a href="#求解下一对" class="headerlink" title="求解下一对"></a>求解下一对</h2><p>由上一步，我们求得了$U=a’X$和$V=b’Y$，称$U和V$为第一对典型相关因子，那么接下来，我们可以一次求解第二对，第三对，．．．<br><br>但有一点需要注意的是，第二对的变量应该与第一对的变量不相关<br><br>比如在求解第二对的时候，即${\rho}_{U_2,V_2}=cov(a’_2X,b’_2Y)$且$var(U_2)=1,var(V_2)=1$ <br><br>需要满足<br><br>$cov(U_1,U_2)=cov(V_1,V_2)cov(U_1,V_2)=cov(U_2,V_1)=0$ <br></p><p>其实，这里有个结论，就是：$a_2,b_2$就是之前求解第一对时的$AB,BA$的第二大特征值对应的特征向量，依次下去即可求解全部对<br></p><p>酱紫，我们通过求解第一次的那个矩阵的特征值以及特征向量就能求解全部对了，也就是能求出全部的典型相关因子了.　<br></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>之前在自己啃$SVM$的时候所用到的求解方法与此类似，特此记录</p><p><img src="timg.jpeg" alt=""> <br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思想&quot;&gt;&lt;a href=&quot;#思想&quot; class=&quot;headerlink&quot; title=&quot;思想&quot;&gt;&lt;/a&gt;思想&lt;/h2&gt;&lt;p&gt;&lt;code&gt;典型相关分析&lt;/code&gt;是&lt;strong&gt;研究两组变量整体之间相关关系&lt;/strong&gt;的多元分析方法，它借助&lt;strong&gt;
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>多元统计第五次上机实验报告</title>
    <link href="http://yoursite.com/2018/11/07/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%BA%94%E6%AC%A1%E4%B8%8A%E6%9C%BA%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2018/11/07/多元统计第五次上机实验报告/</id>
    <published>2018-11-07T07:20:55.000Z</published>
    <updated>2018-11-07T07:26:46.143Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、美国法官评分的主成分分析"><a href="#一、美国法官评分的主成分分析" class="headerlink" title="一、美国法官评分的主成分分析"></a>一、美国法官评分的主成分分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#prepare data for PCA</span><br><span class="line">data=USJudgeRatings[,1:11]</span><br><span class="line">#step1:calculate corr/cov</span><br><span class="line">sigma=cor(data)</span><br><span class="line">#step2:calculate eigenvalue and eigenvector</span><br><span class="line">vv=eigen(sigma)</span><br><span class="line">#vv$values&amp;vv$vectors</span><br><span class="line">eigenvalue=vv$values</span><br><span class="line">eigenvector=vv$vectors</span><br><span class="line">#step3:select principal component</span><br><span class="line">#step4:calculate the principal component score</span><br><span class="line">score=scale(as.matrix(data))%*%vv$vector</span><br></pre></td></tr></table></figure><p><strong>we can also do this in R by using the function named princomp</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pca=princomp(data,cor=T,scores=T)</span><br><span class="line">pca#show the result</span><br><span class="line">#plot Garaval map</span><br><span class="line">screeplot(pca,type=&apos;lines&apos;)</span><br></pre></td></tr></table></figure></p><p><strong>From the analysis,we can select the first two compnent as our principal compnent.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">summary=summary(pca, loadings = T)</span><br><span class="line">pca_data &lt;- predict(pca)</span><br><span class="line">#select the first two compnents as our new_data</span><br><span class="line">new_data=pca_data[,1:2]</span><br></pre></td></tr></table></figure><p><strong>refer:</strong><a href="https://blog.csdn.net/wangyajie_11/article/details/53785528" target="_blank" rel="noopener">https://blog.csdn.net/wangyajie_11/article/details/53785528</a><br><strong>Now let’s use the result that  we selected just now to do cluster analysis and discriminant analysis </strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#cluster analysis</span><br><span class="line">kmeans(new_data,center=3,iter.max=100,nstart=2333)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#discriminant analysis</span><br><span class="line">D=dist(data)</span><br><span class="line">library(MASS)</span><br><span class="line">yy=data[,&apos;PHYS&apos;]</span><br><span class="line">l=lda(yy~.,data=data.frame(new_data))</span><br><span class="line">#visualize</span><br><span class="line">plot(l)</span><br></pre></td></tr></table></figure><h3 id="二、应用以下R自带数据集进行因子分析。"><a href="#二、应用以下R自带数据集进行因子分析。" class="headerlink" title="二、应用以下R自带数据集进行因子分析。"></a>二、应用以下R自带数据集进行因子分析。</h3><p>use_data: state.x77<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(&apos;psych&apos;)</span><br><span class="line">fa(state.x77, nfactors = 2, score=c(&quot;regression&quot;),rotate = &quot;varimax&quot;, fm = &quot;ml&quot;)</span><br></pre></td></tr></table></figure></p><p><strong>refer</strong>: <a href="https://www.jianshu.com/p/33ad4e2b29b3" target="_blank" rel="noopener">https://www.jianshu.com/p/33ad4e2b29b3</a></p><h3 id="三、R语言的作图"><a href="#三、R语言的作图" class="headerlink" title="三、R语言的作图"></a>三、R语言的作图</h3><h4 id="1-常用统计图"><a href="#1-常用统计图" class="headerlink" title="1.常用统计图"></a>1.常用统计图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mean=apply(USJudgeRatings,2,mean)</span><br><span class="line">barplot(mean)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pie(mean)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boxplot(USJudgeRatings)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stars(USJudgeRatings)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#unable to download the library</span><br><span class="line">#library(&apos;faces&apos;)</span><br><span class="line">#faces(USJudgeRatings)</span><br></pre></td></tr></table></figure><h4 id="2-基础绘图命令"><a href="#2-基础绘图命令" class="headerlink" title="2.基础绘图命令"></a>2.基础绘图命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(x &lt;- rnorm(10), y=rnorm(10),type = &quot;l&quot;, main = &quot;main title&quot;,xlab=&apos;x axis&apos;,ylab=&apos;y axis&apos;,sub=&apos;sub title&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、美国法官评分的主成分分析&quot;&gt;&lt;a href=&quot;#一、美国法官评分的主成分分析&quot; class=&quot;headerlink&quot; title=&quot;一、美国法官评分的主成分分析&quot;&gt;&lt;/a&gt;一、美国法官评分的主成分分析&lt;/h3&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>多元统计分析第四次上机实验报告</title>
    <link href="http://yoursite.com/2018/11/07/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E7%AC%AC%E5%9B%9B%E6%AC%A1%E4%B8%8A%E6%9C%BA%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2018/11/07/多元统计分析第四次上机实验报告/</id>
    <published>2018-11-07T04:11:13.000Z</published>
    <updated>2018-11-07T04:24:24.344Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h3><p>实验目的：<br>综合利用R语言进行数据分析　<br><br>实验项目名称：<br><br>1.应用R语言对附件1中的数据进行分析，并给出分析结果。<br><br>要求：<br><br>1、重新调整数据的结构，按照正确的方式读取数据。（如新建行业变量）<br>例：<br><br><img src="0.png" alt=""> <br></p><p>2.对各行业进行基础性统计分析，需要对比各行业对应指标的异同，用图表的方式呈现。<br><br>3.计算各指标的相关系数，说明哪些指标具有高相关性。<br><br>4.对所有行业数据进行聚类分析，确定分类结果并做简单分析，如利用聚类结果与行业对比，说明聚类结果是否和行业因素相关。<br><br>5.做出简单的统计分析报告，报告中需要包括但不限于以上要求的内容。<br></p><p>附加题：<br><br>1.构建一个判别模型，以确定新的公司的类别.（类别可为行业，也可用要求4中的聚类结果，自选你认为合理的）<br></p><h3 id="统计分析报告"><a href="#统计分析报告" class="headerlink" title="统计分析报告"></a>统计分析报告<br></h3><p>1.首先将数据导入Excel并对首列进行拆分，分别以d，f，x代表电力、煤气及水的生产和供应业，房地行业和信息技术业，然后将其另存为data.csv文件。接着读取该文件，代码如下：<br>data=read.csv(“C:\Users\Administrator\Desktop\第四次上机\data.csv”)<br><br>读入效果如下图所示：<br><br><img src="1.png" alt=""></p><p>2.利用summary命令进行信息汇总，即 summary(data)，结果如下：<br><br><img src="2.png" alt=""></p><p>3.利用cor命令计算各个指标之间的相关系数，即cor(data[,3:10])，结果如下<br><br><img src="3.png" alt=""></p><p>由此观之，净资产收益率与总资产报酬率之间的相关系数为0.89，说明两者之间的相关程度较大。同时，流动资产周转率和总资产周转率之间也呈现出较强的相关关系。<br></p><p>4.首先利用dist函数计算各个样本之间的距离，即dist(data)，然后对数据进行kmeans聚类，代码如下：kmeans(distance,centers=3,iter.max=1000,nstart=111)，聚类结果如下：<br><br><img src="4.png" alt=""><br>从中可以看出，聚类结果和行业因素是由一定关系的。<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;实验内容&quot;&gt;&lt;a href=&quot;#实验内容&quot; class=&quot;headerlink&quot; title=&quot;实验内容&quot;&gt;&lt;/a&gt;实验内容&lt;/h3&gt;&lt;p&gt;实验目的：&lt;br&gt;综合利用R语言进行数据分析　&lt;br&gt;&lt;br&gt;实验项目名称：&lt;br&gt;&lt;br&gt;1.应用R语言对附件1中的数据进
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>线性表中遇到的算法思想整理</title>
    <link href="http://yoursite.com/2018/11/02/%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2018/11/02/线性表中遇到的算法思想整理/</id>
    <published>2018-11-02T09:34:43.000Z</published>
    <updated>2018-11-02T11:34:45.049Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题１</strong>．<br>已知指针ha和hb分别指向两个单链表的头结点，并且已知两个链表的长度分别为m和n。试写一算法将这两个链表连接在一起（即令其中一个表的首元结点连在另一个表的最后一个结点之后），假设指针hc指向连接后的链表的头结点，并要求算法以尽可能短的时间完成连接运算。请分析你的算法和时间复杂度。</p><p><strong>算法思想：</strong> <br><br>对于两个含头结点的单链表，将其中一个的首元结点链接在另一个单链表的最后一个结点之后，不要求时间复杂度最优的情况下可以随意交换连接的顺序，但若要求尽可能快，需要注意在连接时，不动的那个需要从头结点遍历到尾节点，之后直接把尾结点的next域指向另一个单链表的首元结点即可，也就是说，算法所需要的时间复杂度主要是在遍历的时候造成的，所以被遍历的那个单链表的长度应该越短越好，所以我们应该把长的单链表的尾指针指向短的单链表的首元结点，也就是把短的连接到长的后面，最后的改变指针指向操作是一瞪眼的事儿.<br><br><img src="link_a&amp;b.png" alt=""> <br></p><p><strong>问题２．</strong><br>设顺序表va中的数据元素递增有序。试写一算法，将x插入到顺序表的适当位置上，以保持该表的有序性．<br></p><p><strong>算法思想：</strong><br><br>由于顺序表是可以随机存取的（任意位置存取），所以考虑从最后一个元素开始，依次比较x与该位置元素的大小，若x大于该点元素，则把ｘ直接插在该元素后面就可以了，否则，依次把ｘ向前遍历，直到到达一个满足ｘ大于遍历点元素的位置，将ｘ插在该点之后就可以了。<br><br><img src="insert_x.png" alt=""></p><p><strong>问题３．</strong>从顺序表中删除从第i个元素起的ｋ个元素<br></p><p><strong>算法思想</strong>　<br><br>即删除从第i个元素到第i＋k－１个元素共k个元素，所以把从第i+k个元素起<br>的元素前移到第i个元素起的后续位置上，注意位序比下标多1.<br><br><img src="del_i_k.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;问题１&lt;/strong&gt;．&lt;br&gt;已知指针ha和hb分别指向两个单链表的头结点，并且已知两个链表的长度分别为m和n。试写一算法将这两个链表连接在一起（即令其中一个表的首元结点连在另一个表的最后一个结点之后），假设指针hc指向连接后的链表的头结点，并要求算法以
      
    
    </summary>
    
      <category term="数据结构自学史" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%87%AA%E5%AD%A6%E5%8F%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>收益率</title>
    <link href="http://yoursite.com/2018/10/30/%E6%94%B6%E7%9B%8A%E7%8E%87/"/>
    <id>http://yoursite.com/2018/10/30/收益率/</id>
    <published>2018-10-30T08:11:45.000Z</published>
    <updated>2018-11-01T09:22:04.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="现金流分析"><a href="#现金流分析" class="headerlink" title="现金流分析"></a>现金流分析</h3><ul><li><strong>净现金流出</strong>：$C_t=O_t-I_t$　<br></li><li>通过现金流折现对现金流进行分析的方法称为<strong>现金流折现分析</strong>　<br></li><li>对于一般的现金流$R_t=-C_t(t=0,1,2,…,n)$，在利率为$i$时有现值$V(0)=\sum_{t=0}^{n}v^tR_t$，它可正可负.<br></li></ul><h3 id="收益率"><a href="#收益率" class="headerlink" title="收益率"></a>收益率</h3><ul><li><strong>收益率</strong>就是使<code>投资支出现值</code>与<code>投资回收现值`</code>相等`的的利率.<br></li><li>计算方法：令$V(0)=\sum_{t=0}^{n}v^tR_t$中的$V(0)$等于$0$，求解得到的$i$值就是收益率.<br></li><li>收益率可正可负<br></li></ul><h3 id="再投资收益率"><a href="#再投资收益率" class="headerlink" title="再投资收益率"></a>再投资收益率</h3><p>情形一<br><br>0时刻投资一单位货币，投资期限为$n$，本金年利率为$i$.每年产生的利息按照利率$j$再投资，即利率的年利率为$j$，则投资回收值在时刻$n$的积累值为<br>$$1+i[(1+j)^{n-1}+(1+j)^{n-2}+…+(1+j)^{0}]=1+is_{n┒j}$$</p><p>情形二<br><br>在标准期末付年金中，各次付款产生的利息的再投资收益率均为$j$，即从时刻２开始，每期都有由付款本金产生的利息，由于付款的本金之和随时间推移逐年增加，因而每期所产生的利息也就逐年增加，因此，时刻$n$的积累本息和为<br>$$n+i(Is)<em>{n-1┒j}=n+i\frac{s</em>{n┒j}-n}{j}$$</p><p>而期初付年金相应的计算公式为<br>$$n+i(Is){n┒j}$$</p><h3 id="投资额基金收益率"><a href="#投资额基金收益率" class="headerlink" title="投资额基金收益率"></a>投资额基金收益率</h3><ul><li><p>一些符号的含义</p><blockquote><p>$A$：期初基金的资本量<br><br>$B$：期末基金的本息和<br><br>$I$：投资期内基金所获得的收入<br><br>$C_t$：时刻$t$投入资金或从基金中赎回的资金量，$0&lt;=t&lt;=1$<br><br>$C$：此期间注入或赎回的资金之和，即$C=\sum_tC_t$ <br></p></blockquote></li><li><p>于是，在一个期间内，我们有<br>$$B=A+C+I$$</p><p>若假设投资期内所获得的基金收入是在期末进行支付的，则有<br>$$I=iA+\sum_tC_{t } i_{1-t,t}$$<br>注意最后一个符号　<br></p><p>于是计算收益率的公式如下：</p><p>$$i=\frac{I}{A+\sum_tC_t(1-t)}$$</p><p>若假设歌各次资金的投入与赎回在$0-1$上是均匀分布的，那么有<br>$$i=\frac{I}{A+B-I}$$</p><h3 id="时间加权收益率"><a href="#时间加权收益率" class="headerlink" title="时间加权收益率"></a>时间加权收益率</h3><p>$$1+i=(1+i_1)+(1+i_2)+…+(1+i_m)$$</p><h3 id="投资组合法和投资年法"><a href="#投资组合法和投资年法" class="headerlink" title="投资组合法和投资年法"></a>投资组合法和投资年法</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;现金流分析&quot;&gt;&lt;a href=&quot;#现金流分析&quot; class=&quot;headerlink&quot; title=&quot;现金流分析&quot;&gt;&lt;/a&gt;现金流分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;净现金流出&lt;/strong&gt;：$C_t=O_t-I_t$　&lt;br&gt;&lt;/li&gt;
&lt;li&gt;通
      
    
    </summary>
    
      <category term="金融数学" scheme="http://yoursite.com/categories/%E9%87%91%E8%9E%8D%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>多元统计分析期中考点梳理</title>
    <link href="http://yoursite.com/2018/10/28/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E6%9C%9F%E4%B8%AD%E8%80%83%E7%82%B9%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2018/10/28/多元统计分析期中考点梳理/</id>
    <published>2018-10-28T13:37:11.000Z</published>
    <updated>2018-10-29T09:23:06.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Part-1．"><a href="#Part-1．" class="headerlink" title="Part 1．"></a>Part 1．</h2><p><strong>１．$What’s$ <code>统计距离</code>？$What’s$ <code>统计距离</code>与<code>欧氏距离</code>各自的<code>优缺点</code>(两者之间的<code>区别</code>与<code>联系</code>)?</strong></p><p><strong>2．$k-means$的思想、方法以及过程？</strong></p><p><strong>3．$Fisher$判别法的思想、方法以及过程推导？</strong></p><p><strong>4．<code>聚类分析</code>与<code>判别分析</code>的区别与联系？</strong></p><p><strong>5．PCA的思想与方法？</strong></p><p><strong>6．FA的思想与方法？</strong></p><p><strong>7．PCA与FA的区别与联系？</strong></p><hr><h2 id="Part-2．"><a href="#Part-2．" class="headerlink" title="Part 2．"></a>Part 2．</h2><p><strong>1．利用<code>随机向量</code>的<code>均值</code>与<code>方差</code>的性质求解<code>协方差矩阵</code></strong></p><p><strong>2．通过<code>判别分析/距离判别/计算马氏距离</code>，做判别</strong></p><p><strong>3．$PCA$求解主成分</strong></p><p><strong>4．已知$FA$的结果，求解<code>共同度</code>，<code>方差贡献率</code></strong></p><hr><h2 id="Part-1-．"><a href="#Part-1-．" class="headerlink" title="$Part 1$．"></a>$Part 1$．</h2><p><strong>１．$What’s$ <code>统计距离</code>？$What’s$ <code>统计距离</code>与<code>欧氏距离</code>各自的<code>优缺点</code>(两者之间的<code>区别</code>与<code>联系</code>)?</strong> <br></p><blockquote><p>$1^。$<code>统计距离</code>是一种可以<strong>体现各个变量在变差大小上的不同</strong>以及<strong>有时存在的相关性</strong>的距离，并且它<strong>与各变量所用的单位无关.</strong><br><br>(1)<code>优点：</code>可以<strong>体现各个变量在变差大小上的不同</strong>以及<strong>有时存在的相关性</strong>的距离，并且它<strong>与各变量所用的单位无关.</strong><br><br>(2)<code>缺点：</code>夸大了变化微小的变量的作用。受协方差矩阵不稳定的影响，并不总是能顺利计算出。<br></p><p>$2^。$<code>欧氏距离</code>欧也称欧几里得度量、欧几里得度量，是一个通常采用的距离定义，它是在$m$维空间中两个点之间的真实距离。在二维和三维空间中的欧氏距离的就是两点之间的距离。<br><br>(1)优点：欧式距离在计算方法和理解上较为简单<br><br>(2)缺点：在一些统计问题上有一些缺点，比如，在欧式距离中，每个坐标的贡献是同等的，但用测量值做为坐标值计算距离时，会带有不等的随机波动，这种情况下需要对坐标进行加权。</p></blockquote><p><strong>2．$k-means$的思想、方法以及过程？</strong><br></p><blockquote><p><code>基本思想:</code>把每个样品聚集到其最近形心(均值)类中.<br><br><code>方法:</code>对于给定的样本集，按照样本之间的距离大小，将样本集划分为K个簇。让簇内的点尽量紧密的连在一起，而让簇间的距离尽量的大。<br><br><code>过程：</code>把样品粗略分成$K$个初始类$–&gt;$进行修改，逐步分派到其最近均值的类中$–&gt;$重复上一步，直到各类无元素进出<br></p></blockquote><p><strong>3．$Fisher$判别法的思想、方法以及过程推导？</strong><br></p><blockquote><p><code>思想：</code>投影，将$k$组$p$维数据投影到某一个方向，使得组与组之间的投影尽可能地分开，然后再选择合适的判别规则，将新的样品进行分类判别。<br><br><code>方法：</code><br><br><code>过程：</code><br></p></blockquote><p><strong>4．<code>聚类分析</code>与<code>判别分析</code>的区别与联系？</strong><br></p><ul><li><p>区别：<br><br>1、基本思想不同</p><blockquote><p><code>聚类分析</code>是根据研究对象特征对研究对象进行分类的一种多元分析技术,在未知各样本类别的情况下，把性质相近的个体归为一类, 使得同一类中的个体都具有高度的同质性, 不同类之间的个体具有高度的异质性；<br><br><code>判别分析</code>是对已知分类的数据建立由数值指标构成的分类规则即判别函数, 然后把这样的规则应用到未知分类的样本去分类<br></p></blockquote><p>2、研究目的不同</p><blockquote><p>虽然都是研究分类的，但在进行<code>聚类分析</code>前，<code>对总体到底有几种类型不知道</code>（研究分几类较为合适需从计算中加以调整）。<code>判别分</code>析则是<code>在总体类型划分已知</code>，对当前新样本判断它们属于哪个总体。</p></blockquote><p>3.所具有的方法不同<br></p><blockquote><p><code>聚类分析</code>分两种：$Q$型聚类（对样本的聚类），$R$型聚类（对变量的聚类）。聚类分析需要注意的是，一般小样本数据可以用系统聚类法，大样本数据一般用快速聚类法（$K$均值聚类法），当研究因素既有分类变量又有计量变量，可以用两步聚类。<br><br><code>判别分析</code>有$Fisher$判别，$Bayes$判别和逐步判别。一般用$Fisher$判别即可，要考虑概率及误判损失最小的用$Bayes$判别，但变量较多时，一般先进行逐步判别筛选出有统计意义的变量，再结合实际情况选择用哪种判别方法.</p></blockquote></li></ul><p><strong>5．$PCA$的思想与方法？</strong><br></p><blockquote><p><code>思想：</code>PCA通过线性变换将原始数据变换为一组各维度线性无关的表示，可用于提取数据的主要特征分量<br><br><code>目的：</code>为了节省计算机在进行计算时所占用的资源，在减少需要分析的指标的同时，尽量减少原指标包含信息的损失，并用随机变量的方差来代表保留信息的比重，以达到对所收集数据进行全面分析的目的。<br><br><code>方法：</code>协方差矩阵法，相关矩阵法<br><br><code>参考：</code><a href="https://blog.csdn.net/daaikuaichuan/article/details/53444639" target="_blank" rel="noopener">https://blog.csdn.net/daaikuaichuan/article/details/53444639</a></p></blockquote><p><strong>6．$FA$的思想与方法？</strong><br></p><blockquote><p><code>思想：</code>根据相关性大小把原始变量分组，使得同组内的变量之间相关性较高，而不同组的变量间的相关性则较低<br><br><code>方法：</code>求解因子载荷的方法：主成分法，主轴因子法，极大似然法，最小二乘法，a因子提取法。</p></blockquote><p><strong>7．P$CA$与$FA$的区别与联系？</strong><br></p><ul><li>1．区别<blockquote><p>(1)都是一种多维随机变量降维的方法<br><br>(2)$FA$求解初始因子时有一种方法是$PCA$ <br></p></blockquote></li><li>2．联系<blockquote><p>(1)$PCA$是以方差度量保留的主成分的，使方差尽量大，$FA$中因子与原变量间有很高的相关性，且有很轻的解释能力<br><br>(2)形式不同.$PCA$是$Y=UX$，而$FA$为$X=AF+e$ <br><br>(3)$FA$除主成分法外还有其他方法，比如极大似然法 <br><br>(4)$FA$最后要进行因子旋转 <br></p></blockquote></li></ul><hr><h2 id="Part-2．-1"><a href="#Part-2．-1" class="headerlink" title="Part 2．"></a>Part 2．</h2><p><strong>1．利用<code>随机向量</code>的<code>均值</code>与<code>方差</code>的性质求解<code>协方差矩阵</code></strong><br><br><img src="1.jpg" alt=""> <br><br><strong>2．通过<code>判别分析/距离判别/计算马氏距离</code>，做判别</strong><br><br><img src="2.jpg" alt=""> <br><br><img src="3.jpg" alt=""> <br><br><strong>3．$PCA$求解主成分</strong><br><br><img src="4.jpg" alt=""> <br><br><strong>4．已知$FA$的结果，求解<code>共同度</code>，<code>方差贡献率</code></strong><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Part-1．&quot;&gt;&lt;a href=&quot;#Part-1．&quot; class=&quot;headerlink&quot; title=&quot;Part 1．&quot;&gt;&lt;/a&gt;Part 1．&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;１．$What’s$ &lt;code&gt;统计距离&lt;/code&gt;？$What’s$ &lt;cod
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>利息的基本概念</title>
    <link href="http://yoursite.com/2018/10/26/%E5%88%A9%E6%81%AF%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2018/10/26/利息的基本概念/</id>
    <published>2018-10-26T06:34:37.000Z</published>
    <updated>2018-10-27T06:55:47.160Z</updated>
    
    <content type="html"><![CDATA[<h2 id="知识梳理"><a href="#知识梳理" class="headerlink" title="知识梳理"></a>知识梳理</h2><h3 id="一些基本概念："><a href="#一些基本概念：" class="headerlink" title="一些基本概念："></a>一些基本概念：<br></h3><p><strong>本金</strong>：每项业务开始时投资的金额.<br><br><strong>积累值（终值）</strong>：业务在一定时间后回收到的总金额称为该时刻的积累值，与<code>本金</code>与<code>投资日算起的时间长度</code>有关.<br><br><strong>积累函数</strong>$a(t)$又叫<code>t期积累因子</code>，与之相对的是<code>t期折现因子</code>$v(t)$ ，并且有$a(t)=v^-(t)$ .<br><br><strong>现值</strong>只与该时点以后的款项有关，<strong>积累值</strong>只与该时点以前的款项有关.<br><br><strong>第$n$期利息</strong>：$I_n=A(n)-A(n-1)$，$n&gt;=1,n$是整数.　<br></p><h3 id="实际利率"><a href="#实际利率" class="headerlink" title="实际利率"></a>实际利率</h3><p>第$n$期的实际利率$i_n=\frac{I_n}{A_{n-1}.}$.<br></p><blockquote><p>单利：$a(t)=1+it$ ，$i_n=\frac{a(n)-a(n-1)}{a(n-1)}=\frac{(1+in)-(1+i(n-1))}{1-i(n-1)}=\frac{i}{1+i(n-1)}$   <br><br>复利：$a(t)=(1+i)^t$，$i_n=\frac{a(n)-a(n-1)}{a(n-1)}=\frac{(1+i)^n-(1+i))^{n-1}}{(1+i)^{n-1}.}=i$ <br></p></blockquote><p>为使得获利最大：<br><br>当$t&gt;=1$时，$(1+i)^t&gt;=1+it$，选复利.<br><br>当$t&lt;=1$时，$(1+i)^t&lt;=1+it$，选单利.<br></p><h3 id="实际贴现率"><a href="#实际贴现率" class="headerlink" title="实际贴现率"></a>实际贴现率</h3><p>定义：一个度量期内取得的利息金额与期末的投资可回收金额的比值，用$d$表示.<br><br>第$n$期的实际贴现率$d_n=\frac{I_n}{A_n}$. <br><br>公式：$v=a^-(1)=1-d$ <br></p><blockquote><p>复利场合的贴现率：$a(n)=(1+i)^n$，$d_n=\frac{a(n)-a(n-1)}{a(n)}=\frac{i}{1+i}$，又叫做<code>复贴现</code> <br><br>单利场合的贴现率：$a(n)=1+ni$，$d_n=\frac{d}{1-(n-1)d}$  <br></p></blockquote><p><strong>名义利率</strong>：设每期付$m$次利息的名义利率为$i^{(m)}$，则实际利率（每$\frac1m$期）为$\frac{i^{(m)}.}{m}$，通过$(1+i)=(1+\frac{i^{(m)}.}{m})^m$可以求得实际利率$i$. <br><br><strong>名义贴现率</strong>：通过$1-d=(1-\frac{d^{(m)}}{m})^m$可求得每期实际贴现率$d$. <br><br><strong>公式</strong>：<br>$$(1+\frac{i^{(m)}.}{m})^m=1+i=(1-\frac{d^{(p)}}{p})^{-p}=\frac1{1-d}$$　</p><h3 id="利息力"><a href="#利息力" class="headerlink" title="利息力"></a>利息力</h3><p>利息力用来度量在每一时点上的利息<br><br>公式：$a(t)=e^{\int_0^t \delta_t dt}$ <br></p><hr><p>现在，用一个公式对以上内容做一个总结，如下：<br>$$(1+\frac{i^{(m)}.}{m})^m=1+i=v^{-1}=(1-d)^{-1}=(1-\frac{d^{(p)}.}{p})^{(-p)}=e^{\delta}$$<br>注意这里的利息力(贴现力)是常数.<br><br><img src="1.jpeg" alt=""> <br></p><hr><h2 id="课本习题"><a href="#课本习题" class="headerlink" title="课本习题"></a>课本习题</h2><p>5．已知某笔投资在三年后的积累值为为1000元，第一年的利率为$i_1=$10%，第二年的利率为$i_2=$8%，第三年的利率为$i_3=$6%，求该笔投资的原始金额.<br><br>解：$A(0)(1+i_1)(1+i_2)(1+i_3)=1000–&gt;A(0)$ <br></p><p>13．假设某人在1984年7月1日投资1000元于某基金，该基金在$t$时刻的利息力为$\delta_t=\frac{3+2t}{50}$，其中$t$为距1984年1月1日的年数，求该笔投资在1985年1月1日的积累值.<br><br>解：$1000e^{\int_\frac12^1\delta_tdt}$ <br></p><p>14．某基金$A$以每月计息一次的年名义利率12%积累，基金$B$以利息强度$\delta_t=\frac{t}6$积累，在时刻0，两笔基金存入的款项相同，请确定两基金额相等的下一时刻.<br><br>解：$1.(1+\frac{0.12}{12})^{12n}=1.e^{\int_0^n\frac{t}{6}dt}–&gt;n$ <br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;知识梳理&quot;&gt;&lt;a href=&quot;#知识梳理&quot; class=&quot;headerlink&quot; title=&quot;知识梳理&quot;&gt;&lt;/a&gt;知识梳理&lt;/h2&gt;&lt;h3 id=&quot;一些基本概念：&quot;&gt;&lt;a href=&quot;#一些基本概念：&quot; class=&quot;headerlink&quot; title=&quot;一些基
      
    
    </summary>
    
      <category term="金融数学" scheme="http://yoursite.com/categories/%E9%87%91%E8%9E%8D%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>求极限的一般方法</title>
    <link href="http://yoursite.com/2018/10/26/%E6%B1%82%E6%9E%81%E9%99%90%E7%9A%84%E4%B8%80%E8%88%AC%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/26/求极限的一般方法/</id>
    <published>2018-10-26T05:48:37.000Z</published>
    <updated>2018-10-26T05:53:33.373Z</updated>
    
    <content type="html"><![CDATA[<p>1、利用初等函数的连续性求极限；</p><p>2、利用极限的运算法则求极限；</p><p>3、利用左右极限求极限；</p><p>4、利用两个重要极限求极限；</p><p>5、利用无穷小与有界量的积为无穷小的性质求极限；</p><p>6、利用等价无穷小代换求极限；</p><p>7、利用单调有界性准则求极限；</p><p>8、利用夹逼准则求极限；</p><p>9、利用中值定理求极限；</p><p>10、利用洛必达法则求极限；</p><p>11、用定积分求极限；</p><p>12、利用泰勒公式求极限；</p><p>13、利用数项收敛的必要性求极限。</p><p><img src="timg.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、利用初等函数的连续性求极限；&lt;/p&gt;
&lt;p&gt;2、利用极限的运算法则求极限；&lt;/p&gt;
&lt;p&gt;3、利用左右极限求极限；&lt;/p&gt;
&lt;p&gt;4、利用两个重要极限求极限；&lt;/p&gt;
&lt;p&gt;5、利用无穷小与有界量的积为无穷小的性质求极限；&lt;/p&gt;
&lt;p&gt;6、利用等价无穷小代换求极限；&lt;
      
    
    </summary>
    
      <category term="Mathematic Analysis" scheme="http://yoursite.com/categories/Mathematic-Analysis/"/>
    
    
  </entry>
  
  <entry>
    <title>关于０/０型极限未定式的一些疑惑</title>
    <link href="http://yoursite.com/2018/10/25/%E5%85%B3%E4%BA%8E%EF%BC%90-%EF%BC%90%E5%9E%8B%E6%9E%81%E9%99%90%E6%9C%AA%E5%AE%9A%E5%BC%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E7%96%91%E6%83%91/"/>
    <id>http://yoursite.com/2018/10/25/关于０-０型极限未定式的一些疑惑/</id>
    <published>2018-10-25T13:26:17.000Z</published>
    <updated>2018-10-26T05:49:54.408Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在进入正题之前，先来看一道题目. <br></p></blockquote><p><strong>[引例]</strong>　设$f(0)=0$，且$\lim_{h\rightarrow0}\frac{f(1-cos h)}{h^2}$存在，则$f’(0)$存在吗?<br><br><strong>解</strong>：<br><br>$\lim_{h\rightarrow0}\frac{f(1-cos h)}{h^2}=\lim_{h\rightarrow0}\frac{f(0+(1-cos h))-f(0)}{h^2}=\frac12\ lim_{h\rightarrow0}\frac{f(0+(1-cos h))-f(0)}{\frac{h^2}{2}}=lim_{h\rightarrow0}\frac{f(0+(1-cos h))-f(0)}{(1-cos h)-0}$<br>令$1-cos h=t$,<br><br>则当$h\rightarrow0$时，$cos h\rightarrow1^-$(因为$|cos h|&lt;=1$，所以只能从1的左侧趋近于１)，从而$1-cos h\rightarrow0^+$，即$t\rightarrow0^+$ <br><br>所以$\lim_{h\rightarrow0}\frac{f(1-cos h)}{h^2}=lim_{h\rightarrow0}\frac{f(0+(1-cos h))-f(0)}{(1-cos h)-0}=lim_{t\rightarrow0^+}\frac{f(0+t)-f(0)}{t-0}$存在（这是题干已知条件） <br><br>由极限的定义可知，$f(x)$在$x=0$处的右极限存在，即$f^{‘+}(0)$存在<br><br>但是，$f(x)$在$x=0$处的左极限是否存在<br>呢？根据当前已知的条件，我们无从得知，从而就不能确定$f(x)$在$x=0$处的导数是否存在（这里是根据导数的定义：只有当左右导数同时存在且相等时，才能确定该函数在该点的导数是存在的）.<br></p><blockquote><p>看完上面的引例，来进入正题！<br></p></blockquote><p><strong>[题目]</strong>计算极限$\lim_{x\rightarrow0}\frac{1-cosx\sqrt{cosx}}{x^2}$ <br><br><strong>解</strong>　<br><br>$\lim_{x\rightarrow0}\frac{1-cosx\sqrt(cosx)}{x^2}=\lim_{x\rightarrow0}\frac{(1-cosx)+(cosx-cosx\sqrt{cosx})}{x^2}=\lim_{x\rightarrow0}\frac{1-cosx}{x^2}+\lim_{x\rightarrow0}\frac{cosx(1-\sqrt{consx})}{x^2}$ <br><br>第一部分直接利用等价无穷小，得$\frac12$.<br><br>第二部分利用极限的四则运算法则，有<br><br>$\lim_{x\rightarrow0}\frac{cosx(1-\sqrt{cosx})}{x^2}=\lim_{x\rightarrow0}{cosx}.\lim_{x\rightarrow0}\frac{1-\sqrt{cosx}}{x^2}\=1.\lim_{x\rightarrow0}{\frac{1-cosx}{x^2(1+\sqrt{cosx})}=\lim_{x\rightarrow0}(\frac1{1+\sqrt{cosx})}\lim_{x\rightarrow0}\frac{1-cosx}{x^2}}\=\frac12{\lim_{x\rightarrow0}\frac{1-cosx}{x^2}}=\frac14$ <br><br>所以最终结果为$\frac12+\frac14=\frac34$ <br></p><p>现在，我们采用另外一种方法求解上题<br><br>$\lim_{x\rightarrow0}\frac{1-cosx\sqrt{cosx}}{x^2}=\frac12\lim_{x\rightarrow0}\frac{1-cosx\sqrt{cosx}}{1-cosx}$ <br><br>到这里一切正常<br><br>继续<br><br>令$cosx=t$，由于$x\rightarrow0$时，$cosx\rightarrow1^-$（因为｜cosx｜&lt;=1,所以只能从１的左侧趋近于１），即$t\rightarrow1^-$，从而上式可化为<br><br>$$\frac12\lim_{t\rightarrow1^-}\frac{1-t\sqrt{t}}{1-t}=\frac12\lim_{t\rightarrow1^-}\frac{1-t^{\frac32}}{1-t}$$ <br><br>最后利用洛必达法则计算得到结果为$\frac34$　<br></p><blockquote><p><strong>我的疑问</strong>：这里只计算出来了左极限存在为一个数，右极限不确定，类比刚开始的引例，那么以上过程是错误的吗？<br><br>这里的$\frac{1-t^{\frac32}}{1-t}$是初等函数，书上说初等函数在其定义区间（定义域内的任意一小区间，包含于定义域）上连续，而此函数的定义域为$cosx&gt;=0且cosx!=1$，也就是$t&gt;=0且t!=1$ 。<br><br>现在$t\rightarrow1^-$,而$1$是断点，不在定义区间上。（<strong>解惑：极限是在去心邻域定义的，这个不影响</strong>）<br></p></blockquote><blockquote><p>解惑：以上过程没毛病，当$t\rightarrow1^-$时，$x$可以从两侧趋近于０，$x$的双侧极限值都等于$t$的单侧极限值，可以把$x$的两侧极限都求解一下来验证这一点.：<br><br>利用第一种解法中的一步，即$\frac12{\lim_{x\rightarrow0}\frac{1-cosx}{x^2}}$，不论$x\rightarrow0^+$还是$x\rightarrow0^-$，由于它是偶函数，所以结果都是一样的。</p></blockquote><p>一般的，我们需要讨论左右侧极限的题目类型如下：<br></p><blockquote><p>1.分段函数，无论连续不连续，都一定得分左右证明 <br><br>2.连续性问题，证明连续性<br><br>3.定积分时，若是广义积分、暇积分，不得不考虑单侧极限。是积分积出来之后才考虑单侧极限。<br></p></blockquote><p>所以，快滚去看课本！</p><p><img src="1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在进入正题之前，先来看一道题目. &lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;[引例]&lt;/strong&gt;　设$f(0)=0$，且$\lim_{h\rightarrow0}\frac{f(1-cos h)}{h^2}$存在，则
      
    
    </summary>
    
      <category term="Mathematic Analysis" scheme="http://yoursite.com/categories/Mathematic-Analysis/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言基础之数据类型与输入/输出</title>
    <link href="http://yoursite.com/2018/10/15/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%BE%93%E5%85%A5-%E8%BE%93%E5%87%BA/"/>
    <id>http://yoursite.com/2018/10/15/C语言基础之数据类型与输入-输出/</id>
    <published>2018-10-15T14:58:33.000Z</published>
    <updated>2018-10-16T03:21:00.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据在计算机内部的表示"><a href="#数据在计算机内部的表示" class="headerlink" title="数据在计算机内部的表示"></a>数据在计算机内部的表示</h1><h2 id="常用的进位制"><a href="#常用的进位制" class="headerlink" title="常用的进位制"></a>常用的进位制</h2><p>R进制数只采用R个基本数字符号，R称为数制的<code>基数</code>，数制中每一固定位置对应的单位值称为<code>权</code>，进位原则是<code>逢R进1</code>.<br><br>比如二进制，那么基数就是２，数字符号就是0,1<br><br>再比如八进制，则基数为８，数字符号为0,1,…,7(共８位).<br><br><strong>注意</strong>在16进制中，基数为16很自然，但是数字符号应该是0,1,2,…,15，然而以为数只能到9，所以16进制的10用A来表示，11用B来表示，这样子一直下去，到15用F表示.<br></p><h2 id="数值与字符在计算机中的表示"><a href="#数值与字符在计算机中的表示" class="headerlink" title="数值与字符在计算机中的表示"></a>数值与字符在计算机中的表示</h2><h3 id="计算机中数值型数据的编码"><a href="#计算机中数值型数据的编码" class="headerlink" title="计算机中数值型数据的编码"></a>计算机中数值型数据的编码</h3><ul><li>机器数与真值</li></ul><p>通常一个数的最高位为<code>符号位</code>，用<code>0表示正，1表示负</code>，称为<code>数符</code>　<br><br>若机器的字长为8位，则$D_7$为符号位，$D_6$到$D_0$为数值位，比如$(11100001)<em>2=(-97)</em>{10}$ <br><br><strong>机器数</strong>：<code>机器内存放的正负符号数码化的数</code> <br><br>比如真值$(-1100001)_2$的机器数是11100001 <br><br>另外为了运算方便，机器数中的负数有3种表示方法：<code>原码</code>，<code>补码</code>，<code>反码</code>　<br></p><ul><li>定点数和浮点数</li></ul><p>定点数分为<code>定点整数</code>和<code>定点小数</code>，利用浮点数可以扩大实数的表示范围，即<code>科学计数法</code>. <br></p><h3 id="计算机中字符型数据的编码"><a href="#计算机中字符型数据的编码" class="headerlink" title="计算机中字符型数据的编码"></a>计算机中字符型数据的编码</h3><ul><li><p>ASCII码</p></li><li><p>汉字编码</p></li></ul><h1 id="字符集和保留字"><a href="#字符集和保留字" class="headerlink" title="字符集和保留字"></a>字符集和保留字</h1><h2 id="基本符号集"><a href="#基本符号集" class="headerlink" title="基本符号集"></a>基本符号集</h2><ul><li><p>数字10个 <br><br>0,1,2,…,9 <br></p></li><li><p>大小写字母各26个　<br></p></li><li><p>下划线</p></li><li>特殊符号</li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li>用户标识符</li></ul><p>即用户自定义的变量名字，要求由<code>字母，数字，下划线</code>组成，且<code>不能以数字开头</code>，<code>区分大小写</code>　<br></p><ul><li>保留字</li></ul><p>自带的，比如<code>char,int</code>等，总计32个　<br></p><ul><li>预定义标识符</li></ul><p><code>#define</code>和<code>#include</code> 之类的，挺有用的　<br></p><h1 id="C语言的数据类型"><a href="#C语言的数据类型" class="headerlink" title="C语言的数据类型"></a>C语言的数据类型</h1><ul><li>基本类型</li></ul><p>整型(int，short，long)+实型(float，double)+字符型(char)<br></p><ul><li>构造类型</li></ul><p>数组类型＋结构体类型(struct)+共用体类型(union)+枚举类型(enum) <br></p><ul><li>指针类型</li></ul><p>指针类型(*) <br></p><ul><li>空类型</li></ul><p>空类型(void)</p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><h2 id="数值常量"><a href="#数值常量" class="headerlink" title="数值常量"></a>数值常量</h2><ul><li>整型常量　<br></li></ul><p>八进制整型常量必须以0开头，数码取0~7，通常是无符号数<br><br>十六进制整型常量的前缀为0X或0x，数码取值0~9，A~F或a~f <br><br>十进制整型常量无前缀，数码为0~9 <br></p><ul><li>实型常量</li></ul><p>也就是我们所说的浮点数　<br><br>小数形式＋指数形式(科学计数法)</p><h2 id="字符常量和字符串常量"><a href="#字符常量和字符串常量" class="headerlink" title="字符常量和字符串常量"></a>字符常量和字符串常量</h2><ul><li>字符常量</li></ul><p>用<code>单引号</code>括住，可作为整数常量来处理(指ASCII值)，<code>a=&#39;a&#39;+1=97+1=98</code>　<br><br>还有一些不可显示的字符，如换行，回车等，以反斜杠开头　<br><br>注意转移字符的使用，比如<code>&#39;\&quot;&#39;</code>表示双引号，<code>&#39;\\&#39;</code>表示反斜杠</p><ul><li>字符串常量</li></ul><p>用<code>双引号</code>括住，比如”I love China!”<br><br>注意转义字符的使用：比如<code>he said he is a &quot;super man&quot;</code>可以表示为<code>&quot;he said he is a \&quot;super man \&quot;&quot;</code>，程序如下：<br><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"he said he is a \"super man\""</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he said he is a <span class="string">"super man"</span></span><br></pre></td></tr></table></figure></p><p>不同于字符常量的是，字符串常量以<code>&#39;\0&#39;</code>结束，但不显示<code>&#39;\0&#39;</code>，从而C语言中字符串的长度不受限制<br></p><h2 id="符号常量"><a href="#符号常量" class="headerlink" title="符号常量"></a>符号常量</h2><p><code>#define PI 3.1415926</code>诸如此类，必须<code>大写</code></p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>变量3要素：<code>变量名＋变量的存储单元＋变量(存储单元存放)的值</code><br></p><h2 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h2><p>定义变量3要素：<strong>存储类型(auto,static)+数据类型＋变量名</strong>　<br></p><p>通常我们省略的存储类型，默认是<code>auto</code>，即都会把变量存放在<code>动态存储区</code>（栈区），这种变量在程序运行过程中实时分配和释放.<br><br>而<code>static</code>定义的变量的存储方式是<code>静态存储</code>的，<code>静态局部变量是放在静态存储区的</code>，在整个程序运行期间都不释放，跟全局变量一样长期占用内存。但是静态局部变量和全局变量还是不一样的，比如说，静态局部变量只能在所定义的函数内引用，静态局部变量在函数调用结束后是仍然存在的，但不能被其他函数引用。<strong>静态局部变量是在编译时赋初值的，即只赋初值一次，在程序运行时它已经有了初值，以后每次调用函数时不再对其重新复制，而只是保留上次函数调用结束时的值。</strong>在定义静态局部变量时，如不赋初值，则编译时自动赋初值为0。有时在程序设计中定义一个全局变量，只限于被所在源文件引用，而不想让其他文件引用，则可在定义全局变量前面加static，即静态全局变量。(此段引用自<a href="https://blog.csdn.net/he__yuan/article/details/79477882" target="_blank" rel="noopener">https://blog.csdn.net/he__yuan/article/details/79477882</a>)　<br></p><ul><li>整型变量</li></ul><p>基本型<code>int</code>,占4字节<br><br>短整型<code>short int</code> 或者<code>short</code>，占２字节　<br><br>长整型<code>long int</code> 或者<code>long</code>，占4字节，与基本型一样　<br><br>无符号型<code>unsigned</code></p><p>对于无符号型，由于没有符号位，所以不能表示负数　<br></p><ul><li>实型变量</li></ul><p><code>单精度类型</code>(float，占4字节)和<code>双精度类型</code>(double，占8字节) <br></p><p>-　字符变量</p><p><code>char</code>，占1字节，每个字符只能防放一个字符，由于C语言中没有字符串变量，如果需要把字符串放在变量中，就需要一个字符型数组来实现<br><br>比如下面这各个，我将<code>字符串常量</code>“china”赋给a这个<code>变量</code>，由于上述原因，a只能接受一个字符，故产生异常:<br><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a=<span class="string">"china"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p0.c: In function ‘main’:</span><br><span class="line">p0.c:<span class="number">4</span>:<span class="number">8</span>: warning: initialization makes integer from pointer without a cast [-Wint-conversion]</span><br><span class="line"> <span class="keyword">char</span> a=<span class="string">"china"</span>;</span><br><span class="line">        ^~~~~~~</span><br></pre></td></tr></table></figure></p><p>而将”china”这个字符串改为字符’a’,再次运行：　<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>就能正常输出’a’的ASCII码的值了，即97.<br></p><h2 id="变量的存储"><a href="#变量的存储" class="headerlink" title="变量的存储"></a>变量的存储</h2><p><strong>存储某变量的内存空间的首地址称为变量的地址</strong>，变量地址用<code>&amp;变量名</code>来表示,<code>&amp;</code>表示取地址，即取存储空间首地址<br><br><strong>注意</strong>：虽然地址的值在形式上和整型数一样，也可以用十进制或者十六进制表示，但意义不一样.整型数有算数，关系，逻辑等运算，而<code>地址只有有限的算数运算和关系运算</code>.<br><br>还有，<code>地址的值一定是一个整型量</code>.</p><h2 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a>变量的初始化</h2><p>直接举个栗子：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">a=<span class="number">1</span>;</span><br><span class="line">b=<span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>等价于<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">2</span>;</span><br></pre></td></tr></table></figure></p><h1 id="数据的输入和输出"><a href="#数据的输入和输出" class="headerlink" title="数据的输入和输出"></a>数据的输入和输出</h1><p>C语言的所有输入和输出操作都是调用<code>标准I/O库函数</code>　<br></p><h2 id="格式输入-输出函数"><a href="#格式输入-输出函数" class="headerlink" title="格式输入/输出函数"></a>格式输入/输出函数</h2><ul><li>格式输入函数</li></ul><p><code>printf(格式控制字符串,输出项表)</code></p><ul><li>格式输入函数</li></ul><p><code>scanf(格式控制字符串,输入项地址表)</code></p><h2 id="字符输入-输出函数"><a href="#字符输入-输出函数" class="headerlink" title="字符输入/输出函数"></a>字符输入/输出函数</h2><ul><li>字符输出函数</li></ul><p><code>putchar(ch)</code>，<code>ch</code>可以使整型变量或者字符型变量.<br><br>这将输出字符，比如：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">97</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这将输出两个a，各占一行，即<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">a</span><br></pre></td></tr></table></figure></p><p>提示：97是’a’的ASCII码.　<br></p><ul><li>字符输入函数</li></ul><p><code>getchar()</code>，无参数<br></p><p>举个例子就清楚了：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> a ;</span><br><span class="line">   a=getchar();</span><br><span class="line">   <span class="built_in">putchar</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输入a，程序将输出a<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据在计算机内部的表示&quot;&gt;&lt;a href=&quot;#数据在计算机内部的表示&quot; class=&quot;headerlink&quot; title=&quot;数据在计算机内部的表示&quot;&gt;&lt;/a&gt;数据在计算机内部的表示&lt;/h1&gt;&lt;h2 id=&quot;常用的进位制&quot;&gt;&lt;a href=&quot;#常用的进位制&quot; cla
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>求解线性方程组的直接方法</title>
    <link href="http://yoursite.com/2018/10/14/%E6%B1%82%E8%A7%A3%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84%E7%9B%B4%E6%8E%A5%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/14/求解线性方程组的直接方法/</id>
    <published>2018-10-14T08:54:44.000Z</published>
    <updated>2018-10-14T08:54:45.010Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>考研英语词汇漫漫路</title>
    <link href="http://yoursite.com/2018/10/14/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/"/>
    <id>http://yoursite.com/2018/10/14/考研英语词汇/</id>
    <published>2018-10-14T06:02:19.000Z</published>
    <updated>2018-10-17T14:15:49.527Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">博客将按照学习进度来更新，加油吧少年！---------To myself</span><br></pre></td></tr></table></figure><h2 id="Unit-1"><a href="#Unit-1" class="headerlink" title="Unit 1"></a>Unit 1</h2><ul><li><p>accord</p><blockquote><p>1.accord <em>v.符合，给予，何意　n.和谐；according to …是根据的意思</em><br><br>2.core<em>n.核</em><br><br>3.record<br><br>4.recoding<br><br>5.recorder<br></p></blockquote></li><li><p>take</p><blockquote><p>mistake</p></blockquote></li></ul><ul><li><p>use</p><blockquote><p>1.use<br><br>2.useful<br><br>3.misuse<br><br>4.user<br></p></blockquote></li><li><p>example</p><blockquote><p>1.sample　<em>n.样本</em><br><br>2.exemplify　<em>v.例证</em><br></p></blockquote></li><li><p>work</p><blockquote><p>1.homework<br><br>2.workforce <em>v.劳动力</em><br><br>3.framework　<em>n.框架</em><br><br>4.network　<em>n.网络</em><br><br>5.teamwork<br></p></blockquote></li><li><p>time</p><blockquote><p>1.temporary–&gt;contemporary　<em>adj.同时的，现代的</em><br><br>2.chronic <em>n.慢性病</em>–&gt;chronicle　<em>n.编年史</em>；synchronize　<em>v.同步</em><br></p></blockquote></li><li><p>through</p><blockquote><p>throughout　<em>始终，adv.各处，prep.历来</em><br></p></blockquote></li><li><p>give</p><blockquote><p>1.giver<br><br>2.gift<br><br>3.donate<br><br>4.gifted<br><br>5.given <em>prep.(表示原因)考虑到</em><br> </p></blockquote></li><li><p>suggest</p><blockquote><p>1.suggestion<br><br>2.register<br><br>3.digest　<em>v.消化</em><br><br>4.digestive　<em>adj.消化的</em><br><br>5.digestion　<em>n.消化</em><br></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axx结构表强调</span><br></pre></td></tr></table></figure><h2 id="Unit-2"><a href="#Unit-2" class="headerlink" title="Unit 2"></a>Unit 2</h2><ul><li><p>author</p><blockquote><p>1.authority <em>n. 权威（机构）</em><br><br>2.authorize <em>v.使…权威化，授权</em><br><br>3.authentic <em>adj.真实的</em>–&gt;authenticity <em>n.真伪</em><br></p></blockquote></li><li><p>social </p><blockquote><p>1.society–&gt;sociologist<br><br>2.association <em>n. 协会</em><br><br>3.associate　<em>v.关联，n.联想，adj.副的，比如副教授就是associate professor</em><br><br>4.socially <em>社交上</em><br></p></blockquote></li><li><p>just</p><blockquote><p>1.justice<em>n.正义，大法官，司法</em><br><br>2.justify<em>v.使…公平</em><br><br>3.justification<br><br>4.adjust <em>调整，适应，adjust to 是适应</em><br><br>5.adjustment <em>n. 调整</em><br><br>6.just <em>adj.公平，正义</em><br></p></blockquote></li><li><p>text</p><blockquote><p>1.context  <em>n.上下文</em><br><br>2.tissue <em>n.(身体）组织</em><br></p></blockquote></li><li><p>state <em>n.状态，国家</em></p><blockquote><p>1.statesman <em>n.政治家（为国家谋利益），而plitician是政客（为自己谋利益）</em><br><br>2.statistic <br><br>3.statistacal<br><br>4.statement–&gt;under/overstatement <em>言(不)过其实</em><br><br>5.statistics <em>n.统计学，统计数据</em></p></blockquote></li><li><p>result</p><blockquote><p>1.consult–&gt;consulting<br><br>2.consultant <em>n.咨询者</em><br></p></blockquote></li><li><p>idea</p><blockquote><p>1.ideal<br><br>2.idealize<br><br>3.idealism<br><br>4.idealist<br><br>5.ideally<br><br>6.ideological <em>adj.思想的–&gt;ideology</em><br></p></blockquote></li><li><p>point</p><blockquote><p>1.wiewpoint==view<br><br>2.appoint <em>v.委派</em><br><br>3.appointment<br></p></blockquote></li></ul><h2 id="Unit-3"><a href="#Unit-3" class="headerlink" title="Unit 3"></a>Unit 3</h2><ul><li>part</li></ul><blockquote><p>1.partial adj.部分的<br><br>2.impartial  意思是“全面的”，前缀-im代表反义，等同于in，这里有一个规定，当-im后面的单词为b/m/p时，要把in改为im,但并不是绝对的，比如unbelievable<br><br>3.partially 部分地<br><br>4.partly 部分地<br><br>5.particular 特别的<br><br>6.particularly表递进，等于especially<br><br>7.<strong>counterpart</strong> 对应物，对应者，特朗普＆习近平就是这么个对应关系<br><br>8.party 聚会，党派,方面，比如the third party 表示第三方<br><br>9.partner　伙伴，伴侣/同性恋<br><br>10.apart 隔开，距离，right here waiting ,此情可待<br><br>11.apartment 住的公寓<br><br>12.department 部门，比如NYPD<br><br>13.depart v.分开，离开；departure n.启程<br></p></blockquote><ul><li>problem</li></ul><blockquote><p>1.question,作为动词表示询问，质疑<br><br>2.require,requirement，要求<br><br>3.request,请求<br><br>4.acquire,acquisition，获得，收购<br><br>5.inquire,inquiry，询问<br></p></blockquote><ul><li>believe 认为<br></li><li>human</li></ul><blockquote><p>词根–hum表示泥土<br><br>1.humanity<br><br>2.humid adj.潮湿的<br><br>3.humidity n.湿度<br><br>4.humble adj.卑微的，谦卑的<br><br>5.humorous adj.幽默的<br></p></blockquote><ul><li>limit</li></ul><blockquote><p>1.limitation　n.限制<br><br>2.eliminate　n.根除，如eliminate poverty，消除贫困<br><br>3.preliminary adj.预选的<br></p></blockquote><ul><li>view</li></ul><blockquote><p>1.review v.复习，评论(冷静思考后的评论)，所以reviewer是指评论家<br><br>2.interview，inter指相互，比如international就是国家与国家相互的，即“国际的”，interview表示面试，还可以采访(interviewee是被面试者，interviewer是面试官，采访者)<br></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="英语" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>多元统计第三次上机试验报告</title>
    <link href="http://yoursite.com/2018/10/12/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%B8%89%E6%AC%A1%E4%B8%8A%E6%9C%BA%E8%AF%95%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2018/10/12/多元统计第三次上机试验报告/</id>
    <published>2018-10-12T04:13:24.000Z</published>
    <updated>2018-10-12T04:17:21.207Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=iris[,1:4]</span><br><span class="line">dist.e=dist(data)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model1=hclust(dist.e)</span><br><span class="line">plot(model1)</span><br><span class="line">result0=cutree(model1,k=3)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model2=kmeans(data,centers=3)</span><br><span class="line">model2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">library(MASS)</span><br><span class="line">xxx=iris[,1:4]</span><br><span class="line">yyy=iris[,5]</span><br><span class="line">model2=lda(yyy~.,data=xxx,prior=c(1,1,1)/3)</span><br><span class="line">model2</span><br></pre></td></tr></table></figure><h1 id="附加题"><a href="#附加题" class="headerlink" title="附加题"></a>附加题</h1><p><strong>Prepare:首先将两个附件中数据提取到csv文件中，分别命名为file1.csv，file2.csv</strong></p><h2 id="1-利用附件1中数据对各省进行聚类分析，说明应分成几类，各类包括哪些省份"><a href="#1-利用附件1中数据对各省进行聚类分析，说明应分成几类，各类包括哪些省份" class="headerlink" title="1.利用附件1中数据对各省进行聚类分析，说明应分成几类，各类包括哪些省份."></a>1.利用附件1中数据对各省进行聚类分析，说明应分成几类，各类包括哪些省份.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#read file1</span><br><span class="line">file1=read.csv(&apos;/home/fantasy/Desktop/task3/file1.csv&apos;)</span><br><span class="line">x=file1[,2:9]</span><br><span class="line">x</span><br></pre></td></tr></table></figure><blockquote><p>方法１：系统聚类（层次聚类）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#calculate distance</span><br><span class="line">d=dist(x)</span><br><span class="line">#cluster</span><br><span class="line">hc=hclust(d)</span><br><span class="line">#plot</span><br><span class="line">plot(hc,hang=-1)</span><br></pre></td></tr></table></figure><p>若指定聚类数k和分类高度h,令k=3，h=200:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;result:&quot;)</span><br><span class="line">cutree(hc,k=3,h=200)</span><br></pre></td></tr></table></figure></p><blockquote><p>方法２：k-均值聚类</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kmeans(x,center=3,iter.max=100,nstart=2333)</span><br></pre></td></tr></table></figure><h2 id="2-利用附件2中数据对广东和西藏进行判别，说明其属于哪个类别"><a href="#2-利用附件2中数据对广东和西藏进行判别，说明其属于哪个类别" class="headerlink" title="2.利用附件2中数据对广东和西藏进行判别，说明其属于哪个类别."></a>2.利用附件2中数据对广东和西藏进行判别，说明其属于哪个类别.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file2=read.csv(&apos;/home/fantasy/Desktop/task3/file2.csv&apos;)</span><br><span class="line">xx=file2[1:29,2:9]</span><br><span class="line">yy=file2[1:29,10]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D=dist(xx)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(MASS)</span><br><span class="line">l=lda(yy~.,data=file2[1:29,2:9])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(l)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#make prediction</span><br><span class="line">predict(l,file2[30:31,2:9])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>原来你是这样的薛之谦</title>
    <link href="http://yoursite.com/2018/10/06/xzq/"/>
    <id>http://yoursite.com/2018/10/06/xzq/</id>
    <published>2018-10-06T05:10:04.000Z</published>
    <updated>2018-10-06T05:57:57.311Z</updated>
    
    <content type="html"><![CDATA[<p>本文对薛之谦的部分歌词进行了文本挖掘处理，欢迎围观~</p><blockquote><p>目标：绘制词云图，分析词频并可视化</p></blockquote><h2 id="文本预处理"><a href="#文本预处理" class="headerlink" title="文本预处理"></a>文本预处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读取原始文本文件</span></span><br><span class="line">file=open(<span class="string">'/home/fantasy/Desktop/xzq/薛之谦.txt'</span>)</span><br><span class="line"><span class="comment">#去掉制表符和换行符</span></span><br><span class="line">c=[]</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    line=line.strip(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'\t'</span> <span class="keyword">not</span> <span class="keyword">in</span> line:</span><br><span class="line">        c.append(line)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#去掉非中文字符串</span></span><br><span class="line">d=[]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> c:</span><br><span class="line">    s=re.sub(<span class="string">"[A-Za-z0-9\!\%\[\]\,\。]"</span>, <span class="string">""</span>, s)</span><br><span class="line">    d.append(s)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#去掉空字符串</span></span><br><span class="line">dd=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">''</span> <span class="keyword">and</span> <span class="string">' '</span> <span class="keyword">and</span> <span class="string">' '</span> :</span><br><span class="line">        dd.append(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对文本进行分词处理</span></span><br><span class="line">words=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dd:</span><br><span class="line">    w=jieba.cut(i)</span><br><span class="line">    word=<span class="string">','</span>.join(w)</span><br><span class="line">    words.append(word)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">words[<span class="number">0</span>:<span class="number">10</span>]</span><br></pre></td></tr></table></figure><pre><code>[&apos;\ufeff,夜深人静, ,那,是,爱情&apos;, &apos;偷偷地,控制,着,我,的,心&apos;, &apos;提醒,我, ,爱,你,要,随时,待命&apos;, &apos; &apos;, &apos;音乐,安静, ,还是,爱情,啊&apos;, &apos;一步,一步,吞噬,着,我,的,心&apos;, &apos;爱上你, ,我,失去,了,我,自己&apos;, &apos; &apos;, &apos;爱得,那么,认真, ,爱得,那么,认真&apos;, &apos;可,还是,听见,了,你,说,不,可能&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wo=<span class="string">','</span>.join(words)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(wo)</span><br></pre></td></tr></table></figure><pre><code>str</code></pre><h2 id="词频统计"><a href="#词频统计" class="headerlink" title="词频统计"></a>词频统计</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">counter = &#123;&#125;</span><br><span class="line"><span class="comment"># 如果字典里有该词则加1，否则添加入字典</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s.split(<span class="string">','</span>):</span><br><span class="line">        <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> counter:</span><br><span class="line">            counter[j] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            counter[j] += <span class="number">1</span></span><br><span class="line"><span class="comment">#词频从高到低排序</span></span><br><span class="line">sorted_counter=sorted(counter.items(),key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse = <span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted_counter</span><br></pre></td></tr></table></figure><pre><code>[(&apos; &apos;, 2424), (&apos;我&apos;, 1388), (&apos;的&apos;, 1380), (&apos;你&apos;, 1189), (&apos;了&apos;, 433), (&apos;在&apos;, 358), (&apos;：&apos;, 255), (&apos;是&apos;, 251), (&apos;都&apos;, 209), (&apos;不&apos;, 187), (&apos;着&apos;, 157), (&apos;说&apos;, 157), (&apos;就&apos;, 152), (&apos;谁&apos;, 152), (&apos;爱&apos;, 142), (&apos;薛之谦&apos;, 129), (&apos;还&apos;, 127), (&apos;会&apos;, 121), (&apos;要&apos;, 118), (&apos;我们&apos;, 111), (&apos;人&apos;, 108), (&apos;好&apos;, 102), (&apos;有&apos;, 100), (&apos;过&apos;, 97), (&apos;也&apos;, 93), (&apos;这&apos;, 92), (&apos;多&apos;, 88), (&apos;和&apos;, 87), (&apos;把&apos;, 82), (&apos;又&apos;, 82), (&apos;吗&apos;, 82), (&apos;到&apos;, 80), (&apos;自己&apos;, 79), ...]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x=sorted_counter[<span class="number">1</span>:<span class="number">35</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x</span><br></pre></td></tr></table></figure><pre><code>[(&apos;我&apos;, 1388), (&apos;的&apos;, 1380), (&apos;你&apos;, 1189), (&apos;了&apos;, 433), (&apos;在&apos;, 358), (&apos;：&apos;, 255), (&apos;是&apos;, 251), (&apos;都&apos;, 209), (&apos;不&apos;, 187), (&apos;着&apos;, 157), (&apos;说&apos;, 157), (&apos;就&apos;, 152), (&apos;谁&apos;, 152), (&apos;爱&apos;, 142), (&apos;薛之谦&apos;, 129), (&apos;还&apos;, 127), (&apos;会&apos;, 121), (&apos;要&apos;, 118), (&apos;我们&apos;, 111), (&apos;人&apos;, 108), (&apos;好&apos;, 102), (&apos;有&apos;, 100), (&apos;过&apos;, 97), (&apos;也&apos;, 93), (&apos;这&apos;, 92), (&apos;多&apos;, 88), (&apos;和&apos;, 87), (&apos;把&apos;, 82), (&apos;又&apos;, 82), (&apos;吗&apos;, 82), (&apos;到&apos;, 80), (&apos;自己&apos;, 79), (&apos;让&apos;, 79), (&apos;能&apos;, 78)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xlabel=[]</span><br><span class="line">ylabel=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">    xl=i[<span class="number">0</span>]</span><br><span class="line">    yl=i[<span class="number">1</span>]</span><br><span class="line">    xlabel.append(xl)</span><br><span class="line">    ylabel.append(yl)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xnames</span><br></pre></td></tr></table></figure><pre><code>[&apos;我&apos;, &apos;的&apos;, &apos;你&apos;, &apos;了&apos;, &apos;在&apos;, &apos;：&apos;, &apos;是&apos;, &apos;都&apos;, &apos;不&apos;, &apos;着&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties </span><br><span class="line">font = FontProperties(fname=<span class="string">r"/home/fantasy/Desktop/xzq/华文行楷.ttf"</span>, size=<span class="number">8</span>) </span><br><span class="line">font1 = FontProperties(fname=<span class="string">r"/home/fantasy/Desktop/xzq/华文行楷.ttf"</span>, size=<span class="number">15</span>)</span><br><span class="line">xnames=xlabel</span><br><span class="line">xx= range(len(xnames))</span><br><span class="line">plt.plot(xx,ylabel,<span class="string">'o-'</span>,color=<span class="string">'red'</span>)</span><br><span class="line">plt.xticks(xx,xnames,rotation = <span class="number">0</span>,fontproperties=font)</span><br><span class="line">plt.xlabel(<span class="string">'排名前10的词'</span>,fontproperties=font1)</span><br><span class="line">plt.ylabel(<span class="string">'频数'</span>,fontproperties=font1)</span><br><span class="line">plt.title(<span class="string">'薛之谦歌词中出现字词排名靠前的几个'</span>,fontproperties=font1)</span><br></pre></td></tr></table></figure><pre><code>Text(0.5,1,&apos;薛之谦歌词中出现字词排名靠前的几个&apos;)</code></pre><p><img src="output_18_1.png" alt="png"></p><p>可见，出现最多的字词为“我”，“的”，“你”</p><h2 id="绘制词云图"><a href="#绘制词云图" class="headerlink" title="绘制词云图"></a>绘制词云图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fig=WordCloud(collocations=<span class="keyword">False</span>,font_path=<span class="string">'/home/fantasy/Desktop/xzq/华文行楷.ttf'</span>,width=<span class="number">1400</span>,height=<span class="number">1400</span>,min_font_size=<span class="number">3</span>,margin=<span class="number">2</span>).generate(wo)</span><br><span class="line">plt.imshow(fig)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.title(<span class="string">'薛之谦歌词词云图'</span>,fontproperties=font1)</span><br></pre></td></tr></table></figure><pre><code>Text(0.5,1,&apos;薛之谦歌词词云图&apos;)</code></pre><p><img src="output_21_1.png" alt="png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文对薛之谦的部分歌词进行了文本挖掘处理，欢迎围观~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目标：绘制词云图，分析词频并可视化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;文本预处理&quot;&gt;&lt;a href=&quot;#文本预处理&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="Python自然语言处理" scheme="http://yoursite.com/categories/Python%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/"/>
    
    
      <category term="文本分析＆挖掘,Python" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC%E5%88%86%E6%9E%90%EF%BC%86%E6%8C%96%E6%8E%98-Python/"/>
    
  </entry>
  
  <entry>
    <title>解决在Anoconda环境下安装第三方库的问题</title>
    <link href="http://yoursite.com/2018/10/06/%E8%A7%A3%E5%86%B3%E5%9C%A8Anoconda%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/06/解决在Anoconda环境下安装第三方库的问题/</id>
    <published>2018-10-06T02:53:21.000Z</published>
    <updated>2018-10-06T05:53:02.279Z</updated>
    
    <content type="html"><![CDATA[<p>在Anoconda环境下安装第三方库，使用其自带的pip即可　<br><br>比如安装wordcloud<br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /home/fantasy/anaconda3/bin/pip install wordcloud</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Anoconda环境下安装第三方库，使用其自带的pip即可　&lt;br&gt;&lt;br&gt;比如安装wordcloud&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="Python日常小bug" scheme="http://yoursite.com/categories/Python%E6%97%A5%E5%B8%B8%E5%B0%8Fbug/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github免费搭建炫酷个人博客</title>
    <link href="http://yoursite.com/2018/10/03/Hexo-Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%82%AB%E9%85%B7%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/10/03/Hexo-Github免费搭建炫酷个人博客/</id>
    <published>2018-10-03T04:10:04.000Z</published>
    <updated>2018-10-03T07:28:09.007Z</updated>
    
    <content type="html"><![CDATA[<p>一直有一个搭建个人博客的想法，之前折腾过Python的Django框架，但没有足够的时间和精力去系统的学习Django，最后不了了之。趁着这次国庆假期，想法又涌上心头，一顿搜索后，Hexo成功地引起了我的注意。Hexo搭配Github，可以实现免费建站，具体来说，就是将博客的一些配置文件以及博客内容同步存储到你自己的Github仓库而不需要额外购买域名。这篇文章便记录了从零开始利用Hexo+Github实现免费搭建个人博客的步骤。<br></p><h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问　http://nodejs.cn/download/，下载系统对应的版本安装即可</span><br></pre></td></tr></table></figure><h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问 https://git-scm.com/downloads，同上</span><br></pre></td></tr></table></figure><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>使用npm来安装Hexo，所以先安装npm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure></p><p>然后就可以安装Hexo了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli g</span><br></pre></td></tr></table></figure></p><p>注意：使用npm网速较慢，建议多试几次，或者直接切换为国内源：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure></p><h3 id="4-使用Hexo"><a href="#4-使用Hexo" class="headerlink" title="4.使用Hexo"></a>4.使用Hexo</h3><p>首先创建一个用来存放博客的文件夹，比如我创建了一个名字为”myblog”的文件夹，那么就进入该文件夹目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/fantasy/Desktop/myblog</span><br></pre></td></tr></table></figure></p><p>注意：cd 后面的是你的文件夹的完整路径<br></p><p>接下来初始化你的文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure></p><p>之后你就会看到文件夹出现了一堆文件，如图<br><br><img src="1.png" alt=""> <br><br>现在基本的操作就完成了<br></p><h3 id="5-在本地部署博客"><a href="#5-在本地部署博客" class="headerlink" title="5.在本地部署博客"></a>5.在本地部署博客</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo claen</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>首先安装server<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure></p><p>然后开启本地服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo sever</span><br></pre></td></tr></table></figure></p><p>会输出一个网址，如图<br><br><img src="2.png" alt=""> <br><br>复制输出的网址，在浏览器中打开即可访问博客，或者也可以直接复制以下网址<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure></p><h3 id="6-将博客部署到Github上"><a href="#6-将博客部署到Github上" class="headerlink" title="6.将博客部署到Github上"></a>6.将博客部署到Github上</h3><p>首先去官网注册一个Github账号，然后登入你的账号<br><br>现在来创建一个新的Repositories,配置如图<br><br><img src="3.png" alt="">　<br><br>然后配置生成ssh key <br></p><h5 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh </span><br><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>接着是一路回车<br><br>然后输入以下代码<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>你会看到输出了一些字符串，这就是SSH密钥，复制它们<br><br>接下来进入你的Github主页，如图<br><br><img src="4.png" alt=""> <br><br>接下来的步骤都写在图片里了，看图<br><br><img src="5.png" alt=""> <br><br><img src="6.png" alt=""><br><br>点击左侧的SSH and GPG keys，继续看图<br><br><img src="7.png" alt=""> <br><br><img src="8.png" alt=""> <br><br>现在，将之前复制的内容粘贴到上图所示位置的Key框里面，点击Add SHH key，SSH key配置完毕<br></p><h4 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config –global user.ame “xxx” </span><br><span class="line">git config –global user.mail “xxx@xxx.com”</span><br></pre></td></tr></table></figure><p>其中，第一个xxx填写你的Github用户名，也就是之前创建Repositories的时候在用的那个；<br><br>第二个需要把双引号里面的内容替换为你注册Github时所使用的邮箱<br><br>这样子就配置完成了<code>Git</code>，可以输入下面的代码做一个测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>进入之前你创建的文件夹,打开<code>config.yml</code>文件，拉到最下面，修改deploy的配置为如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>其中的usename改为你自己的Github用户名即可，点击保存<br></p><h4 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h4><p>终于到这一步了<br><br>依下次输入以下3行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>这样子部署工作就彻底完成了<br></p><h3 id="8-测试访问你的博客"><a href="#8-测试访问你的博客" class="headerlink" title="8.测试访问你的博客"></a>8.测试访问你的博客</h3><p>在浏览器的网址输入框输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usename.github.io</span><br></pre></td></tr></table></figure></p><p>其中,usename依旧是你的Github用户名<br></p><p>以上便是搭建博客的全部步骤</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直有一个搭建个人博客的想法，之前折腾过Python的Django框架，但没有足够的时间和精力去系统的学习Django，最后不了了之。趁着这次国庆假期，想法又涌上心头，一顿搜索后，Hexo成功地引起了我的注意。Hexo搭配Github，可以实现免费建站，具体来说，就是将博客
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>年金</title>
    <link href="http://yoursite.com/2018/10/01/%E5%B9%B4%E9%87%91/"/>
    <id>http://yoursite.com/2018/10/01/年金/</id>
    <published>2018-10-01T13:20:01.000Z</published>
    <updated>2018-10-29T14:53:11.249Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标准型年金"><a href="#标准型年金" class="headerlink" title="标准型年金"></a>标准型年金</h3><p>在此之前，先来谈一下关于折现到零时刻和积累到某（n）时刻的意思.<br><br>以期末付年金为例：<br><br>所谓零时刻，就是第一期的开始时刻，即1期初<br><br>所谓积累到某时刻，就是说某（n）时刻末尾，也就是第(n+1)期初.<br><br>以期末付标准型年金为例，如下图所示：<br><br><img src="1.jpg" alt=""> <br><br>另外，期初付年金核算公式推导如下<br><br><img src="2.jpg" alt=""></p><h3 id="一般型年金"><a href="#一般型年金" class="headerlink" title="一般型年金"></a>一般型年金</h3><h4 id="变利率年金"><a href="#变利率年金" class="headerlink" title="变利率年金"></a>变利率年金</h4><blockquote><p>１. 各付款期间段的利率不同，就是说在每个期间段都按照该期间段的利率来核算，所以年金现值为$a_{n┒}=(1+i_1)^{-1}+(1+i_1)^{-1}(1+i_2)^{-1}+…+(1+i_1)^{-1}(1+i_2)^{-1}…(1+i_n)^{-1}=\sum_{t=1}^n\prod_{s=1}^{t}(1+i_s)^{-1}$ <br>年金积累值为$s_n┒=1+(1+i_n)+(1+i_n)(1+i_{n-1})+…+(1+i_n)…(1+i_2)=\sum_{t=1}^{n}\prod_{s=0}^{t-1}(1+i_{n-s+1})$,令$i_{n+1}=0$ .<br><br>２. 各次付款所依据的利率不同，就是说利率是按照每次付款来计算的，当把某一次付款折现到０时刻或者积累到某时刻时，利率都是按照该次付款的利率，而不是随着付款的期间而变动，这样子，年金现值为$a_{n┒}=(1+i_1)^{-1}+(1+i_2)^{-2}+…+(1+i_n)^{-n}=\sum_{t=1}^{n}(1+i_t)^{-t}$，积累值为$s_{n┒}=(1+i_1)^{n-1}+(1+i_2)^{n-2}+…+(1+i_n)+1=\sum_{t=1}^{n}(1+i_t)^{n-t}$</p></blockquote><p><img src="3.jpg" alt=""> <br><br><img src="4.jpg" alt=""> <br></p><h4 id="付款频率与计息频率不同的年金"><a href="#付款频率与计息频率不同的年金" class="headerlink" title="付款频率与计息频率不同的年金"></a>付款频率与计息频率不同的年金</h4><p><img src="05.jpg" alt=""> <br><br><img src="06.jpg" alt=""> <br><br><img src="07.jpg" alt=""> <br></p><h4 id="连续年金"><a href="#连续年金" class="headerlink" title="连续年金"></a>连续年金</h4><p>连续年金，即付款频率无限大的年金，是付款频率大于计息频率的特例,就是在一个计息期内无限次付款<br><br><img src="08.jpg" alt=""> <br></p><h4 id="基本变化年金"><a href="#基本变化年金" class="headerlink" title="基本变化年金"></a>基本变化年金</h4><p><img src="9.jpg" alt=""> <br></p><h4 id="更一般变化年金"><a href="#更一般变化年金" class="headerlink" title="更一般变化年金"></a>更一般变化年金</h4><p><img src="10.jpg" alt=""><br><br><img src="11.jpg" alt=""><br><br><img src="12.jpg" alt=""><br></p><h4 id="连续变化年金"><a href="#连续变化年金" class="headerlink" title="连续变化年金"></a>连续变化年金</h4><p><img src="13.jpg" alt=""> <br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;标准型年金&quot;&gt;&lt;a href=&quot;#标准型年金&quot; class=&quot;headerlink&quot; title=&quot;标准型年金&quot;&gt;&lt;/a&gt;标准型年金&lt;/h3&gt;&lt;p&gt;在此之前，先来谈一下关于折现到零时刻和积累到某（n）时刻的意思.&lt;br&gt;&lt;br&gt;以期末付年金为例：&lt;br&gt;&lt;br&gt;所
      
    
    </summary>
    
      <category term="金融数学" scheme="http://yoursite.com/categories/%E9%87%91%E8%9E%8D%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>多元统计与R语言第二次上机作业</title>
    <link href="http://yoursite.com/2018/10/01/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E4%B8%8ER%E8%AF%AD%E8%A8%80%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BD%9C%E4%B8%9A/"/>
    <id>http://yoursite.com/2018/10/01/多元统计与R语言第二次上机作业/</id>
    <published>2018-10-01T09:05:04.000Z</published>
    <updated>2018-10-01T09:11:34.556Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><figcaption><span>setup, include</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure><p>1.1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data1=read.csv(&apos;/home/fantasy/Desktop/r2/data/data1.csv&apos;,sep=&apos;,&apos;,header =F )</span><br><span class="line">print(data1)</span><br></pre></td></tr></table></figure></p><p>1.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data2=read.csv(&apos;/home/fantasy/Desktop/r2/data/data2.csv&apos;)</span><br><span class="line">print(data2)</span><br></pre></td></tr></table></figure></p><p>1.3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data3=read.table(&apos;/home/fantasy/Desktop/r2/data/data3.csv&apos;,sep=&apos;,&apos;,header=F)</span><br><span class="line">print(data3)</span><br></pre></td></tr></table></figure></p><p>1.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mydata=read.csv(&apos;/home/fantasy/Desktop/train.csv&apos;)</span><br><span class="line">print(mydata)</span><br></pre></td></tr></table></figure></p><p>2.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=seq(0,100,1)</span><br><span class="line">plot(x,x+1/x)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=seq(1,100,0.001)</span><br><span class="line">plot(x,exp(-(x^2)))</span><br></pre></td></tr></table></figure><p>3.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=rnorm(100,60,10)</span><br><span class="line">x</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(x,conf.level=0.95)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(x,mu=60)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(x,mu=60,alternative = &apos;greater&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(x,mu=60,alternative = &apos;less&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=rnorm(100,0,1)</span><br><span class="line">y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var.test(x,y,conf.level = 0.95)</span><br></pre></td></tr></table></figure><p>4.1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binom.test(x=656,n=1000,p=1/2)</span><br></pre></td></tr></table></figure></p><p>4.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=rexp(100,2)</span><br><span class="line">s</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(s)</span><br></pre></td></tr></table></figure><p>5.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=read.csv(&apos;/home/fantasy/Desktop/r2/data/成绩单.csv&apos;)</span><br><span class="line">data</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chinese=c(data[,3])</span><br><span class="line">math=data[,4]</span><br><span class="line">english=data[,5]</span><br><span class="line">mean(chinese)</span><br><span class="line">mean(math)</span><br><span class="line">mean(english)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var(chinese)</span><br><span class="line">var(math)</span><br><span class="line">var(english)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hist(chinese)</span><br><span class="line">hist(math)</span><br><span class="line">hist(english)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data[,2][data[,5][data[,3]&gt;120 &amp; data[,4]&gt;120]]</span><br><span class="line">mean(data[,5][data[,3]&gt;120 &amp; data[,4]&gt;120])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total_score=data[,3]+data[,4]+data[,5]</span><br><span class="line">data$total_score=total_score</span><br><span class="line">data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">eng1=data[,5][data[,&apos;total_score&apos;]&gt;300]</span><br><span class="line">chinese1=data[,3][data[,&apos;total_score&apos;]&gt;300]</span><br><span class="line">eng2=data[,5][data[,&apos;total_score&apos;]&lt;300]</span><br><span class="line">chinese2=data[,3][data[,&apos;total_score&apos;]&lt;300]</span><br><span class="line">print(cor.test(eng1,chinese1))</span><br><span class="line">print(cor.test(eng2,chinese2))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;setup, include&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>多元统计与R语言第一次上机作业</title>
    <link href="http://yoursite.com/2018/10/01/%E5%A4%9A%E5%85%83%E7%BB%9F%E8%AE%A1%E4%B8%8ER%E8%AF%AD%E8%A8%80%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8A%E6%9C%BA%E4%BD%9C%E4%B8%9A/"/>
    <id>http://yoursite.com/2018/10/01/多元统计与R语言第一次上机作业/</id>
    <published>2018-10-01T08:51:43.000Z</published>
    <updated>2018-10-01T09:13:04.064Z</updated>
    
    <content type="html"><![CDATA[<p>2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c(1,2,3)</span><br><span class="line">s&lt;-c</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><p>3.1<br><figure class="highlight plain"><figcaption><span>&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((-27)*12)/21</span><br></pre></td></tr></table></figure></p><p>3.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqrt(10)</span><br></pre></td></tr></table></figure></p><p>3.3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log(10)</span><br></pre></td></tr></table></figure></p><p>3.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log10(2+3*pi)</span><br></pre></td></tr></table></figure></p><p>3.5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp(2.7689)</span><br></pre></td></tr></table></figure></p><p>3.6<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(25-5)^3</span><br></pre></td></tr></table></figure></p><p>3.7<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cos(pi)</span><br></pre></td></tr></table></figure></p><p>3.8.1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prod(2:3)</span><br></pre></td></tr></table></figure></p><p>3.8.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10*9*8*7*6*5*4</span><br></pre></td></tr></table></figure></p><p>3.8.3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(10*9*8*7*6*5*4)/(40*39*38*37*36)</span><br></pre></td></tr></table></figure></p><p>3.9.1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choose(5,2)</span><br></pre></td></tr></table></figure></p><p>3.9.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choose(7,3)</span><br></pre></td></tr></table></figure></p><p>4.rep<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=c(1,2)</span><br><span class="line">rep(a,2)</span><br></pre></td></tr></table></figure></p><p>4.seq<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seq(from=1,to=10,by=2)</span><br></pre></td></tr></table></figure></p><p>4.matrix<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=c(1,2,3,4,5,6,7,8)</span><br><span class="line">matrix(data,nrow=4,ncol=2,byrow=T)</span><br></pre></td></tr></table></figure></p><p>5.1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnorm(1)</span><br></pre></td></tr></table></figure></p><p>5.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qnorm(0.95)</span><br></pre></td></tr></table></figure></p><p>5.3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpois(100,5)</span><br></pre></td></tr></table></figure></p><p>5.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rnorm(100,60,10)</span><br></pre></td></tr></table></figure></p><p>6.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=c(rnorm(100,0,1))</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(sum(x))</span><br><span class="line">print(mean(x))</span><br><span class="line">print(var(x))</span><br><span class="line">print(sd(x))</span><br><span class="line">print(min(x))</span><br><span class="line">print(max(x))</span><br><span class="line">print(median(x))</span><br><span class="line">print(summary(x))</span><br></pre></td></tr></table></figure><p>7.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=seq(1,10,1)</span><br><span class="line">plot(x,exp(x))</span><br></pre></td></tr></table></figure></p><p>7.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=runif(100,1,10)</span><br><span class="line">print(x)</span><br><span class="line">hist(x)</span><br></pre></td></tr></table></figure></p><p>8.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library(MASS)</span><br></pre></td></tr></table></figure></p><p>9.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ID=c(&apos;01&apos;,&apos;02&apos;,&apos;03&apos;)</span><br><span class="line">class=c(1,2,3)</span><br><span class="line">body_long=c(188,189,190)</span><br><span class="line">weight=c(66,67,65)</span><br><span class="line">df=data.frame(ID,class,body_long,weight)</span><br><span class="line">print(df)</span><br></pre></td></tr></table></figure></p><p>10.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(df[,2])</span><br><span class="line">print(df[2,2])</span><br></pre></td></tr></table></figure></p><p>11.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data0=read.csv(&apos;path+1.csv&apos;)</span><br><span class="line">data1=read.table(&apos;path+1.txt&apos;,header=F)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="R" scheme="http://yoursite.com/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>$n$级行列式</title>
    <link href="http://yoursite.com/2018/10/01/gdds2/"/>
    <id>http://yoursite.com/2018/10/01/gdds2/</id>
    <published>2018-10-01T07:24:05.000Z</published>
    <updated>2018-10-01T07:35:58.993Z</updated>
    
    <content type="html"><![CDATA[<p><strong>二、行列式(8-18)</strong><br><br><code>排列</code> <code>行列式性质</code><br><br>关于<strong>数域</strong>：<code>有理数域是最小的数域，复数域是最大的数域</code><br><br>现在，再次回顾最开头的证明的判断线性方程组的解的个数的定理，我们发现，判别的前提都是得先把线性方程组的增广矩阵经过初等行变换化成阶梯型，但这样子太麻烦了，而且都马上能解出来了，如果仅仅是判断线性方程组的解的个数，这种方法实在是$low$爆了，所以现在咱们要寻找更简单的判断方法<br><br>先来看一个二元线性方程组的例子：<br><img src="5.jpg" alt=""><br><br>没错，我们可以看到，<strong>当该二元线性方程组的系数矩阵行列式不为零时，该线性方程组有唯一解</strong>，事实证明，这个结论对于更高阶的系数矩阵行列式（也可以说是对$n$元线性方程组）是<strong>完全$ok$的，</strong>那么我们该如何证明呢？<br><br>此处先留个悬念，接下来先看一下关于$n$阶行列式的一些知识：<br></p><h3 id="排列"><a href="#排列" class="headerlink" title="排列"></a>排列</h3><ul><li><blockquote><p><strong>逆序数</strong>：一个排列（由$1,2,…,n$组成的一个<strong>有序数组</strong>称为一个<strong>$n$级排列</strong>）中逆序（在一个排列中，如果<strong>一对数</strong>的前后位置与大小顺序相反，那么它们就称为一个<strong>逆序</strong>）的总数就称为这个排列的逆序数.<br></p></blockquote></li><li><blockquote><p>排列的奇偶性：逆序数为偶（奇）数的排列叫做偶（奇）排列.<br></p></blockquote></li><li><blockquote><p><strong>对换</strong>：把一个排列中<strong>某两个数</strong>的位置互换，而其余的数不动，就得到另一个排列，这样的一个变换称为一个对换.（<code>注意：是任意两个数，不一定相邻哦，下面的定理１是为了证明方便才进行的两个相邻元素之间的对换，不要搞混，那只是为了证明.</code>）<br></p></blockquote></li><li><blockquote><p><strong>Th1. 对换改变排列的奇偶性</strong><br><br><strong>证明</strong>：<br><br>先来看两个数相邻的情况：<br><br><img src="06.jpg" alt=""><br><br>排列（１）与排列（２）逆序数相差１，从而两者的奇偶性相反；<br><br>再来看一般情况：<br><br><img src="07.jpg" alt=""><br><br>由排列（３）变换到排列（４），总共经过了$(S+1)+S=2S+1$次相邻两个元素之间的对换，其中$i$移动到$j$的右边需要与它相邻的元素做$S+1$次对换，而$j$在$i$移动到其右侧后，需要再向左与其相邻元素做$S$次对换方可到达原来$i$所在的位置，而$2S+1$是奇数，也就是说总共做了奇数次相邻两元素之间的对换，从而排列（３）与排列（４）的奇偶性相反，证明完毕.<br></p></blockquote></li><li><blockquote><p> Th2. 任意一个$n$级排列$j_1j_2…j_n$与自然序列$123…n$可以经过一系列的对换互变，且所做对换的次数与原来的排列$j_1j_2…j_n$的奇偶性相同.<br><br><strong>证明</strong>：<br><br><img src="8.jpg" alt=""><br><br>假设$j_1j_2…j_n$是奇排列，由于$123…n$　，也就是说排列的奇偶性在经过$S$次对换后变化了，所以一定做了奇数次对换，故$S$为奇数.同理若假设一开始的$j_1j_2…j_n$是偶排列，由于$j_1j_2…j_n$也是偶排列，所以做了偶数次对换，即$S$此时为偶数，证明完毕，很简单吧.<br></p></blockquote></li></ul><h3 id="n-级行列式"><a href="#n-级行列式" class="headerlink" title="$n$级行列式"></a>$n$级行列式</h3><ul><li><blockquote><p>$n$级行列式是$n!$项的代数和<br><br><img src="09.png" alt="ｎ级行列式的定义"><br></p></blockquote></li></ul><ul><li>对于上述$n$级行列式，我们可以取出其中任意一项$(-1)^{ι<br>(j_1j_2…j_n)}a_{1j_1}a_{2j_2}…a_{nj_n}$（从全部的$n!$项中取,注意到这里还是按照行指标顺序排列，列指标进行全排列的那种）可以得到以下结论：<br><br><img src="9.jpg" alt=""><br><br>证明如下：<br><br><img src="10.jpg" alt=""><br><br>那么这个结论有什么用处呢？继续往下看你就明白了<br><br>我们把之前任取的$(-1)^{ι<br>(j_1j_2…j_n)}a_{1j_1}a_{2j_2}…a_{nj_n}$<br>搬过来先，然后按照证明里面的套路分别将行指标和列指标做对换，和证明中唯一不同之处在于，我们现在让列指标对换成自然排列（$12…n$），那么其逆序数为零，即$ι<br>(12…n)=0$.好，现在开始代上述结论公式，则有<br>$detA=\sum{(-1)^{ι<br>(j_1j_2…j_n)}a_{1j_1}a_{2j_2}…a_{nj_n}}=\sum{(-1)^{ι<br>(i_1i_2…i_n)+ι(12…n)}a_{i_11}a_{i_22}…a_{i_nn}}$<br>$=\sum{(-1)^{ι<br>(i_1i_2…i_n)}a_{i_11}a_{i_22}…a_{i_nn}.}$ <br><br>观察最右侧的式子，可以看出，它是把列指标按照自然顺序排列，而且符号由行指标的逆序数决定，这和我们之前（第一个等号右面的那一项）先将行指标按自然顺序排列，而符号由列指标的逆序数决定正好相反，但是，它们却是相等的，都代表着行列式$A$，即上式中的$det  Ａ$.<br><br>这就不禁让我们思考，行和列之间似乎有着某种对称的关系.事实上的确如此，并且据此我们还可以得到关于行列式的一些性质，下面就来看一下这些有用的性质都是何方神圣.<br></li></ul><p>行列式的性质：</p><ul><li><blockquote><p>性质１． 行列互换，行列式不变（也就是说行列式的转置的值和行列式的值本身是等的）；<br><br><img src="11.jpg" alt=""><br></p></blockquote></li><li><blockquote><p>性质２． 以一数乘行列式的一行就相当于用这个数乘次行列式.（如果行列式中一行为０，那么行列式为零)；<br><br><img src="12.jpg" alt=""><br></p></blockquote></li><li><blockquote><p>性质３． 如果某一行是两组数的和，那么这个行列式就等于两个行列式的和，而这两个行列式除这一行以外全与原来行列式的对应行一样；<br></p></blockquote></li><li><blockquote><p>性质４．　如果行列式中有两行相同，那么行列式为零．所谓两行相同就是说两行的对应元素都相等；<br><br><img src="14.jpg" alt=""><br></p></blockquote></li><li><blockquote><p>性质５．　如果行列式的两行成比例，那么行列式为零；<br><br><img src="15.jpg" alt=""><br></p></blockquote></li><li><blockquote><p><strong>性质６．　把一行的倍数加到另一行，行列式不变；</strong><br><br><img src="16.jpg" alt=""><br></p></blockquote></li><li><blockquote><p>性质７．　对换行列式中两行的位置，行列式反号．<br><br><img src="13.jpg" alt=""><br></p></blockquote></li></ul><p><em>应用行列式的性质，可以解决大部分的行列式计算，这里不再列举<br></em></p><ul><li>$n$级矩阵$A=(a_{ij})$，划去$A$的$(i,j)$元所在的第$i$行和第$j$列,剩下的元素按照原来的顺序构成一个$n-1$阶行列式，称之为$A$的$(i,j)$元的<strong>余子式</strong>，记做$M_{ij}$，令$A_{ij}=(-1)^{i+j}M_{ij}$，称之为$A$的$(i,j)$元的<strong>代数余子式</strong>.<br><br>有了代数余子式的概念之后，计算行列式就变得简单起来，或者说我们又找到了一个新的计算行列式的方法，继续向下看.<br><br><strong>下面惊现４个定理！</strong></li><li><strong> Theory</strong>：$n$级矩阵$A=(a_{ij})$的行列式$|A|=a_{i1}A_{i1}+a_{i2}A_{i2}+…+a_{in}A_{in}$=$\sum_{j=1}^n{a_{ij}A_{ij}}$，其中$i=1,2,…,n$.<br><br>证明：取$A$的第$i$行<br><br>将第$i$行的元素排在第一个位置，其他的还是从小到大按照行指标成自然顺序排列，即$|A|＝\sum_{jk_1…k_{i-1}k_{i+1}…k_n} (-1)^{.{(i-1)+(j-1)}+ι(k_1…k_{i-1}k_{i+1}…k_n)}a_{ij}a_{1k_1}…a_{i-1,k_{i-1}}a_{i+1,k_{i+1}}…a_{nk_n}$<br>＝$\sum_{j=1}^n (-1)^{i+j}a_{ij}*\sum_{k_1…k_{i-1}k_{i+1}…k_n}(-1)^{ι(k_1…k_{i-1}k_{i+1}…k_n)}a_{1k_1}…a_{i-1,k-1}a_{i+1,k+1}…a_{nk_n}$<br>＝$\sum_{j=1}^n (-1)^{i+j}a_{ij}M_{ij}$<br>＝$\sum_{j=1}^n a_{ij}A_{ij}$，这样子完成了上述定定理的证明.<br><br>什么？没太懂？好吧，来解释一下：<br><br>第一个等式是第$i$行的元素排在第一个位置，其他的还是从小到大按照行指标成自然顺序排列，所以可以先写出后面的那些以及求和符号的底部那些，关键是逆序数的确定，这里又用到了前面刚证明的结论（我指的是行列式性质上面的那个手写证明哦），也就是（－１）的幂次等于行指标的逆序数＋列指标的逆序数，可以向上翻一下，那咱们现在就来看看：$(i-1)$是行指标的逆序数（因为原来的行指标是按照自然顺序排列，逆序数是０，后来咱们把第$i$行放在了最前面，所以从第二行往右（后），比$i$小的行指标有$1,2,…,i-1$，一共$i-1$个），同理$(j-1)$是此时列指标中的$j$的逆序数，而后面的$ι(k_1…k_{i-1}k_{i+1}…k_n)$是列指标中除去$j$之外的其他元素的逆序数，相当于把列指标拆成了两项，你可能会有疑问，这里为什要把列指标拆开而不直接写成$ι(jk_1…k_{i-1}k_{i+1}…k_n)$呢？那是因为，我们要证明的目标式是含有划掉第$i$行第$j$列，其余的元素按照原来的顺序所构成的行列式（即余子式）.<br><br>第二个式子是提取公因式，把所有公因式都放在左边，由于取定了行之后，要求和遍历每一列，因此提取出$\sum_{j=1}^n$，由于我们取定了第$i$行，所以首先可以把$a_{ij}$提出来，最后是$(-1)$的幂次，这个$(i-1)+(j-1)=i+j-2$可以直接写成$i+j$(因为2是偶数)，$i$确定了，$j$可以遍历，所以提取出来了$(-1)^{i+j}$，剩余的就统统放在右边了，这也就是第二个式子.<br><br>第三个式子就不必多说了.<br><br><code>这个定理也就称为n阶行列式按一行展开</code><br><br><code>同样的，对于列也有一样的性质</code><br></li><li>$n$级矩阵$A=(a_{ij})$的行列式$|A|=a_{1j}A_{1j}+a_{2j}A_{2j}+…+a_{nj}A_{nj}$=$\sum_{i=1}^n{a_{ij}A_{ij}}$，其中$j=1,2,…,n$.<br><br>证明：<br><br>按第$j$列展开，<br>$|A|=|A’|=a_{1j}A_{1j}+a_{2j}A_{2j}+…+a_{nj}A_{nj}$=$\sum_{i=1}^n{a_{ij}A_{ij}.}$,下面的图形象的说明了可以这样做的原因<br><br><img src="17.jpg" alt=""><br><br><br><code>这个定理也就称为n阶行列式按一列展开</code><br></li></ul><p>以上定理统称为<strong>行列式按一行(列)展开</strong>.<br></p><p>接下来我们想一下，以上的定理都是某元素乘以自身的代数余子式，结果等于行列式的值，那么如果我们用该元素乘以与该元素在同一行或同一列的某个元素的代数余子式而不是去乘以该元素自身的代数余子式，那么结果会是多少呢？答案是零！我们可以来证明一下：<br><br><img src="18.jpg" alt=""><br><br>这个定理对于列也同样成立，即$n$级矩阵$A=(a_{ij})$，当$i!=j$时，$a_{1j}A_{1l}+a_{2j}A_{2l}+…+a_{nj}A_{nl}=0$</p><p><strong>以上总共４个定理，前两个称为行列式按一行（列）展开，结果仍是行列式本身的值，后两个是变形，不再乘以自身的代数余子式了，结果是０，这些在后面都有很重要的应用</strong></p><p>下面介绍<strong>范德蒙德行列式</strong><br></p><ul><li>形如<br><br><img src="19.jpg" alt=""><br><br>的行列式称之为”$n$级的范德蒙德行列式”,并且该行列式的结果为<br><br><img src="20.jpg" alt=""><br><br>也就是说“对任意的$n$(n&gt;=2)，$n$级范德蒙德行列式等于$a_1,a_2,…,a_n$这$n$个数的所有可能的差$a_i-a_j$($1&lt;=j&lt;i&lt;=n$)的乘积”，用数学归纳法即可证明之.<br></li></ul><p>现在，是时候回到本章最开始提出的问题了：<strong>$n$元线性方程组的系数矩阵行列式不为零时，该线性方程组有唯一解</strong>的证明：<br><br><img src="21.jpg" alt=""><br><br><img src="22.jpg" alt=""><br><br><strong>吐槽</strong>：绕了这么一大圈，终于证出来了，主要用到了之前证明的行列式的那些性质，按照一行（列）展开以及第一章提到的比较笨的方法（直接化增广矩阵为阶梯型，都快计算出来了）.<br></p><ul><li>而对于$n$阶齐次线性方程组来说，应用上面证明的定理，自然有较好的性质，这也就是克莱默法则的第一部分<br></li></ul><blockquote><p>若只有零解（即只有唯一解），则其系数矩阵行列式不为０；<br><br>若有非零解（即有无穷多个解），则其系数矩阵行列式等于０.<br></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;二、行列式(8-18)&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;排列&lt;/code&gt; &lt;code&gt;行列式性质&lt;/code&gt;&lt;br&gt;&lt;br&gt;关于&lt;strong&gt;数域&lt;/strong&gt;：&lt;code&gt;有理数域是最小的数域，复数域是最大的数域&lt;/code&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="MathA" scheme="http://yoursite.com/categories/MathA/"/>
    
    
  </entry>
  
</feed>

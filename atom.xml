<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个大学狗的日常</title>
  
  <subtitle>放弃不难，但坚持一定很酷</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-13T07:00:35.156Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>凡希</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python基础第二部分</title>
    <link href="http://yoursite.com/2020/06/13/Python%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/"/>
    <id>http://yoursite.com/2020/06/13/Python基础第二部分/</id>
    <published>2020-06-13T06:34:23.000Z</published>
    <updated>2020-06-13T07:00:35.156Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>一个py文件就是一个模块，如果想让自己的py文件可以作为模块导入，模块名字必须遵循命名规则</p><ul><li><code>import 模块名</code>==&gt;  直接导入一个模块</li><li><code>from  模块名import 函数名</code> ==&gt;  导入一个模块里的方法或变量</li><li><code>form 模块名 import *</code> ==&gt;  导入这个模块里的””所有””方法和变量</li><li><code>import 模块名 as 别名</code> ==&gt; 给模块起个别名</li><li><code>from 模块名 import  函数名 as 别名</code> ==&gt; 给模块的函数起个别名</li></ul></li><li><p>os模块： operating system，用来调用操作系统里的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.sep<span class="comment">#路径分隔符</span></span><br><span class="line"><span class="string">'\\'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()<span class="comment">#获取当前路径</span></span><br><span class="line"><span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">'../'</span>)<span class="comment">#切换路径，这里的../代表返回上层文件夹</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir() <span class="comment">#列出当前路径所有文件和文件夹</span></span><br><span class="line">[<span class="string">'Python37'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="string">'1010.02.02.jpg'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.splitext(s)<span class="comment">#获取文件后缀，类似s.rpartition('.')</span></span><br><span class="line">(<span class="string">'1010.02.02'</span>, <span class="string">'.jpg'</span>)</span><br></pre></td></tr></table></figure></li><li><p>sys模块 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">print(<span class="string">"fg"</span>)</span><br><span class="line">sys.exit() <span class="comment">#退出，不执行后续代码</span></span><br><span class="line">print(<span class="string">'kjhg'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fg</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path<span class="comment">#导入包的时候就从以下任意路径里查找</span></span><br><span class="line">[<span class="string">'C:/Users/fanxi/Desktop/Python笔试'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\idlelib'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37\\python37.zip'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37\\DLLs'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37\\lib'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37'</span>, <span class="string">'C:\\Users\\fanxi\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.stdin <span class="comment">#接受用户的输入，和input相关,与文件操作有关</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;sys.stdout <span class="comment">#修改stdout，可以改变默认的输出位置，与文件操作有关</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;sys.stderr<span class="comment">#修改错误信息打印位置，比如打印到文件里面</span></span><br></pre></td></tr></table></figure></li><li><p>math模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.floor(<span class="number">12.98</span>)<span class="comment">#向下取整</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.ceil(<span class="number">12.98</span>)<span class="comment">#向上取整</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.factorial(<span class="number">3</span>)<span class="comment">#阶乘</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(<span class="number">12.345</span>) <span class="comment">#内置函数，四舍五入</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>round(<span class="number">12.567</span>)</span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.sin(math.pi/<span class="number">6</span>) <span class="comment">#弧度，pi=180°,sin(30°)</span></span><br><span class="line"><span class="number">0.49999999999999994</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.cos(math.pi/<span class="number">3</span>)<span class="comment">#cos(60°)</span></span><br><span class="line"><span class="number">0.5000000000000001</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.tan(math.pi/<span class="number">2</span>) <span class="comment">#其实是无限大！！！</span></span><br><span class="line"><span class="number">1.633123935319537e+16</span></span><br></pre></td></tr></table></figure></li><li><p>random模块</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; <span class="keyword">import</span> random</span><br><span class="line"> &gt;&gt;&gt; random.randint(<span class="number">2</span>,<span class="number">9</span>)<span class="comment">#随机生成2到9（闭区间）之间的整数</span></span><br><span class="line"> &gt;&gt;&gt;<span class="number">9</span></span><br><span class="line"> &gt;&gt;&gt; random.random()<span class="comment">#生成从0到1(左闭右开)之间的随机浮点数</span></span><br><span class="line"> <span class="number">0.375680332903083</span></span><br><span class="line"> &gt;&gt;&gt; random.randrange(<span class="number">2</span>,<span class="number">9</span>)<span class="comment">#生成2到9（左闭右开）的随机整数</span></span><br><span class="line"> &gt;&gt;&gt;<span class="number">4</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> &gt;&gt;&gt; lis=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>]</span><br><span class="line"> &gt;&gt;&gt; random.choice(lis)<span class="comment">#在可迭代对象里随机抽取一个item</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> &gt;&gt;&gt; random.sample(lis,<span class="number">3</span>)<span class="comment">#在可迭代对象中随机抽取3个item</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">5</span>, <span class="number">1</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure><ul><li><p>datetime模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt.datetime.now()<span class="comment">#获取当前时间</span></span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">5</span>, <span class="number">29</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">23</span>, <span class="number">888832</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt.date(<span class="number">2020</span>,<span class="number">2</span>,<span class="number">6</span>)<span class="comment">#创建日期</span></span><br><span class="line">datetime.date(<span class="number">2020</span>, <span class="number">2</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt.time(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)<span class="comment">#创建时间</span></span><br><span class="line">datetime.time(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dt.datetime.now()+dt.timedelta(<span class="number">3</span>)<span class="comment">#计算3天以后的时间</span></span><br><span class="line">datetime.datetime(<span class="number">2020</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">19</span>, <span class="number">483467</span>)</span><br></pre></td></tr></table></figure></li><li><p>time模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> time</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.time()<span class="comment">#获取时间戳</span></span><br><span class="line"><span class="number">1590721802.861923</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)<span class="comment">#按照指定格式输出</span></span><br><span class="line"><span class="string">'2020-05-29 11:20:43'</span></span><br></pre></td></tr></table></figure></li><li><p>calendar模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> calendar</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calendar.calendar(<span class="number">2020</span>)<span class="comment">#查看2020年的日历</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calendar.isleap(<span class="number">2020</span>)<span class="comment">#查看是否为闰年</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calendar.leapdays(<span class="number">1996</span>,<span class="number">2020</span>)<span class="comment">#从1996到2020共几个闰年</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calendar.month(<span class="number">2020</span>,<span class="number">5</span>)<span class="comment">#查看2020年5月的日历</span></span><br></pre></td></tr></table></figure></li><li><p>hashlib和hmac模块：加密</p></li><li><p>uuid模模块：随机生成一个全局唯一的id</p></li><li><p>以下划线开头的变量或方法名，不推荐被调用。通常在模块的末尾用del删除这些组成的元组，以防止被调用</p></li><li><p><code>__name__</code>：当直接运行py文件时，为<code>__main__</code>；当作为模块被导入时，为导入该模块的py文件名。</p><p>通过使用<code>if __name__==&#39;__main__&#39;</code>，保证只有当直接运行这个代码文件时才执行，而被逼的文件导入运行时不运行</p></li><li><p>一个包==多个模块(py文件)</p></li></ul><ul><li><p>面向对象</p><p>约定类名首字母大写，如Student</p><p>object可省略</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名<span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>一个小栗子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在__init__方法里，以参数形式定义特征，称之为属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age,height)</span>:</span> </span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.height=height</span><br><span class="line"></span><br><span class="line">    <span class="comment">#行为定义为一个个的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"正在跑步"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"正在吃东西"</span>)</span><br><span class="line">   </span><br><span class="line"><span class="comment">#使用Student类创建两个实例对象s1,s2</span></span><br><span class="line"><span class="comment">#s1和s2都有name,age,height属性，同时都有run和eat方法</span></span><br><span class="line">        </span><br><span class="line">s1=Student(<span class="string">'小明'</span>,<span class="number">18</span>,<span class="number">12</span>)<span class="comment">#Student会自动调用__init__方法</span></span><br><span class="line">s2=Student(<span class="string">'小狗'</span>,<span class="number">12</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据逻辑，让不同的对象执行不同的行为</span></span><br><span class="line">print(<span class="string">"%s"</span>%s1.name,end=<span class="string">''</span>)</span><br><span class="line">s1.run()</span><br><span class="line">print(<span class="string">"%s"</span>%s1.name,end=<span class="string">''</span>)</span><br><span class="line">s1.eat()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"%s"</span>%s2.name,end=<span class="string">''</span>)</span><br><span class="line">s2.eat()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">小明正在跑步</span><br><span class="line">小明正在吃东西</span><br><span class="line">小狗正在吃东西</span><br></pre></td></tr></table></figure></li><li><p>self</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"></span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br></pre></td></tr></table></figure><p><code>s1=Student(&#39;fhs&#39;,12)</code>做了以下3件事情：</p><pre><code>#1.调用`__new__`方法，申请一段内存空间#2.调用`__init__`方法，并让self指向申请好的那段内存空间#3.让`s1`也指向申请好的哪那段内存空间</code></pre></li><li><p>动态属性</p><p>实例化的对象，若直接使用等号给一个属性赋值：</p><ul><li>if 以前存在，则更新</li><li>if 不存在，则添加一个新的属性</li></ul></li><li><p>使用<code>__slots__</code>属性直接定义在类里，是一个元组，用来规定可以存在的属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    __slots__=(<span class="string">'age'</span>,)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"> </span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">print(s1.age,s1.name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"C:/Users/fanxi/Desktop/Python笔试/self.py"</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">  File <span class="string">"C:/Users/fanxi/Desktop/Python笔试/self.py"</span>, line <span class="number">4</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    self.name=x</span><br><span class="line">AttributeError: <span class="string">'Student'</span> object has no attribute <span class="string">'name'</span></span><br></pre></td></tr></table></figure><p>因为<code>__slots__</code>元组里面只有age，只要再把name添加进就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    __slots__=(<span class="string">'age'</span>,<span class="string">'name'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y  </span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">print(s1.age,s1.name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> fhs</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>魔法方法</p><p>不需要手动调用，会在合适的时候自动调用</p><p>这些方法，都是用<code>__</code>开始，都使用<code>__</code>结束</p><p>方法名都是系统规定好的，在合适的时机自己调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        print(<span class="string">'__init__方法被调用了'</span>)</span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#当对象被销毁时，会自动调用这个方法</span></span><br><span class="line">        print(<span class="string">'__del__方法被调用了'</span>)  </span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">del</span>  s1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        print(<span class="string">'__init__方法被调用了'</span>)</span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#当对象被销毁时，会自动调用这个方法</span></span><br><span class="line">        print(<span class="string">'__del__方法被调用了'</span>)</span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">print(s1)<span class="comment">#直接打印一个对象，是文件的__name__.类型，内存地址</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__init__方法被调用了</span><br><span class="line">&lt;__main__.Student object at <span class="number">0x000002B0ECD20708</span>&gt;</span><br></pre></td></tr></table></figure><p>当打印一个对象时，会调用这个对象的<code>__str__</code>或者<code>__repr__</code>方法<br>如果两个方法都写了，选择<code>__str__</code></p><p>所以可以通过修改<code>__str__</code>或者<code>__repr__</code>方法来达到打印我们想打印的对象的目的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        print(<span class="string">'__init__方法被调用了'</span>)</span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#当对象被销毁时，会自动调用这个方法</span></span><br><span class="line">        print(<span class="string">'__del__方法被调用了'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'hello'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'good'</span></span><br><span class="line"></span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">print(s1)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__init__方法被调用了</span><br><span class="line">hello<span class="comment">#默认打印__str__方法</span></span><br></pre></td></tr></table></figure><p>区分：str更注重可读性，repr更注重准确性</p></li></ul><p>  <code>__call__</code>方法</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        print(<span class="string">'__init__方法被调用了'</span>)</span><br><span class="line">        self.name=x</span><br><span class="line">        self.age=y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#当对象被销毁时，会自动调用这个方法</span></span><br><span class="line">        print(<span class="string">'__del__方法被调用了'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'__call__方法被调用了'</span>)</span><br><span class="line"></span><br><span class="line">s1=Student(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s1()<span class="comment"># 对象名() ==&gt; 调用对象的__call__方法</span></span><br></pre></td></tr></table></figure><ul><li><p>运算符相关的魔法方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">p1=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">p2=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#p1和p2不是一个对象！因为指向了不同的内存空间</span></span><br><span class="line">print(p1 <span class="keyword">is</span> p2)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">False</span></span><br></pre></td></tr></table></figure><p><code>==</code>会调用对象的<code>__eq__</code>方法</p><p><code>__eq__</code>方法默认比较的是内存地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">p1=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">p2=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"> </span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">b=[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">print(a==b)</span><br><span class="line">print(p1 == p2)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>可以重写<code>__eq__</code>方法来实现：只要两个对象对应属性的值相等，就输出True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#在创建对象时，会自动调用init方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self,other)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.name==other.name <span class="keyword">and</span> self.age==other.age:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">p1=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">p2=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">print(p1 == p2)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>c=<span class="string">'a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c<span class="number">-32</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#8&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    c<span class="number">-32</span></span><br><span class="line">TypeError: unsupported operand type(s) <span class="keyword">for</span> -: <span class="string">'str'</span> <span class="keyword">and</span> <span class="string">'int'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(c)<span class="number">-32</span></span><br><span class="line"><span class="number">65</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(ord(c)<span class="number">-32</span>)</span><br><span class="line"><span class="string">'A'</span></span><br></pre></td></tr></table></figure></li><li><p>面向对象的一个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">House</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,house_type,total_area,fru_list=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> fru_list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            fru_list=[]</span><br><span class="line">        self.house_type=house_type</span><br><span class="line">        self.total_area=total_area</span><br><span class="line">        self.free_area=total_area*<span class="number">0.6</span></span><br><span class="line">        self.fru_list=fru_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_fru</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.free_area&lt;x.area:</span><br><span class="line">            print(<span class="string">"房子剩余面积不足，放不进去了"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.fru_list.append(x.name)</span><br><span class="line">            self.free_area-=x.area</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'户型=&#123;&#125;，总面积=&#123;&#125;，剩余面积=&#123;&#125;，家具列表=&#123;&#125;'</span>.format(self.house_type,self.total_area,self.free_area,self.fru_list)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一步：首先造一个房子出来</span></span><br><span class="line">house=House(<span class="string">'两室一厅'</span>,<span class="number">56</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Furniture</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,area)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.area=area</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二步：然后造一堆家具出来</span></span><br><span class="line">bed=Furniture(<span class="string">'西蒙斯'</span>,<span class="number">4</span>)</span><br><span class="line">chest=Furniture(<span class="string">'衣柜'</span>,<span class="number">2</span>)</span><br><span class="line">table=Furniture(<span class="string">'餐桌'</span>,<span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三步：把家具添加到房子里</span></span><br><span class="line">house.add_fru(bed)</span><br><span class="line">house.add_fru(chest)</span><br><span class="line">house.add_fru(table)</span><br><span class="line"></span><br><span class="line">print(house)<span class="comment">#打印str or repr的返回值</span></span><br><span class="line">print(house.__str__())<span class="comment">#两者效果相同，因为本质上print</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><code>!=</code>默认调用<code>__ne__</code>方法</li><li><code>&gt;</code>调用<code>__gt__</code>方法</li><li><code>&gt;=</code>调用<code>__ge__</code>方法：不写ge方法会报错</li></ul><ul><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    这是一个人</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name+<span class="string">'正在吃东西'</span>)</span><br><span class="line"></span><br><span class="line">p=Person(<span class="string">'zhangsan '</span>,<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">print(dir(p)) <span class="comment">#查看所有属性/方法</span></span><br><span class="line"></span><br><span class="line">print(p.__class__)</span><br><span class="line">print(p.__dict__)<span class="comment">#把对象名和值转换成一个字典</span></span><br><span class="line">print(p.__doc__)<span class="comment">#查看文档</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'__class__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dict__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__init_subclass__'</span>, <span class="string">'__le__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__module__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'__weakref__'</span>, <span class="string">'age'</span>, <span class="string">'eat'</span>, <span class="string">'name'</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">__main__</span>.<span class="title">Person</span>'&gt;</span></span><br><span class="line">&#123;'name': 'zhangsan ', 'age': 18&#125;</span><br><span class="line"></span><br><span class="line">    这是一个人</span><br></pre></td></tr></table></figure></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    这是一个人</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self,key,value)</span>:</span></span><br><span class="line">        self.__dict__[key]=value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self,item)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__dict__[item]</span><br><span class="line"></span><br><span class="line">p=Person(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line">print(p.__dict__)<span class="comment">#将对象转换为字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#不能直接把一个对象当作一个字典来使用</span></span><br><span class="line">p[<span class="string">'age'</span>]=<span class="number">20</span> <span class="comment">#[]会调用对象的__setitem__方法</span></span><br><span class="line">p[<span class="string">'name'</span>]=<span class="string">'you'</span></span><br><span class="line"></span><br><span class="line">print(p.name,p.age)</span><br><span class="line"></span><br><span class="line">print(p[<span class="string">'name'</span>])<span class="comment">#会调用对象的__getitem__方法</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line">you <span class="number">20</span></span><br><span class="line">you</span><br></pre></td></tr></table></figure></li><li><p>私有属性：以<code>__</code>开头，比如<code>__money</code></p><p>私有方法：以<code>__</code>开头，比如<code>__eat()</code></p><p>访问私有属性/方法的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.__money=<span class="number">1000</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_money</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__money</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"吃ing"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__eat()</span><br><span class="line">p=Person(<span class="string">'fhs'</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法1. </span></span><br><span class="line">print(p._Person__money)</span><br><span class="line"><span class="comment">#方法2</span></span><br><span class="line">print(p.get_money())</span><br><span class="line"> </span><br><span class="line"><span class="comment">#方法1</span></span><br><span class="line">print(p._Person__eat())</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法2</span></span><br><span class="line">print(p.get_eat())</span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1000</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line">吃ing</span><br><span class="line"><span class="number">0</span></span><br><span class="line">吃ing</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li><p>类属性和对象属性</p></li><li><p>类属性：定义在类之内，函数之外</p><p>类对象和实例对象都可以获取类属性，但只有类对象才可以修改类属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    type=<span class="string">'human'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.__money=<span class="number">1000</span></span><br><span class="line">        </span><br><span class="line">p=Person(<span class="string">'fhs'</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">print(Person.type)</span><br><span class="line">print(p.type)</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改</span></span><br><span class="line">Person.type=<span class="string">'人类'</span></span><br><span class="line">print(p.type)</span><br></pre></td></tr></table></figure></li><li><p>实例对象可以直接用<code>.</code>来调用方法，不用传入self</p><p>而类对象调用方法时，需要指定self</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self,food)</span>:</span></span><br><span class="line">        print(self.name+<span class="string">'正在吃'</span>+food)</span><br><span class="line"></span><br><span class="line">p1=Person(<span class="string">'zhangsan '</span>,<span class="number">18</span>)</span><br><span class="line">p2=Person(<span class="string">'lisi'</span>,<span class="number">19</span>)</span><br><span class="line"></span><br><span class="line">p1.eat(<span class="string">'zz'</span>)</span><br><span class="line"></span><br><span class="line">Person.eat(p2,<span class="string">'hh'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zhangsan 正在吃zz</span><br><span class="line">lisi正在吃hh</span><br></pre></td></tr></table></figure><p>但是对于<strong>静态方法</strong>（不需要self传参的方法），不管是实例对象还是类在调用方法时都是一样的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cal</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod#静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">        print(a+b)</span><br><span class="line"></span><br><span class="line"><span class="comment">#对于静态方法，可以不实例化一个对象，而是可以直接调用</span></span><br><span class="line">Cal.add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">3</span></span><br></pre></td></tr></table></figure><p>还有一种叫做<strong>类方法</strong>（如果一个函数只用到了类属性）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cal</span><span class="params">(object)</span>:</span></span><br><span class="line">    type=<span class="string">'human'</span><span class="comment">#定义一个类属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        self.x=x</span><br><span class="line">        self.y=y</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="comment">#自动传参</span></span><br><span class="line">        <span class="comment">#cls指的是类对象 cls is Cal ==&gt; True</span></span><br><span class="line">        print(cls.type)</span><br><span class="line">        print(<span class="string">'yes'</span>)</span><br><span class="line">p=Cal(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#类方法可以使用实例对象和类对象调用</span></span><br><span class="line">print(p.test())</span><br><span class="line">print(Cal.test())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">human</span><br><span class="line">yes</span><br><span class="line"><span class="keyword">None</span></span><br><span class="line">human</span><br><span class="line">yes</span><br><span class="line"><span class="keyword">None</span></span><br></pre></td></tr></table></figure></li><li><p>总结实例方法，静态方法和类方法</p><p><img src="1.png" alt="1591326659193"></p></li><li><p>单例设计模式</p><p><img src="2.png" alt="1591328167136"></p></li></ul><ul><li><p>面向对象的三大特性</p><p>封装，继承，多态</p></li><li><p>继承的使用：子类先调用父类的init方法(如果子类没有重写init)，然后调用父类的某些方法</p><p>父类的私有属性不能被子类继承</p></li><li><p>isinstance&amp;issubclass</p><p><img src="3.png" alt="1591350403108"></p></li><li><p>子类重写父类的方法</p><p>如果子类想增加父类没有的属性，可以直接添加</p><p>如果父类有，但子类想要补充，可以重写init方法，但也有以下方法：</p><pre><code>1. super直接调用父类的方法 2. 父类名.方法名(self，参数列表)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line"><span class="comment">#Stu继承自Person类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stu</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="comment">#添加父类没有的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self,food)</span>:</span></span><br><span class="line">        print(self.name+<span class="string">"在吃"</span>+food)</span><br><span class="line">    <span class="comment">#补充父类没有的属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age,school)</span>:</span></span><br><span class="line">        <span class="comment">#方法1</span></span><br><span class="line">        <span class="comment">#Person.__init__(self,name,age)</span></span><br><span class="line">        <span class="comment">#方法2</span></span><br><span class="line">        <span class="comment">#super(Stu,self).__init__(name,age)</span></span><br><span class="line">        self.school=school  </span><br><span class="line">p=Stu(<span class="string">'fhs'</span>,<span class="number">12</span>,<span class="string">'ls'</span>)</span><br><span class="line">p.eat(<span class="string">'fish'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;fhs在吃fish</span><br></pre></td></tr></table></figure></li><li><p>多态是基于继承，通过子类重新写父类的方法，得到不同的结果，以提高代码的灵活度</p><p>不使用多态的代码有冗余，就像这样</p><p><img src="4.png" alt="1591353434038"></p><p>而使用多态优化后的代码是这样子的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'狗在工作'</span>)</span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PoliceDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"警犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlindDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"导盲犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DrugDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"缉毒犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_with_dog</span><span class="params">(self,dog)</span>:</span></span><br><span class="line">        dog.work()</span><br><span class="line"></span><br><span class="line">p=Person(<span class="string">'fhs'</span>)</span><br><span class="line">pd=PoliceDog()</span><br><span class="line"><span class="comment">#p.dog=pd</span></span><br><span class="line">p.work_with_dog(pd)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'狗在工作'</span>)</span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PoliceDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"警犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlindDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"导盲犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DrugDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"缉毒犬正在工作"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_with_dog</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.dog.work()</span><br><span class="line"></span><br><span class="line">p=Person(<span class="string">'fhs'</span>)</span><br><span class="line">pd=PoliceDog()</span><br><span class="line">p.dog=pd</span><br><span class="line">p.work_with_dog()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">警犬正在工作</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>文件</p><p>内置函数open可以打开文件</p><p>在windows中，文件夹之间用<code>\</code>分隔路径，而<code>\</code>常用作转义字符，所以在windows中，使用Python中写路径时用<code>\\</code>分隔路径</p><p>而linux用的<code>/</code>分隔</p><p>windows默认编码方式为<code>gbk</code></p><p><code>../</code>表示返回上一级文件夹，<code>./</code>可以省略不写，表示当前文件夹</p></li></ul><p>  文件的打开方式mode:</p><p>  ​    r：只读，若文件不存在，则报错</p><p>  ​    w：写入模式，不能读，若文件不存在，会创建之</p><p>  ​    b：以二进制的形式打开文件，用来操作非文本文件</p><p>  ​    rb：以二进制方式读取文件</p><p>  ​    wb：以二进制方式写入文件</p><p>  ​    a：追加模式，会在最后追加内容，若文件不存在，则创建之</p><ul><li><p>文件的读取方式</p><p>file.read()：一次读取整个文件</p><p>file.readline() ：一次读取一行（一个换行符之前的代表一行）</p><p>file.readlines() ：读取所有行的数据，保存在列表里</p><p>file.read(10)：10指的是读取的字符个数</p></li><li><p>json</p><p>dumps：将数据转换成json字符串，不会将数据保存在文件里</p><p>dump：将数据转换成json字符串，同时写入文件</p><p>loads：将json字符串加载为Python里的数据</p><p>load：读取文件，把读取的内容加载成为Python里的数据</p><p><img src="5.png" alt="1591416472788"></p><p>非以上对应格式在使用json时会报错</p></li><li><p>pickle</p><p>dumps：将数据转换成二进制，不会将数据保存在文件里</p><p>dump：将数据转换成二进制，同时写入文件</p><p>loads：将二进制加载为Python里的数据</p><p>load：读取文件，把读取的二进制内容加载成为Python里的数据</p></li></ul><ul><li><p>json和pickle的对比</p><p>pickle用来将数据原封不动的转换成为二进制，但这个二进制，只能Python识别，不能跨平台</p><p>json只能保存一些基本信息，作用是用来在不同平台里传递数据</p></li><li><p>异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">age=input(<span class="string">"几岁啦？"</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    age=float(age)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'输入的非数字'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> age&gt;<span class="number">18</span>:</span><br><span class="line">        print(<span class="string">'欢迎'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'滚'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">几岁啦？<span class="number">13.6</span></span><br><span class="line">滚</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line">================ RESTART: ================</span><br><span class="line">几岁啦？<span class="number">123.6</span></span><br><span class="line">欢迎</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">finally</span>:<span class="comment">#finally一定会执行</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li></ul><p>  注意，finally的return值会覆盖前面的</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        x=a/b</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'除数不能为0'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'good'</span></span><br><span class="line">print(demo(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">print(demo(<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">good</span><br><span class="line">good</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><ul><li><p>with</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file=open(<span class="string">'xx.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">    print(<span class="string">'文件不存在'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file.read()</span><br><span class="line">    <span class="keyword">finally</span>: <span class="comment">#有可能读到一半就不读了，所以最后要关闭文</span></span><br><span class="line">        file.close()</span><br><span class="line">文件不存在</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>使用with之后，不需要手动关闭文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'xx.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.read()</span><br><span class="line">        <span class="comment">#file.close#不需要手动关闭了</span></span><br><span class="line"><span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">    print(<span class="string">'文件未找到'</span>)</span><br><span class="line">文件未找到</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>with语句后面的<strong>结果对象</strong>，需要重写<code>__enter__</code>和<code>__exit__</code>方法</p><p>当进入到with代码块时，会自动调用<code>__enter__</code>方法里的代码</p><p>当with代码块执行完成以后，会自动调用<code>__exit__</code>方法</p></li><li><p>系统内置异常</p><p><img src="6.png" alt="1591492363683"></p></li><li><p>自定义异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义异常</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LengthError</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        self.x=x</span><br><span class="line">        self.y=y</span><br><span class="line">    <span class="comment">#自定义异常输出</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'长度必须在&#123;&#125;和&#123;&#125;之间'</span>.format(self.x,self.y)</span><br><span class="line"></span><br><span class="line">password=input(<span class="string">'请输入密码'</span>)</span><br><span class="line">m,n=<span class="number">6</span>,<span class="number">12</span></span><br><span class="line"><span class="keyword">if</span> m&lt;=len(password)&lt;=n:</span><br><span class="line">    print(<span class="string">'密码正确'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> LengthError(m,n)</span><br><span class="line"></span><br><span class="line"><span class="comment">#若没出错</span></span><br><span class="line">print(<span class="string">'将数据保存到数据库中'</span>)</span><br></pre></td></tr></table></figure></li><li><p>可迭代对象和不可迭代对象的区别就在于，类中是否写了<code>__iter__</code>方法</p><p>可以用<code>isinstance</code>方法判断一个实例对象是否是由指定的类创建出来的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections.abc <span class="keyword">import</span> Iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(s,Iterable)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;一个py文件就是一个模块，如果想让自己的py文件可以作为模块导入，模块名字必须遵循命名规则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import 模块名&lt;/code&gt;==&amp;gt;  直接导入一个模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from  模块名impor
      
    
    </summary>
    
      <category term="Python基础知识" scheme="http://yoursite.com/categories/Python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用keras对电影评论进行分类</title>
    <link href="http://yoursite.com/2020/06/13/%E4%BD%BF%E7%94%A8keras%E5%AF%B9%E7%94%B5%E5%BD%B1%E8%AF%84%E8%AE%BA%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/"/>
    <id>http://yoursite.com/2020/06/13/使用keras对电影评论进行分类/</id>
    <published>2020-06-13T06:30:28.000Z</published>
    <updated>2020-06-13T06:33:44.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="加载IMDB数据集"><a href="#加载IMDB数据集" class="headerlink" title="加载IMDB数据集"></a>加载IMDB数据集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.keras.datasets <span class="keyword">import</span> imdb</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(train_data,train_labels),(test_data,test_labels)=imdb.load_data(num_words=<span class="number">10000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_data.shape</span><br></pre></td></tr></table></figure><pre><code>(25000,)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_data[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><pre><code>[1, 14, 22, 16, 43, ... ... ... 178, 32]</code></pre><p>train_data中的每一项都是这样的一个列表，代表的单词对应的下标索引，每一个数字都对应一个单词</p><p>下面这一段代码可以将某条评论解码为英文单词</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#word_index是一个将单词映射为整数的字典</span></span><br><span class="line">word_index=imdb.get_word_index()</span><br><span class="line"><span class="comment">#reverse_word_index ：整数-&gt;单词</span></span><br><span class="line">reverse_word_index=dict(</span><br><span class="line">    [(value,key) <span class="keyword">for</span> (key,value) <span class="keyword">in</span> word_index.items()]</span><br><span class="line">    )</span><br><span class="line"><span class="comment">#注意，索引减去了 3，因为 0、 1、 2</span></span><br><span class="line"><span class="comment">#是为“padding”（填充）、“start of sequence”（序</span></span><br><span class="line"><span class="comment">#列开始）、“unknown”（未知词）分别保留的索引</span></span><br><span class="line">decoded_review=<span class="string">' '</span>.join(</span><br><span class="line">[reverse_word_index.get(i<span class="number">-3</span>,<span class="string">'?'</span>) <span class="keyword">for</span> i <span class="keyword">in</span> train_data[<span class="number">0</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">decoded_review</span><br></pre></td></tr></table></figure><pre><code>&quot;? this film was just brilliant casting location scenery story direction everyone&apos;s really suited the part they played and you could just imagine being there robert ? is an amazing actor and now the same being director ? father came from the same scottish island as myself so i loved the fact there was a real connection with this film the witty remarks throughout the film were great it was just brilliant so much that i bought the film as soon as it was released for ? and would recommend it to everyone to watch and the fly fishing was amazing really cried at the end it was so sad and you know what they say if you cry at a film it must have been good and this definitely was also ? to the two little boy&apos;s that played the ? of norman and paul they were just brilliant children are often left out of the ? list i think because the stars that play them all grown up are such a big profile for the whole film but these children are amazing and should be praised for what they have done don&apos;t you think the whole story was so lovely because it was true and was someone&apos;s life after all that was shared with us all&quot;</code></pre><h2 id="将整数序列编码为二进制矩阵（one-hot编码）"><a href="#将整数序列编码为二进制矩阵（one-hot编码）" class="headerlink" title="将整数序列编码为二进制矩阵（one-hot编码）"></a>将整数序列编码为二进制矩阵（one-hot编码）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vectorize_sequences</span><span class="params">(sequences,dimension=<span class="number">10000</span>)</span>:</span></span><br><span class="line">    <span class="comment">#创建一个size为（len(sequences),dimension）的</span></span><br><span class="line">    <span class="comment">#全零矩阵results</span></span><br><span class="line">    results=np.zeros((len(sequences),dimension))</span><br><span class="line">    <span class="keyword">for</span> i ,sequence <span class="keyword">in</span> enumerate(sequences):</span><br><span class="line">        results[i,sequence]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"><span class="comment">#ps:感觉这里的行列些反了，不过没关系</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#have a try</span></span><br><span class="line">vectorize_sequences(train_data[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><pre><code>array([[0., 1., 0., ..., 0., 0., 0.],       [0., 0., 0., ..., 0., 0., 0.],       [0., 0., 0., ..., 0., 0., 0.],       ...,       [0., 0., 0., ..., 0., 0., 0.],       [0., 0., 0., ..., 0., 0., 0.],       [0., 0., 0., ..., 0., 0., 0.]])</code></pre><p>记得我们的train_data[0]的第一个元素是1，所以第一行中下标为1的地方是1，其余为0.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#现在将训练数据和测试数据向量化</span></span><br><span class="line">x_train=vectorize_sequences(train_data)</span><br><span class="line">x_test=vectorize_sequences(test_data)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_train.shape</span><br></pre></td></tr></table></figure><pre><code>(25000, 10000)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将标签向量化</span></span><br><span class="line">y_train=np.asarray(train_labels).astype(<span class="string">'float32'</span>)</span><br><span class="line">y_test=np.asarray(test_labels).astype(<span class="string">'float32'</span>)</span><br></pre></td></tr></table></figure><h2 id="构建网络"><a href="#构建网络" class="headerlink" title="构建网络"></a>构建网络</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模型定义</span></span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> models,layers</span><br><span class="line">model=models.Sequential()</span><br><span class="line">model.add(layers.Dense(<span class="number">16</span>,activation=<span class="string">'relu'</span>,input_shape=(<span class="number">10000</span>,)))</span><br><span class="line">model.add(layers.Dense(<span class="number">16</span>,activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(layers.Dense(<span class="number">1</span>,activation=<span class="string">'sigmoid'</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编译模型</span></span><br><span class="line">model.compile(optimizer=<span class="string">'rmsprop'</span>,</span><br><span class="line">             loss=<span class="string">'binary_crossentropy'</span>,</span><br><span class="line">             metrics=[<span class="string">'accuracy'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置优化器</span></span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> optimizers</span><br><span class="line">model.compile(optimizer=optimizers.RMSprop(lr=<span class="number">0.001</span>),</span><br><span class="line">             loss=<span class="string">'binary_crossentropy'</span>,</span><br><span class="line">             metrics=[<span class="string">'accuracy'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用自定义的损失和指标</span></span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> losses,metrics</span><br><span class="line">model.compile(optimizer=optimizers.RMSprop(lr=<span class="number">0.001</span>),</span><br><span class="line">             loss=losses.binary_crossentropy,</span><br><span class="line">             metrics=[metrics.binary_accuracy])</span><br></pre></td></tr></table></figure><h2 id="训练模型-验证模型"><a href="#训练模型-验证模型" class="headerlink" title="训练模型+验证模型"></a>训练模型+验证模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#留出验证集</span></span><br><span class="line">x_val=x_train[:<span class="number">10000</span>]</span><br><span class="line">partial_x_train=x_train[<span class="number">10000</span>:]</span><br><span class="line"></span><br><span class="line">y_val=y_train[:<span class="number">10000</span>]</span><br><span class="line">partial_y_train=y_train[<span class="number">10000</span>:]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#训练模型并同时在验证集上做验证</span></span><br><span class="line">model.compile(optimizer=<span class="string">'rmsprop'</span>,</span><br><span class="line">             loss=<span class="string">'binary_crossentropy'</span>,</span><br><span class="line">             metrics=[<span class="string">'acc'</span>])</span><br><span class="line"></span><br><span class="line">history=model.fit(partial_x_train,</span><br><span class="line">                 partial_y_train,</span><br><span class="line">                 epochs=<span class="number">20</span>,</span><br><span class="line">                 batch_size=<span class="number">512</span>,</span><br><span class="line">                 validation_data=(x_val,y_val))</span><br></pre></td></tr></table></figure><pre><code>Epoch 1/2030/30 [==============================] - 1s 29ms/step - loss: 0.0046 - acc: 0.9989 - val_loss: 1.3084 - val_acc: 0.8560Epoch 2/2030/30 [==============================] - 1s 24ms/step - loss: 8.3249e-05 - acc: 1.0000 - val_loss: 1.3129 - val_acc: 0.8571Epoch 3/2030/30 [==============================] - 1s 25ms/step - loss: 6.5058e-05 - acc: 1.0000 - val_loss: 1.3250 - val_acc: 0.8568Epoch 4/2030/30 [==============================] - 1s 24ms/step - loss: 5.2597e-05 - acc: 1.0000 - val_loss: 1.3834 - val_acc: 0.8561Epoch 5/2030/30 [==============================] - 1s 26ms/step - loss: 7.6493e-04 - acc: 0.9998 - val_loss: 1.4176 - val_acc: 0.8562Epoch 6/2030/30 [==============================] - 1s 26ms/step - loss: 3.2046e-05 - acc: 1.0000 - val_loss: 1.4258 - val_acc: 0.8561Epoch 7/2030/30 [==============================] - 1s 31ms/step - loss: 2.9245e-05 - acc: 1.0000 - val_loss: 1.4446 - val_acc: 0.8557Epoch 8/2030/30 [==============================] - 1s 26ms/step - loss: 2.5217e-05 - acc: 1.0000 - val_loss: 1.4725 - val_acc: 0.8563Epoch 9/2030/30 [==============================] - 1s 26ms/step - loss: 0.0011 - acc: 0.9996 - val_loss: 1.5182 - val_acc: 0.8561Epoch 10/2030/30 [==============================] - 1s 26ms/step - loss: 1.5805e-05 - acc: 1.0000 - val_loss: 1.5262 - val_acc: 0.8555Epoch 11/2030/30 [==============================] - 1s 24ms/step - loss: 1.4758e-05 - acc: 1.0000 - val_loss: 1.5354 - val_acc: 0.8553Epoch 12/2030/30 [==============================] - 1s 24ms/step - loss: 1.3594e-05 - acc: 1.0000 - val_loss: 1.5507 - val_acc: 0.8546Epoch 13/2030/30 [==============================] - 1s 25ms/step - loss: 1.1385e-05 - acc: 1.0000 - val_loss: 1.5909 - val_acc: 0.8551Epoch 14/2030/30 [==============================] - 1s 25ms/step - loss: 8.7676e-04 - acc: 0.9997 - val_loss: 1.6677 - val_acc: 0.8538Epoch 15/2030/30 [==============================] - 1s 24ms/step - loss: 1.1577e-05 - acc: 1.0000 - val_loss: 1.6620 - val_acc: 0.8560Epoch 16/2030/30 [==============================] - 1s 36ms/step - loss: 8.7293e-06 - acc: 1.0000 - val_loss: 1.6632 - val_acc: 0.8555Epoch 17/2030/30 [==============================] - 1s 27ms/step - loss: 7.2850e-06 - acc: 1.0000 - val_loss: 1.6734 - val_acc: 0.8555Epoch 18/2030/30 [==============================] - 1s 26ms/step - loss: 6.0855e-06 - acc: 1.0000 - val_loss: 1.7012 - val_acc: 0.8552Epoch 19/2030/30 [==============================] - 1s 24ms/step - loss: 1.4016e-04 - acc: 0.9999 - val_loss: 1.7631 - val_acc: 0.8541Epoch 20/2030/30 [==============================] - 1s 24ms/step - loss: 4.7701e-06 - acc: 1.0000 - val_loss: 1.7625 - val_acc: 0.8558</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#绘制训练损失和验证损失</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">history_dict=history.history</span><br><span class="line"><span class="comment">#print(history_dict.keys())#dict_keys(['loss', 'acc', 'val_loss', 'val_acc'])</span></span><br><span class="line">loss_values=history_dict[<span class="string">'loss'</span>]</span><br><span class="line">val_loss_values=history_dict[<span class="string">'val_loss'</span>]</span><br><span class="line"></span><br><span class="line">epochs=range(<span class="number">1</span>,len(loss_values)+<span class="number">1</span>)<span class="comment">#训练的轮次</span></span><br><span class="line"></span><br><span class="line">plt.plot(epochs,loss_values,<span class="string">'bo'</span>,label=<span class="string">'Training loss'</span>)</span><br><span class="line">plt.plot(epochs,val_loss_values,<span class="string">'b'</span>,label=<span class="string">'Validation loss'</span>)</span><br><span class="line">plt.title(<span class="string">'Training and validation loss'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Loss'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="output_25_0.png" alt="1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#绘制训练精度和验证精度</span></span><br><span class="line">plt.clf()</span><br><span class="line">acc=history_dict[<span class="string">'acc'</span>]</span><br><span class="line">val_acc=history_dict[<span class="string">'val_acc'</span>]</span><br><span class="line"></span><br><span class="line">plt.plot(epochs,acc,<span class="string">'bo'</span>,label=<span class="string">'Training acc'</span>)</span><br><span class="line">plt.plot(epochs,val_acc,<span class="string">'b'</span>,label=<span class="string">'Validation acc'</span>)</span><br><span class="line">plt.title(<span class="string">'Training and validation accuracy'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Accuracy'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="output_26_0.png" alt="2.png"></p><p>过拟合了！</p><p>观察loss图像，发现epochs为4时loss最小，所以接下来重新训练模型，设置epoch为4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#尝试重新训练一个模型</span></span><br><span class="line">model=models.Sequential()</span><br><span class="line">model.add(layers.Dense(<span class="number">16</span>,activation=<span class="string">'relu'</span>,input_shape=(<span class="number">10000</span>,)))</span><br><span class="line">model.add(layers.Dense(<span class="number">16</span>,activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(layers.Dense(<span class="number">1</span>,activation=<span class="string">'sigmoid'</span>))</span><br><span class="line"></span><br><span class="line">model.compile(optimizer=<span class="string">'rmsprop'</span>,</span><br><span class="line">             loss=<span class="string">'binary_crossentropy'</span>,</span><br><span class="line">             metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line">model.fit(x_train,y_train,epochs=<span class="number">4</span>,batch_size=<span class="number">512</span>)</span><br><span class="line">results=model.evaluate(x_test,y_test)</span><br></pre></td></tr></table></figure><pre><code>Epoch 1/449/49 [==============================] - 1s 13ms/step - loss: 0.4649 - accuracy: 0.8296Epoch 2/449/49 [==============================] - 1s 14ms/step - loss: 0.2706 - accuracy: 0.9058Epoch 3/449/49 [==============================] - 1s 13ms/step - loss: 0.2064 - accuracy: 0.9260Epoch 4/449/49 [==============================] - 1s 13ms/step - loss: 0.1738 - accuracy: 0.9366782/782 [==============================] - 1s 2ms/step - loss: 0.2923 - accuracy: 0.8841</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">results</span><br></pre></td></tr></table></figure><pre><code>[0.29230669140815735, 0.8840799927711487]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#预测</span></span><br><span class="line">model.predict(x_test)</span><br></pre></td></tr></table></figure><pre><code>array([[0.16965643],       [0.99986595],       [0.86651677],       ...,       [0.101327  ],       [0.05761746],       [0.545027  ]], dtype=float32)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;加载IMDB数据集&quot;&gt;&lt;a href=&quot;#加载IMDB数据集&quot; class=&quot;headerlink&quot; title=&quot;加载IMDB数据集&quot;&gt;&lt;/a&gt;加载IMDB数据集&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="keras" scheme="http://yoursite.com/categories/keras/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础第一部分</title>
    <link href="http://yoursite.com/2020/05/28/Python%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/"/>
    <id>http://yoursite.com/2020/05/28/Python基础第一部分/</id>
    <published>2020-05-28T07:31:59.000Z</published>
    <updated>2020-06-13T07:18:12.893Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>在Python中，变量是没有数据类型的，是动态可变的。比如、</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'hahaha'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="string">'hahaha'</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>标识符的命名规则：</p><pre><code>-  以数字，字母，下划线组成，且不能以数字开头</code></pre></li><li><p>严格区分大小写</p><ul><li>不能使用关键字，如if、try等命名</li></ul></li><li><p>命名规范</p><ul><li>在Python里的变量、函数名和模块名使用下划线连接；</li><li>类名使用大驼峰法命名（如MyName）</li></ul></li><li><p>print()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"hello"</span>,<span class="string">"world"</span>,<span class="string">"hi"</span>)<span class="comment">#默认空格隔开</span></span><br><span class="line">hello world hi</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"hello"</span>,<span class="string">"world"</span>,<span class="string">"hi"</span>,sep=<span class="string">'+'</span>)<span class="comment">#seq是分隔符参数</span></span><br><span class="line">hello+world+hi</span><br></pre></td></tr></table></figure><p>两个print之间默认会换行(end默认是<code>&#39;\n&#39;</code>)，可以使用end参数改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello"</span>,<span class="string">"world"</span>,<span class="string">"hi"</span>,sep=<span class="string">'+'</span>,end=<span class="string">"~~~~~~~"</span>)</span><br><span class="line">print(<span class="string">"你好"</span>)</span><br><span class="line"></span><br><span class="line">hello+world+hi~~~~~~~你好    <span class="comment">#改成了用~~~~~~~~分隔，而不是换行</span></span><br></pre></td></tr></table></figure></li><li><p>input()</p><p>不管用户输入的是什么，input()接收/保存的都是字符串类型</p></li><li><p>Python中的进制</p><p>默认print()是10进制，以<code>0b</code>开头的是二进制，<code>0o</code>开头是八进制，<code>0x</code>是16进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">98</span><span class="comment">#10进制</span></span><br><span class="line">b=<span class="number">0b101101101</span><span class="comment">#2进制</span></span><br><span class="line">c=<span class="number">0o34</span><span class="comment">#8进制</span></span><br><span class="line">d=<span class="number">0x23</span><span class="comment">#16进制</span></span><br><span class="line"></span><br><span class="line">print(a,b,c,d)<span class="comment">#默认转化为10进制输出</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">98</span> <span class="number">365</span> <span class="number">28</span> <span class="number">35</span></span><br></pre></td></tr></table></figure><p>进制转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">98</span><span class="comment">#10进制</span></span><br><span class="line">print(bin(a),oct(a),hex(a))<span class="comment">#分别把a转换为2,8,10进制</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0b1100010</span> <span class="number">0o142</span> <span class="number">0x62</span></span><br></pre></td></tr></table></figure></li><li><p>数据类型转换</p><ul><li><p>字符串-&gt;整数：<code>int()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'31'</span></span><br><span class="line">b=int(a)</span><br><span class="line"></span><br><span class="line">print(a,b)</span><br><span class="line"></span><br><span class="line">print(type(a),type(b))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">31</span> <span class="number">31</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt; &lt;<span class="title">class</span> '<span class="title">int</span>'&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>注意：若某字符串，如`hello`不是合法数字，则转换时会报错也可以指定字符串转换为数字的进制，如下例<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="string">'1a2c'</span></span><br><span class="line">y=int(x,<span class="number">16</span>)<span class="comment">#将字符串转换为16进制的数字</span></span><br><span class="line">print(y)<span class="comment">#以10进制方式输出</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6700</span></span><br></pre></td></tr></table></figure></code></pre><ul><li><p>str-&gt;float: <code>float</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'12.34'</span></span><br><span class="line">b=float(a)</span><br><span class="line">print(b)   <span class="comment">#输出：12.34</span></span><br></pre></td></tr></table></figure></li><li><p>其他-&gt;字符串：<code>str()</code></p></li><li><p>使用bool内置类可以将其他数据类型转换为布尔值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="number">100</span>))</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="number">0</span>))</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="string">'hello'</span>))</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="string">'False'</span>))</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="string">''</span>))<span class="comment">#只有空字符串可以转为False布尔型</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(<span class="keyword">None</span>))</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool([]))<span class="comment">#空list</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(bool(()))<span class="comment">#空tuple</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=set()<span class="comment">#空集合</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(s)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>字符串支持有限的加法和乘法运算</p><ul><li><code>+</code>：拼接两个字符串</li><li><code>*</code>：如<code>hello*3</code>则打印3次<code>hello</code></li></ul></li><li><p>元组的括号有时可以省略</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br></pre></td></tr></table></figure></li><li><p>加*表示可变长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>o,p,q=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span><span class="comment">#报错了</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#75&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    o,p,q=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">ValueError: too many values to unpack (expected <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>o,*p,q=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(o,p,q)</span><br><span class="line"><span class="number">1</span> [<span class="number">2</span>, <span class="number">3</span>] <span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>数字和字符串之间，做==运算的结果是False，做!=是True。除此之外，不支持其他比较运算</p></li><li><p>短路问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ex1</span></span><br><span class="line"><span class="number">4</span>&gt;<span class="number">3</span> <span class="keyword">and</span> print(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="number">4</span>&lt;<span class="number">3</span> <span class="keyword">and</span> print(<span class="string">'你好世界'</span>)<span class="comment">#第一个条件不满足，短路</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ex2</span></span><br><span class="line"><span class="number">4</span>&gt;<span class="number">3</span> <span class="keyword">or</span> print(<span class="string">'唉'</span>)<span class="comment">#第一个条件满足，短路</span></span><br><span class="line"><span class="number">4</span>&lt;<span class="number">3</span> <span class="keyword">or</span> print(<span class="string">'哼'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哼</span><br></pre></td></tr></table></figure><p>逻辑与运算做取值时，取第一个为False的值；如果所有运算数都是True，则取最后一个值</p><p>逻辑或运算做取值时，取第一个为True的值；如果所有运算数都是False，则取最后一个值</p></li><li><p>位运算</p><ul><li><p>与、或、异或</p></li><li><p>左移、右移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(x&lt;&lt;<span class="number">3</span>)<span class="comment">#a&lt;&lt;n ==&gt;a*2的n次方</span></span><br><span class="line"><span class="number">40</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=<span class="number">15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(y&gt;&gt;<span class="number">2</span>)<span class="comment">#a&gt;&gt;n ==&gt;a除以2的n次方</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>pass</code>关键字</p><p>没意义，只是用来占位的</p></li><li><p>3元表达式对if…else进行转化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1=<span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num2=<span class="number">30</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=num1 <span class="keyword">if</span> num1&gt;num2 <span class="keyword">else</span> num2</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure></li><li><p>打印图案</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法1：刚刚从隔壁C语言转过来，看这个比较舒服</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i):</span><br><span class="line">        <span class="keyword">if</span> j&lt;i<span class="number">-1</span>:</span><br><span class="line">            print(<span class="string">'*'</span>,end=<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'*'</span>,end=<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法2：不得不说，Python大法好</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    print(i*<span class="string">'*'</span>) <span class="comment">#别忘了print()默认的end参数是换行</span></span><br></pre></td></tr></table></figure> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure></li><li><p>打印99乘法表</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        print(j,<span class="string">'*'</span>,i,<span class="string">'='</span>,j*i,end=<span class="string">' '</span>)</span><br><span class="line">    print(<span class="string">'\n'</span>）</span><br><span class="line">    </span><br><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span> <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span> <span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span> <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span> <span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span> <span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span> <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span> <span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span> <span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span> <span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span> <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span> <span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span> <span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span> <span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span> <span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span> <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span> <span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span> <span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span> <span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span> <span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span> <span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span> <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span> <span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span> <span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span> <span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span> <span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span> <span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span> <span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span> <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span> </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span> <span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span> <span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span> <span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span> <span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span> <span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span> <span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span> <span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span> <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure><p> emm，有点丑，改一下<code>sep</code>参数即可(seq默认是空格)</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        print(j,<span class="string">'*'</span>,i,<span class="string">'='</span>,j*i,sep=<span class="string">''</span>,end=<span class="string">' '</span>)</span><br><span class="line">    print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span>     <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span>     <span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span>     <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span>     <span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span>     <span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span>     <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span>     <span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span>     <span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span>     <span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span>     <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span>     <span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span>     <span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span>     <span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span>     <span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span>     <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span>     <span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span>     <span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span>     <span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span>     <span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span>     <span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span>     <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span>     <span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span>     <span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span>     <span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span>     <span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span>     <span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span>     <span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span>     <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span>     </span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span>     <span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span>     <span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span>     <span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span>     <span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span>     <span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span>     <span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span>     <span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span>     <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure></li></ul><p>   但还是丑，再改一下<code>end</code>参数</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        print(j,<span class="string">'*'</span>,i,<span class="string">'='</span>,j*i,end=<span class="string">'\t'</span>)</span><br><span class="line">    print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span><span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span><span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span><span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span><span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span><span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span><span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span><span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span><span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span><span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span><span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span><span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span><span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span><span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span><span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span><span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span><span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span><span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span><span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span><span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span><span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span><span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span><span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span><span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span><span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span><span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span><span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span><span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span><span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span><span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span><span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span><span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span><span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span><span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span><span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span><span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span><span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure><ul><li><p>for …else</p><p> 当循环里的break没有被执行的时候，就会执行else语句</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">101</span>,<span class="number">201</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>,i):</span><br><span class="line">        <span class="keyword">if</span> i%j==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">#不是素数</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(i,<span class="string">'是素数'</span>)</span><br></pre></td></tr></table></figure></li><li><p>range()内必须是整数</p></li><li><p>字符串</p><p> 可以用一对三个单/双引号、一堆单/双引号 来表示字符串</p><p> <code>\</code>表示转义字符</p><p> 在字符串前面加上<code>r</code>表示原生字符</p><p> 很灵活！</p></li></ul><p>​        可迭代对象：<code>str,list,tuple,dict,set,range</code>,都可以遍历</p><p>​        </p><p>​        注意：<strong>字符串是不可变数据类型</strong></p><p>​        切片语法：str[start​：end：​step]，左闭右开</p><p>​        step不能为0</p><p>​        可以倒序，when step&lt;0，但此时start应该大于end</p><p>​        str[::]代表全部复制</p><p>​        str[::-1]代表倒序复制全部</p><p>​        </p><ul><li><p>str中常用的查找方法</p><ul><li><p>find</p></li><li><p>index</p></li><li><p>rfind</p></li><li><p>rindex</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="string">'abcde'</span></span><br><span class="line">  &gt;&gt;&gt; s.find(<span class="string">'b'</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line">  &gt;&gt;&gt; s.index(<span class="string">'b'</span>)</span><br><span class="line">  <span class="number">1</span></span><br><span class="line">  &gt;&gt;&gt; s.find(<span class="string">'asd'</span>) <span class="comment">#找不到返回-1</span></span><br><span class="line">  <span class="number">-1</span></span><br><span class="line">  &gt;&gt;&gt; s.index(<span class="string">'sdfg'</span>) <span class="comment">#找不到会报错</span></span><br><span class="line">  Traceback (most recent call last):</span><br><span class="line">    File <span class="string">"&lt;pyshell#272&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">      s.index(<span class="string">'sdfg'</span>)</span><br><span class="line">  ValueError: substring <span class="keyword">not</span> found</span><br><span class="line">  &gt;&gt;&gt; s=<span class="string">'aabcdefe'</span></span><br><span class="line">  &gt;&gt;&gt; s.rfind(<span class="string">'a'</span>)</span><br><span class="line">  &gt;&gt;&gt;   <span class="number">1</span></span><br><span class="line">  &gt;&gt;&gt; s.rindex(<span class="string">'a'</span>)</span><br><span class="line">  &gt;&gt;&gt;   <span class="number">1</span></span><br><span class="line">  &gt;&gt;&gt; s.rfind(<span class="string">'asdf'</span>) </span><br><span class="line">  &gt;&gt;&gt;   <span class="number">-1</span></span><br><span class="line">  &gt;&gt;&gt; s.rindex(<span class="string">'asdf'</span>)</span><br><span class="line">  &gt;&gt;&gt;   Traceback (most recent call last):</span><br><span class="line">  &gt;&gt;&gt;     File <span class="string">"&lt;pyshell#282&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  &gt;&gt;&gt;       s.rindex(<span class="string">'asdf'</span>)</span><br><span class="line">  &gt;&gt;&gt;   ValueError: substring <span class="keyword">not</span> found</span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>is开头的方法是判断方法，返回布尔值</code></pre><ul><li><p>replace</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word=<span class="string">'hello'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m=word.replace(<span class="string">'l'</span>,<span class="string">'x'</span>)<span class="comment">#将字母‘l’替换为字母‘x’</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m</span><br><span class="line"><span class="string">'hexxo'</span></span><br></pre></td></tr></table></figure></li><li><p>split   rsplit    splitlines   partition   rpartition</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'a-b-c-d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=x.split(<span class="string">'-'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x<span class="comment">#字符串是不可变数据类型</span></span><br><span class="line"><span class="string">'a-b-c-d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'a-b-c-d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>z=x.split(<span class="string">'-'</span>,<span class="number">2</span>)<span class="comment">#分割两次（分成3部分）</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>z</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c-d'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zz=x.rsplit(<span class="string">'-'</span>,<span class="number">2</span>)<span class="comment">#rsplit就是从后面开始分割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zz</span><br><span class="line">[<span class="string">'a-b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><p>partition可以指定一个字符作为分隔符，分为<code>3</code>部分</p><p>rpatition就是从后面开始找</p><p>比如分割文件名和后缀名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'2020.05.21.mp4'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.partition(<span class="string">'.'</span>)</span><br><span class="line">(<span class="string">'2020'</span>, <span class="string">'.'</span>, <span class="string">'05.21.mp4'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.rpartition(<span class="string">'.'</span>)</span><br><span class="line">(<span class="string">'2020.05.21'</span>, <span class="string">'.'</span>, <span class="string">'mp4'</span>) <span class="comment">#分割文件名和后缀名</span></span><br></pre></td></tr></table></figure></li><li><p>修改大小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'hello word HAHA mie'</span></span><br><span class="line"><span class="comment">#capitalize:只让首字母大写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.capitalize()</span><br><span class="line"><span class="string">'Hello word haha mie'</span></span><br><span class="line"><span class="comment">#upper:全大写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.upper()</span><br><span class="line"><span class="string">'HELLO WORD HAHA MIE'</span></span><br><span class="line"><span class="comment">#lower：全小写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.lower()</span><br><span class="line"><span class="string">'hello word haha mie'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#title:每个单词的首字母大写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.title()</span><br><span class="line"><span class="string">'Hello Word Haha Mie'</span></span><br></pre></td></tr></table></figure></li><li><p><code>ljust(width，fillchar)</code></p><p>让字符串以指定长度width显示，如果长度不够，默认在右边使用空格补齐，可用fillchar参数修改。</p><p>同理<code>rjust(width，fillchar)</code>是在另一侧进行</p><p><code>center(width，fillchar)</code>是在中间进行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'Monday'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ljust(<span class="number">10</span>,<span class="string">'+'</span>)</span><br><span class="line"><span class="string">'Monday++++'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.rjust(<span class="number">10</span>,<span class="string">'+'</span>)</span><br><span class="line"><span class="string">'++++Monday'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.center(<span class="number">10</span>,<span class="string">'*'</span>)</span><br><span class="line"><span class="string">'**Monday**'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.center(<span class="number">11</span>,<span class="string">'*'</span>)</span><br><span class="line"><span class="string">'***Monday**'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.center(<span class="number">12</span>,<span class="string">'*'</span>)</span><br><span class="line"><span class="string">'***Monday***'</span></span><br></pre></td></tr></table></figure></li><li><p>去空格(strip()默认删除空格)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'   apple    '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.lstrip()</span><br><span class="line"><span class="string">'apple    '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.rstrip()</span><br><span class="line"><span class="string">'   apple'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.strip()</span><br><span class="line"><span class="string">'apple'</span></span><br></pre></td></tr></table></figure><p>也可以指定要删除的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'*** apple****'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.lstrip(<span class="string">'*'</span>)</span><br><span class="line"><span class="string">' apple****'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.rstrip(<span class="string">'*'</span>)</span><br><span class="line"><span class="string">'*** apple'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.strip()</span><br><span class="line"><span class="string">'*** apple****'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.strip(<span class="string">'*'</span>)</span><br><span class="line"><span class="string">' apple'</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>列表 ==&gt; 字符串: <code>join()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lis=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'-'</span>.join(lis)</span><br><span class="line"><span class="string">'a-b-c-d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'*'</span>.join(<span class="string">'hello'</span>)<span class="comment">#join后面是可迭代对象</span></span><br><span class="line"><span class="string">'h*e*l*l*o'</span></span><br></pre></td></tr></table></figure></li><li><p>字符编码查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'h*e*l*l*o'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">'a'</span>)</span><br><span class="line"><span class="number">97</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">65</span>)</span><br><span class="line"><span class="string">'A'</span></span><br></pre></td></tr></table></figure><p>使用encode方法，可以将字符串转换为对应的编码集结果</p><p>用decode方法可以解码</p></li><li><p>in 和 not in</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'word'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> <span class="string">'x'</span> <span class="keyword">in</span> x:</span><br><span class="line">print(<span class="string">"存在"</span>)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>格式化输出print()，与C语言类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'fhs'</span></span><br><span class="line">age=<span class="number">12</span></span><br><span class="line">f=<span class="number">3.1415926</span></span><br><span class="line">print(<span class="string">'大家好，我叫%s，我%d岁了，我喜欢的浮点数是%f'</span>%(name ,age,f))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大家好，我叫fhs，我<span class="number">12</span>岁了，我喜欢的浮点数是<span class="number">3.141593</span></span><br></pre></td></tr></table></figure><p>在%s前面再加一个%，类似转义字符的功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"我叫%%s，我%d 岁了"</span>%<span class="number">12</span>)</span><br><span class="line">我叫%s，我<span class="number">12</span> 岁了</span><br></pre></td></tr></table></figure></li><li><p>format</p><ul><li><p>{}内什么也不写，自动一一对应</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'fhs'</span></span><br><span class="line">city=<span class="string">'sd'</span></span><br><span class="line">age=<span class="number">12</span></span><br><span class="line">print(<span class="string">"你好，我叫&#123;&#125;，来自&#123;&#125;,今年&#123;&#125;岁了"</span>.format(name,city,age))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好，我叫fhs，来自sd,今年<span class="number">12</span>岁了</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>{}写下标，按照下标从小到大一一对应</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'fhs'</span></span><br><span class="line">city=<span class="string">'sd'</span></span><br><span class="line">age=<span class="number">12</span></span><br><span class="line">print(<span class="string">"你好，我叫&#123;1&#125;，来自&#123;0&#125;,今年&#123;2&#125;岁了"</span>.format(city,name,age))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好，我叫fhs，来自sd,今年<span class="number">12</span>岁了</span><br></pre></td></tr></table></figure></li><li><p>{}内指定变量名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'fhs'</span></span><br><span class="line">city=<span class="string">'sd'</span></span><br><span class="line">age=<span class="number">12</span></span><br><span class="line">print(<span class="string">"你好，我叫&#123;name&#125;，来自&#123;city&#125;,今年&#123;age&#125;岁了"</span>.format(city=<span class="string">'sd'</span>,name=<span class="string">'fhs'</span>,age=<span class="number">12</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好，我叫fhs，来自sd,今年<span class="number">12</span>岁了</span><br></pre></td></tr></table></figure><p>{下标}和{变量}可混合使用,但顺序有要求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">age=<span class="number">12</span></span><br><span class="line">print(<span class="string">"你好，我叫&#123;1&#125;，来自&#123;0&#125;,今年&#123;age&#125;岁了"</span>.format(<span class="string">'sd'</span>,<span class="string">'fhs'</span>,age=<span class="number">12</span>))</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好，我叫fhs，来自sd,今年<span class="number">12</span>岁了</span><br></pre></td></tr></table></figure><p>   还可以用列表，字典等传入</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">d=[<span class="string">'fhs'</span>,<span class="number">12</span>,<span class="string">'sd'</span>,<span class="number">179</span>]</span><br><span class="line">   b=<span class="string">'我是&#123;&#125;,我&#123;&#125;岁了，来自&#123;&#125;，身高&#123;&#125;'</span>.format(d[<span class="number">0</span>],d[<span class="number">1</span>],d[<span class="number">2</span>],d[<span class="number">3</span>])</span><br><span class="line">   bb=<span class="string">'我是&#123;&#125;,我&#123;&#125;岁了，来自&#123;&#125;，身高&#123;&#125;'</span>.format(*d) <span class="comment">#更快的写法</span></span><br><span class="line">   </span><br><span class="line">info=&#123;<span class="string">'name'</span>:<span class="string">'hhh'</span>,<span class="string">'age'</span>:<span class="number">10001</span>,<span class="string">'addr'</span>:<span class="string">'sdd'</span>,<span class="string">'height'</span>:<span class="number">1111</span>&#125;</span><br><span class="line">   bbb=<span class="string">'我是&#123;name&#125;,我&#123;age&#125;岁了，来自&#123;addr&#125;，身高&#123;height&#125;'</span>.format(**info)<span class="comment">#列表加一个*，字典加两个*</span></span><br><span class="line"></span><br><span class="line">   print(b)</span><br><span class="line">   print(bb)</span><br><span class="line">   print(bbb)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我是fhs,我<span class="number">12</span>岁了，来自sd，身高<span class="number">179</span></span><br><span class="line">我是fhs,我<span class="number">12</span>岁了，来自sd，身高<span class="number">179</span></span><br><span class="line">我是hhh,我<span class="number">10001</span>岁了，来自sdd，身高<span class="number">1111</span></span><br></pre></td></tr></table></figure></code></pre><p>​    </p><ul><li><p>list</p><p>可变数据类型</p><ul><li><p>添加元素：</p><ul><li>append()</li><li>insert(index,object)</li><li>extend():  <code>A.extend(B)</code></li></ul></li><li><p>删除元素</p><ul><li>pop(index): 删除一个元素,默认删除最后一个位置(index=-1)的元素，可用index参数修改默认值</li><li>remove()  :删除指定元素，不存在会报错，若存在多个，则删除下标最小的那个</li><li>clear()  :清空list</li><li>del :不推荐</li></ul></li><li><p>查询</p><ul><li>count（‘str_name’）：计数</li><li>index(‘str_name’)： 返回str_name在列表中的下标</li></ul></li><li><p>排序</p><ul><li><p>sort(reverse=True/False) ，会改变原始列表（也就是对原始列表进行排序）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>num=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num</span><br><span class="line">[<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></li><li><p>sorted()是内置函数，不会改变原始list，而会生成一个新的list</p></li></ul></li></ul></li></ul><pre><code>reverse()用于将list翻转，等价于`list[::-1]`<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lis</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lis.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lis</span><br><span class="line">[<span class="number">2</span>, <span class="number">1</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>]</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>不可变类型：尝试修改时会产生一个新的变量，也就是指向了新的地址</p><ul><li>数字</li><li>字符串</li><li>元组</li></ul></li><li><p>可变类型：修改时地址指向不会改变</p><ul><li>列表</li><li>字典</li><li>集合</li></ul></li></ul><ul><li><p>复制</p><p>在下面的代码中，y和x指向了同一片内存区域</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=x</span><br></pre></td></tr></table></figure><p>如果想要复制一份，指向不同的地址，可以使用copy()方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=x</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>z=x.copy()<span class="comment">#复制一份值</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'0x%X,0x%X,0x%X'</span>%(id(x),id(y),id(z)))</span><br><span class="line"><span class="number">0x1FA6F616588</span>,<span class="number">0x1FA6F616108</span>,<span class="number">0x1FA6F5D6908</span></span><br></pre></td></tr></table></figure><p>也可以使用内置copy模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> copy</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=copy.copy(x)<span class="comment">#同：a=x.copy()</span></span><br></pre></td></tr></table></figure></li></ul><p>  ​    以上都是浅拷贝</p><p>  ​    切片就是一个浅拷贝</p><ul><li><p>列表中的<code>enumerate</code>能够同时遍历下标和元素值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> index,letter <span class="keyword">in</span> enumerate(x):</span><br><span class="line">print(<span class="string">'下标是&#123;&#125;,对应的字母是&#123;&#125;'</span>.format(index,letter))</span><br><span class="line">下标是<span class="number">0</span>,对应的字母是a</span><br><span class="line">下标是<span class="number">1</span>,对应的字母是b</span><br><span class="line">下标是<span class="number">2</span>,对应的字母是c</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>列表推导式</p><ul><li><p>实现list分组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m=[i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">37</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">62</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">65</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>, <span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">91</span>, <span class="number">92</span>, <span class="number">93</span>, <span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n=[m[j:j+<span class="number">3</span>] <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>], [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>], [<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>], [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>], [<span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>], [<span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>], [<span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>], [<span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>], [<span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>], [<span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>], [<span class="number">37</span>, <span class="number">38</span>, <span class="number">39</span>], [<span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>], [<span class="number">43</span>, <span class="number">44</span>, <span class="number">45</span>], [<span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>], [<span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>], [<span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>], [<span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>], [<span class="number">58</span>, <span class="number">59</span>, <span class="number">60</span>], [<span class="number">61</span>, <span class="number">62</span>, <span class="number">63</span>], [<span class="number">64</span>, <span class="number">65</span>, <span class="number">66</span>], [<span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>], [<span class="number">70</span>, <span class="number">71</span>, <span class="number">72</span>], [<span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>], [<span class="number">76</span>, <span class="number">77</span>, <span class="number">78</span>], [<span class="number">79</span>, <span class="number">80</span>, <span class="number">81</span>], [<span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>], [<span class="number">85</span>, <span class="number">86</span>, <span class="number">87</span>], [<span class="number">88</span>, <span class="number">89</span>, <span class="number">90</span>], [<span class="number">91</span>, <span class="number">92</span>, <span class="number">93</span>], [<span class="number">94</span>, <span class="number">95</span>, <span class="number">96</span>], [<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>], [<span class="number">100</span>]]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>深拷贝</p><p>只能用copy模块实现</p><p>图1是浅拷贝<code>word1=words.copy()#或者word1=copy.copy(words)</code>，只拷贝了外面的一层</p><p>图2是深拷贝<code>word2=copy.deepcopy(words)#深拷贝</code></p></li></ul><p><img src="1.png" alt="图1"></p><p><img src="2.png" alt="图2"></p><ul><li><p>元组:内置类</p><p>不可变类型，但可以查询</p><p>只有下面这两个方法！</p><ul><li><p>index()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums.index(<span class="number">4</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums.index(<span class="number">9</span>)<span class="comment">#找不到会报错</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#133&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    nums.index(<span class="number">9</span>)</span><br><span class="line">ValueError: tuple.index(x): x <span class="keyword">not</span> <span class="keyword">in</span> tuple</span><br></pre></td></tr></table></figure></li><li><p>count()</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums.count(<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nums.count(<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><pre><code>表示只有一个元素的元组，不能用<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ages=(<span class="number">18</span>)</span><br></pre></td></tr></table></figure>因为<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ages=(<span class="number">18</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ages)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">int</span>'&gt;</span></span><br></pre></td></tr></table></figure>需要加一个逗号<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ages=(<span class="number">18</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(ages)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">tuple</span>'&gt;</span></span><br></pre></td></tr></table></figure></code></pre><ul><li><p>下面的代码会报错,因为int型不是可迭代对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(tuple(<span class="number">18</span>))</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#139&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(tuple(<span class="number">18</span>))</span><br><span class="line">TypeError: <span class="string">'int'</span> object <span class="keyword">is</span> <span class="keyword">not</span> iterable</span><br></pre></td></tr></table></figure><p>而字符串可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(tuple(<span class="string">'hello'</span>))</span><br><span class="line">(<span class="string">'h'</span>, <span class="string">'e'</span>, <span class="string">'l'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>)</span><br></pre></td></tr></table></figure></li><li><p>list   &lt; == &gt;   tuple</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tuple(x)<span class="comment"># list ==&gt;tuple</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(y)<span class="comment"># tuple ==&gt; list</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure></li><li><p>字典查询</p><p>key只能是不可变数据类型，一般使用字符串</p><p>若key重复，则后一个覆盖前一个</p><p>若查找的key不存在，则默认报错，可以使用get()方法修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person=&#123;<span class="string">'name'</span>:<span class="string">'fhs'</span>,<span class="string">'city'</span>:<span class="string">'sd'</span>,<span class="string">'age'</span>:<span class="number">12</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person[<span class="string">'h'</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#149&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    person[<span class="string">'h'</span>]</span><br><span class="line">KeyError: <span class="string">'h'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person.get(<span class="string">'h'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(person.get(<span class="string">'h'</span>))</span><br><span class="line"><span class="keyword">None</span></span><br></pre></td></tr></table></figure><p>默认值是None，可修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(person.get(<span class="string">'h'</span>,<span class="number">199</span>))<span class="comment">#若找不到，则默认值为199</span></span><br><span class="line"><span class="number">199</span></span><br></pre></td></tr></table></figure><p>get方法只是对于当找不到key时的返回值情况，如果使用了get方法，并且找到了key，那么返回的仍旧是key对应的value</p></li><li><p>字典的增删改</p><ul><li><p>直接用key修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person=&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person[<span class="string">'name'</span>]=<span class="string">'dfg'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'dfg'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>若key不存在，则会添加一个新的键值对</p></li><li><p>pop()删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  &#123;<span class="string">'name'</span>: <span class="string">'dfg'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person.pop(<span class="string">'name'</span>)<span class="comment">#返回被删除的value</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  <span class="string">'dfg'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  &#123;<span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>popitem()</p></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  &#123;<span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person.popitem()<span class="comment">#返回被删除的键值对</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  (<span class="string">'age'</span>, <span class="number">12</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>  &#123;<span class="string">'city'</span>: <span class="string">'sd'</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><p>clear()</p><p>清空字典</p></li></ul><ul><li><p>字典的update()方法</p><p>用于合并两个字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1=&#123;<span class="string">'name'</span>:<span class="string">'fhs'</span>,<span class="string">'city'</span>:<span class="string">'sd'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p2=&#123;<span class="string">'height'</span>:<span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1.update(p2)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>+</code>可以连接两个而字符串、列表、元组,但字典不能！</p></li><li><p>字典的迭代</p><p>方法一、for… in …</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> p1:<span class="comment">#拿到的是key</span></span><br><span class="line">print(x,<span class="string">'='</span>,p1[x])</span><br><span class="line">name = fhs</span><br><span class="line">city = sd</span><br><span class="line">height = <span class="number">199</span></span><br></pre></td></tr></table></figure><p>方法二 、先获取所有key，然后遍历key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k <span class="keyword">in</span> p1.keys():</span><br><span class="line">print(k,<span class="string">'='</span>,p1[k])</span><br><span class="line">name = fhs</span><br><span class="line">city = sd</span><br><span class="line">height = <span class="number">199</span></span><br></pre></td></tr></table></figure><p>方法三、获取所有value，但不能看到key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> v <span class="keyword">in</span> p1.values():</span><br><span class="line">print(v)</span><br><span class="line">fhs</span><br><span class="line">sd</span><br><span class="line"><span class="number">199</span></span><br></pre></td></tr></table></figure><p>方法四、使用dict.items()方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> item <span class="keyword">in</span> p1.items():</span><br><span class="line">print(item[<span class="number">0</span>],<span class="string">'='</span>,item[<span class="number">1</span>])</span><br><span class="line">name = fhs</span><br><span class="line">city = sd</span><br><span class="line">height = <span class="number">199</span></span><br></pre></td></tr></table></figure><p>还可以拆包（最常用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1</span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'city'</span>: <span class="string">'sd'</span>, <span class="string">'height'</span>: <span class="number">199</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k,v <span class="keyword">in</span> p1.items():</span><br><span class="line">print(k,<span class="string">'='</span>,v)</span><br><span class="line">name = fhs</span><br><span class="line">city = sd</span><br><span class="line">height = <span class="number">199</span></span><br></pre></td></tr></table></figure></li><li><p>用字典统计字母个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chars=[<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'b'</span>,<span class="string">'d'</span>,<span class="string">'z'</span>,<span class="string">'x'</span>,<span class="string">'r'</span>,<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>,<span class="string">'s'</span>,<span class="string">'a'</span>,<span class="string">'d'</span>,<span class="string">'f'</span>,<span class="string">'p'</span>]</span><br><span class="line">dic=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> chars:</span><br><span class="line">    <span class="keyword">if</span> letter <span class="keyword">not</span> <span class="keyword">in</span> dic.keys():</span><br><span class="line">        dic[letter]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dic[letter]+=<span class="number">1</span></span><br><span class="line">print(dic)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'a'</span>: <span class="number">3</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">1</span>, <span class="string">'d'</span>: <span class="number">2</span>, <span class="string">'z'</span>: <span class="number">1</span>, <span class="string">'x'</span>: <span class="number">1</span>, <span class="string">'r'</span>: <span class="number">1</span>, <span class="string">'s'</span>: <span class="number">1</span>, <span class="string">'f'</span>: <span class="number">1</span>, <span class="string">'p'</span>: <span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure><p>在此基础上，取出现次数最多的那个字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取出现次数最多的那个字母</span></span><br><span class="line">max_cnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> dic.items():</span><br><span class="line">    <span class="keyword">if</span> v&gt;max_cnt:</span><br><span class="line">        max_cnt=v</span><br><span class="line">print(max_cnt)<span class="comment">#3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> dic.items():</span><br><span class="line">    <span class="keyword">if</span> v==max_cnt:</span><br><span class="line">        print(k)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">c</span><br></pre></td></tr></table></figure></li><li><p>字典也有推导式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dic=&#123;<span class="string">'a'</span>: <span class="number">3</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">1</span>, <span class="string">'d'</span>: <span class="number">2</span>, <span class="string">'p'</span>: <span class="number">1</span>&#125;</span><br><span class="line">dic1=&#123;&#125;</span><br><span class="line">dic1=&#123;v:k <span class="keyword">for</span> k,v <span class="keyword">in</span> dic.items()&#125;</span><br><span class="line">print(dic1)<span class="comment">#注意若key相同，则后者覆盖前者</span></span><br><span class="line">&#123;<span class="number">3</span>: <span class="string">'c'</span>, <span class="number">1</span>: <span class="string">'p'</span>, <span class="number">2</span>: <span class="string">'d'</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>set</p><p>可以使用<code>()</code>表示，也可以使用<code>{}</code>表示</p><p>集合的特点：无序，不重复，所有没有查询的方法</p><ul><li><p>add()  增加一个元素到随机位置</p></li><li><p>pop()   随机删除一个元素</p></li><li><p>remove()    删除一个指定的元素，不存在报错</p></li><li><p>union（）   将多个集合合并 成一个新的集合</p></li><li><p>update()   A.update(B) 将B拼接到A 里、</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>&#125;</span><br><span class="line">s.add(<span class="string">'new'</span>)</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line">s.remove(<span class="number">1</span>)</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line">s.pop()</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ss=&#123;<span class="string">'f'</span>,<span class="string">'h'</span>&#125;</span><br><span class="line">print(s.union(ss))</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line">s.update(ss)</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'new'</span>&#125;</span><br><span class="line">&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'new'</span>&#125;</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="string">'new'</span>&#125;</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="string">'h'</span>, <span class="string">'new'</span>, <span class="string">'f'</span>&#125;</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="string">'new'</span>&#125;</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="string">'f'</span>, <span class="string">'h'</span>, <span class="string">'new'</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>集合支持许多运算，如</p><ul><li>差集：-</li><li>交集： &amp;</li><li>并集：|</li><li>异或： ^       ==&gt; 求两个集合差集的并集</li></ul></li></ul><ul><li><p>json</p><p>josn是个字符串</p><p>在Python中，可以用dumps方法实现dict和json的转化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dic=&#123;<span class="string">'name'</span>:<span class="string">'fhs'</span>,<span class="string">'age'</span>:<span class="number">12</span>&#125;</span><br><span class="line">x=json.dumps(dic)</span><br><span class="line">print(x)</span><br><span class="line">print(type(x))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>: <span class="string">"fhs"</span>, <span class="string">"age"</span>: <span class="number">12</span>&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>dumps将字典，元组，列表等转换为json</p></li></ul><p>  可以使用<code>eval</code>函数将json字符串转换为原来的格式，如字典</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dic=&#123;<span class="string">'name'</span>:<span class="string">'fhs'</span>,<span class="string">'age'</span>:<span class="number">12</span>&#125;</span><br><span class="line">x=json.dumps(dic)<span class="comment">#x是json字符串</span></span><br><span class="line"></span><br><span class="line">y=eval(x)</span><br><span class="line">print(y)</span><br><span class="line">print(type(y))</span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>  也可以使用json模块自带的<code>loads</code>方法</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dic=&#123;<span class="string">'name'</span>:<span class="string">'fhs'</span>,<span class="string">'age'</span>:<span class="number">12</span>&#125;</span><br><span class="line">x=json.dumps(dic)<span class="comment">#x是json字符串</span></span><br><span class="line"></span><br><span class="line">y=json.loads(x)</span><br><span class="line">print(y)</span><br><span class="line">print(type(y))</span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'fhs'</span>, <span class="string">'age'</span>: <span class="number">12</span>&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>函数</p><p>传参可以按照对应位置依次填入，也可以指定<code>形参名=实参</code>，此时与顺序无关</p><p>如果一个函数没有指定返回值，那么返回<code>None</code></p><p>Python函数中的参数不指定数据类型，但可以使用<code>:type</code>的格式来给出建议传入的类型,比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a:int,b:int)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>使用glabal 可以在函数内部定义/更新全局变量</p></li><li><p>在Python里，只有函数能够分割作用域</p></li><li><p>在Python里，可return多个值</p></li><li><p>默认参数的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(name,age,city=<span class="string">'sd'</span>)</span>:</span><span class="comment">#默认参数city必须放在最后位置！</span></span><br><span class="line">    print(<span class="string">'我是&#123;&#125;，我&#123;&#125;岁了，来自&#123;&#125;'</span>.format(name,age,city))</span><br><span class="line">say(<span class="string">'fhs'</span>,<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我是fhs，我<span class="number">12</span>岁了，来自sd</span><br></pre></td></tr></table></figure><p>默认参数必须放在最后！</p></li></ul><ul><li><p>可变参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b,*args)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>默认(缺省)参数应该放最后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b,*ar,mu=<span class="number">1</span>)</span>:</span></span><br><span class="line">    c=a+b;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ar:</span><br><span class="line">        c+=i</span><br><span class="line">    <span class="keyword">return</span> mu*c</span><br><span class="line"></span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))<span class="comment">#不加mu则默认mu=1</span></span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,mu=<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><p>总结一下：</p><p>​    <code>*args</code> 表示可变位置参数</p><p>​    <code>**kwargs</code>表示可变关键字参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b,*ar,mu=<span class="number">1</span>,**kwargs)</span>:</span></span><br><span class="line">    print(<span class="string">'kwargs=&#123;&#125;'</span>.format(kwargs))</span><br><span class="line">    c=a+b;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ar:</span><br><span class="line">        c+=i</span><br><span class="line">    <span class="keyword">return</span> mu*c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,mu=<span class="number">2</span>,x=<span class="number">0</span>,y=<span class="number">6</span>))</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kwargs=&#123;<span class="string">'x'</span>: <span class="number">0</span>, <span class="string">'y'</span>: <span class="number">6</span>&#125;<span class="comment">#多余的参数以字典形式保存</span></span><br><span class="line">  <span class="number">24</span></span><br></pre></td></tr></table></figure><ul><li><p>在Python中，函数不能重名，否则后者会覆盖前者</p></li><li><p>变量名字不能与内置函数名重合，否则会发生一系列错误</p></li><li><p>在函数内部要修改全局变量的值，需要用<code>global</code>声明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cnt=<span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> cnt<span class="comment">#!!!</span></span><br><span class="line">    cnt+=<span class="number">1</span></span><br><span class="line">    print(<span class="string">"你好呀"</span>)</span><br><span class="line">    <span class="keyword">if</span> cnt&lt;<span class="number">3</span>:</span><br><span class="line">        tell()</span><br><span class="line"></span><br><span class="line">tell()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">你好呀</span><br><span class="line">你好呀</span><br><span class="line">你好呀</span><br></pre></td></tr></table></figure></li><li><p>匿名函数：多用于表达一个简单的函数，基本上只调用一次</p><ul><li>调用方法1：起个名字</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=<span class="keyword">lambda</span> a,b:a+b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>调用方法2（常用）:将这个匿名函数当作参数传给另一个函数使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal</span><span class="params">(a,b,fn)</span>:</span></span><br><span class="line">    c=fn(a,b)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x-y</span><br><span class="line"></span><br><span class="line">x1=cal(<span class="number">1</span>,<span class="number">2</span>,add)</span><br><span class="line">x2=cal(<span class="number">10</span>,<span class="number">5</span>,minus)</span><br><span class="line"></span><br><span class="line">print(x1,x2)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>上面的两个函数add和minus很简单，可以i用匿名函数来实现</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal</span><span class="params">(a,b,fn)</span>:</span></span><br><span class="line">    c=fn(a,b)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x1=cal(<span class="number">1</span>,<span class="number">2</span>,<span class="keyword">lambda</span> x,y:x+y)</span><br><span class="line">x2=cal(<span class="number">10</span>,<span class="number">5</span>,<span class="keyword">lambda</span> x,y:x-y)</span><br><span class="line"></span><br><span class="line">print(x1,x2)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li><p>sort方法</p><p>列表的sort方法会直接对原始列表进行排序</p><p>而sorted是内置函数，在排序时并不会改变原来的列表，而是会生成一个新的列表</p></li></ul><p>​        对于字典，不可以直接使用sort方法，我们可以通过指定key来排序</p><p>​         (和C++的STL中的sort原理差不多)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lis=[&#123;<span class="string">'age'</span>:<span class="number">100</span>,<span class="string">'height'</span>:<span class="number">1</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">99</span>,<span class="string">'height'</span>:<span class="number">34</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">12345</span>,<span class="string">'height'</span>:<span class="number">12</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">#对lis按照age的大小升序排列</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cmp</span><span class="params">(one)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> one[<span class="string">'age'</span>]</span><br><span class="line"></span><br><span class="line">lis.sort(key=cmp)</span><br><span class="line">print(lis)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;[&#123;<span class="string">'age'</span>: <span class="number">99</span>, <span class="string">'height'</span>: <span class="number">34</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">100</span>, <span class="string">'height'</span>: <span class="number">1</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">12345</span>, <span class="string">'height'</span>: <span class="number">12</span>&#125;]</span><br></pre></td></tr></table></figure><p>也可以用匿名函数而不用上面的cmp()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lis=[&#123;<span class="string">'age'</span>:<span class="number">100</span>,<span class="string">'height'</span>:<span class="number">1</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">99</span>,<span class="string">'height'</span>:<span class="number">34</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">12345</span>,<span class="string">'height'</span>:<span class="number">12</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">#对lis按照age的大小升序排列</span></span><br><span class="line">lis.sort(key=<span class="keyword">lambda</span> one:one[<span class="string">'age'</span>])</span><br><span class="line">print(lis)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;[&#123;<span class="string">'age'</span>: <span class="number">99</span>, <span class="string">'height'</span>: <span class="number">34</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">100</span>, <span class="string">'height'</span>: <span class="number">1</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">12345</span>, <span class="string">'height'</span>: <span class="number">12</span>&#125;]</span><br></pre></td></tr></table></figure><ul><li><p>filter()       ==&gt; 对可迭代对象进行过滤，得到的是一个可迭代对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ages=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">11</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个参数是函数，第二个参数是可迭代对象</span></span><br><span class="line">x=filter(<span class="keyword">lambda</span> one:one&gt;<span class="number">18</span>,ages)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#x=list(x)</span></span><br><span class="line"><span class="comment">#print(x)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">66</span></span><br><span class="line"><span class="number">77</span></span><br><span class="line"><span class="number">88</span></span><br><span class="line"><span class="number">90</span></span><br></pre></td></tr></table></figure></li></ul><p>  <strong>这里有个不太理解的地方</strong>,下面的做法只能输出一个</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ages=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">11</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x=filter(<span class="keyword">lambda</span> one:one&gt;<span class="number">18</span>,ages)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1</span></span><br><span class="line">ad=list(x)</span><br><span class="line">print(type(x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2</span></span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> x:</span><br><span class="line">    print(type(it))</span><br></pre></td></tr></table></figure><p>  我的理解是，只要执行了1或者2中的任意一个，迭代器x就会变空了（每遍历到一个迭代器对象，就把它删除了）</p><ul><li><p>map</p><p>让可迭代对象中的<strong>每一个元素</strong>都执行一下某一个相同操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ages=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">11</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2</span><span class="params">(one)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> one+<span class="number">2</span></span><br><span class="line">m=map(add2,ages)<span class="comment">#让ages中的每个元素都加2</span></span><br><span class="line">print(list(m))</span><br><span class="line">&gt;&gt;&gt;[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">68</span>, <span class="number">79</span>, <span class="number">90</span>, <span class="number">11</span>, <span class="number">92</span>, <span class="number">13</span>]</span><br></pre></td></tr></table></figure><p>当然使用匿名函数更简洁</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ages=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">11</span>]</span><br><span class="line">m=map(<span class="keyword">lambda</span> one:one+<span class="number">2</span>,ages)<span class="comment">#让ages中的每个元素都加2</span></span><br><span class="line">print(list(m))</span><br><span class="line">&gt;&gt;&gt;[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">68</span>, <span class="number">79</span>, <span class="number">90</span>, <span class="number">11</span>, <span class="number">92</span>, <span class="number">13</span>]</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>reduce()</p><p>对<strong>某个可迭代对象</strong>执行某些操作，如累加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">ages=[i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>)]</span><br><span class="line">print(reduce(<span class="keyword">lambda</span> x,y:x+y,ages))</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">#也可以不使用匿名函数</span></span><br><span class="line"><span class="string">from functools import reduce</span></span><br><span class="line"><span class="string">ages=[i for i in range(1,101)]</span></span><br><span class="line"><span class="string">def m(x,y):</span></span><br><span class="line"><span class="string">    return x+y</span></span><br><span class="line"><span class="string">print(reduce(m,ages))</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">5050</span></span><br></pre></td></tr></table></figure><p>也可以将字典组成的列表中的某个属性值相加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">lis=[&#123;<span class="string">'age'</span>:<span class="number">3</span>,<span class="string">'height'</span>:<span class="number">1</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">2</span>,<span class="string">'height'</span>:<span class="number">34</span>&#125;,&#123;<span class="string">'age'</span>:<span class="number">1</span>,<span class="string">'height'</span>:<span class="number">12</span>&#125;]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">m</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y[<span class="string">'age'</span>]</span><br><span class="line">print(reduce(m,lis,<span class="number">0</span>))<span class="comment">#0是x的初始值，在这里必须指定</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">6</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">#也可以使用匿名函数</span></span><br><span class="line"><span class="string">from functools import reduce</span></span><br><span class="line"><span class="string">lis=[&#123;'age':3,'height':1&#125;,&#123;'age':2,'height':34&#125;,&#123;'age':1,'height':12&#125;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(reduce(lambda x,y:x+y['age'],lis,0))</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure></li></ul><p>  注意区分map和reduce</p><blockquote><p>reduce是不断地取迭代器中的下一个元素做某个操作，并将函数中前一个值更新为操作后的值，后一个取迭代对象中的下一个值，而map是对每个元素执行一次同样的操作；这里的操作都由那个<code>函数参数</code>指定</p></blockquote><ul><li><p>repr()      加个引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>repr(<span class="number">1</span>)</span><br><span class="line"><span class="string">'1'</span></span><br></pre></td></tr></table></figure></li><li><p>高阶函数</p><ul><li><p>函数调用函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是foo，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'foo'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zx</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是zx，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> foo()</span><br><span class="line"></span><br><span class="line">y=zx()</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我是zx，我被调用了</span><br><span class="line">我是foo，我被调用了</span><br><span class="line">foo</span><br></pre></td></tr></table></figure><p>而若改成下面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是foo，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'foo'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zx</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是zx，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> foo<span class="comment">#这里返回的是函数名字</span></span><br><span class="line"></span><br><span class="line">y=zx()</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我是zx，我被调用了</span><br><span class="line">&lt;function foo at <span class="number">0x000001F6F36D83A8</span>&gt;</span><br></pre></td></tr></table></figure><p>原因是：<code>return foo</code>这里返回的是函数名字,它是<code>&lt;function foo at 0x000001F6F36D83A8&gt;</code>,和上面的不同，这里并没有返回执行函数，只是返回了函数的名字而已</p><p>改成如下，就和上面一样了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是foo，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'foo'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zx</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"我是zx，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> foo<span class="comment">#这里返回的是函数名字</span></span><br><span class="line"></span><br><span class="line">y=zx()<span class="comment">#  y就代表函数foo</span></span><br><span class="line">z=y()<span class="comment">#相当于调用foo()</span></span><br><span class="line">print(z)<span class="comment">#那么就return 'foo'</span></span><br></pre></td></tr></table></figure></li><li><p>函数内部再嵌套一个函数（闭包）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">"我是内部函数，我被调用了"</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"我是外部函数，我被调用了"</span>)</span><br><span class="line">    <span class="keyword">return</span> inner()</span><br><span class="line">outer()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我是外部函数，我被调用了</span><br><span class="line">我是内部函数，我被调用了</span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line">    x=<span class="number">10</span><span class="comment">#在外部函数里定义了一个变量x，是一个局部变量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="comment">#在内部函数使用nonlocal修改外部函数的局部变量</span></span><br><span class="line">        <span class="keyword">nonlocal</span> x</span><br><span class="line">        y=x+<span class="number">1</span></span><br><span class="line">        print(<span class="string">'inner里的y='</span>,y)</span><br><span class="line">        x=<span class="number">20</span><span class="comment">#不是修改外部x变量，而是在inner函数内部又创建了一个新的变量x</span></span><br><span class="line">    <span class="keyword">return</span> inner()</span><br><span class="line">outer()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inner里的y= <span class="number">11</span></span><br></pre></td></tr></table></figure></code></pre><ul><li><p>计算代码运行耗时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">start=time.time()<span class="comment">#获取当前时间戳</span></span><br><span class="line">print(<span class="string">'start='</span>,start)</span><br><span class="line">x=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100000000</span>):</span><br><span class="line">    x+=i</span><br><span class="line">print(x)</span><br><span class="line">end=time.time()</span><br><span class="line">print(<span class="string">'代码运行耗时&#123;&#125;秒'</span>.format(end-start))</span><br><span class="line">start= <span class="number">1590586790.0947003</span></span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">代码运行耗时<span class="number">9.549989223480225</span>秒</span><br></pre></td></tr></table></figure></li><li><p>装饰器（优化上面的计算程序耗时代码）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_time</span><span class="params">(fn)</span>:</span></span><br><span class="line">    print(<span class="string">"我是外部，我被调用了"</span>)</span><br><span class="line">    print(<span class="string">'fn=&#123;&#125;'</span>.format(fn))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        start=time.time()</span><br><span class="line">        fn()</span><br><span class="line">        end=time.time()</span><br><span class="line">        print(<span class="string">"代码耗时"</span>,end-start)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@cal_time #第一件事调用cal_time;第二件事把被装饰的函数传递给fn</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">()</span>:</span></span><br><span class="line">    x=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100000000</span>):</span><br><span class="line">        x+=i</span><br><span class="line">    print(x)</span><br><span class="line">demo()</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三件事，当再次调用cal_time时，其实调用的是inner函数</span></span><br><span class="line">print(<span class="string">"装饰后的demo=&#123;&#125;"</span>.format(demo))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我是外部，我被调用了</span><br><span class="line">fn=&lt;function demo at <span class="number">0x00000248930EB5E8</span>&gt;</span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">代码耗时 <span class="number">4.854478359222412</span></span><br><span class="line">装饰后的demo=&lt;function cal_time.&lt;locals&gt;.inner at <span class="number">0x00000248930EB438</span>&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Python中，变量是没有数据类型的，是动态可变的。比如、&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="Python基础知识" scheme="http://yoursite.com/categories/Python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>光头强喊你砍树啦</title>
    <link href="http://yoursite.com/2020/05/17/%E5%85%89%E5%A4%B4%E5%BC%BA%E5%96%8A%E4%BD%A0%E7%A0%8D%E6%A0%91%E5%95%A6/"/>
    <id>http://yoursite.com/2020/05/17/光头强喊你砍树啦/</id>
    <published>2020-05-17T01:08:14.000Z</published>
    <updated>2020-05-17T01:10:37.918Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 00的位置，另一端在 <em>L</em> 的位置；数轴上的每个整数点，即 0，1，2，⋯，<em>L</em>，都种有一棵树。</p><p>由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有两个整数：<em>L</em>（ 1≤<em>L</em>≤10000 ）和 <em>M</em>（ 1≤<em>M</em>≤100 ），L<em>L</em> 代表马路的长度，M<em>M</em> 代表区域的数目，L<em>L</em> 和 M<em>M</em> 之间用一个空格隔开。接下来的 M<em>M</em> 行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">500 3</span><br><span class="line">150 300</span><br><span class="line">100 200</span><br><span class="line">470 471</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">298</span><br></pre></td></tr></table></figure><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L,M;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;L,&amp;M);</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">101</span>][<span class="number">2</span>];<span class="comment">//用于存储区域的左右端点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a[i][<span class="number">0</span>],&amp;a[i][<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//原来共L棵树</span></span><br><span class="line">    <span class="keyword">int</span> cuted[<span class="number">10001</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//初始化为0，代表未被砍去</span></span><br><span class="line">    <span class="keyword">int</span> cut1=a[<span class="number">0</span>][<span class="number">1</span>]-a[<span class="number">0</span>][<span class="number">0</span>]+<span class="number">1</span>;<span class="comment">//事先处理好第一个区域</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=a[<span class="number">0</span>][<span class="number">0</span>];i&lt;=a[<span class="number">0</span>][<span class="number">1</span>];++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cuted[i]=<span class="number">1</span>;<span class="comment">//1代表已被砍去</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("cut1=%d\n",cut1);</span></span><br><span class="line">    <span class="keyword">int</span> len=L+<span class="number">1</span>;<span class="comment">//加1是因为数轴0处也有一棵树</span></span><br><span class="line">    len-=cut1;</span><br><span class="line">    <span class="keyword">int</span> cnt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;M;++i)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        cnt=<span class="number">0</span>;<span class="comment">//此次实际应该砍去的树的个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=a[i][<span class="number">0</span>];j&lt;=a[i][<span class="number">1</span>];++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(cuted[j]==<span class="number">0</span>)<span class="comment">//还未曾被砍去</span></span><br><span class="line">            &#123;</span><br><span class="line">                ++cnt;</span><br><span class="line">                cuted[j]=<span class="number">1</span>;<span class="comment">//mmp!!!!!!</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf("cnt=%d\n",cnt);</span></span><br><span class="line">        len-=cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>17分钟搞定，然后测试–&gt;出错</p><p>调试中….</p><p>a thousand years lator…</p><p>卧槽！忘了把后来那些被砍位置置1</p><p>仅仅少写了一行代码<code>cuted[j]=1;</code></p><p>却花费了很久才找到</p><p>果然是–</p><p><strong>上联：编程3分钟</strong></p><p><strong>下联：调试3小时</strong></p><p><strong>横批：头发！</strong></p><p>~~~</p><h3 id="20200517更新"><a href="#20200517更新" class="headerlink" title="20200517更新"></a>20200517更新</h3><p>直接开一个辅助数组，初始全1，代表有树，砍去则置0，最后输出为1的个数即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 00
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>一题二解</title>
    <link href="http://yoursite.com/2020/05/17/%E4%B8%80%E9%A2%98%E4%BA%8C%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/05/17/一题二解/</id>
    <published>2020-05-17T01:06:55.000Z</published>
    <updated>2020-05-17T01:07:26.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第1行中给出正整数<em>N</em>（≤1000），在第二行中给出<em>N</em>个不超过整型范围的非负整数，数字间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按格式“M: n1 n2 …”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1234 2345 3456</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3: 3 4</span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题不难，之所以记录下来，是因为再获得每一个数字时使用了两种方法</p><p>其一为取模法</p><p>其二为转换为字符串（利用sprintf函数将数字转化为字符串）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp=a[i];</span><br><span class="line">        <span class="keyword">int</span> ind[<span class="number">10</span>],len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(temp!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ind[len++]=temp%<span class="number">10</span>;</span><br><span class="line">            temp/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">// char s[10];</span></span><br><span class="line">        <span class="comment">//sprintf(s,"%d",a[i]);</span></span><br><span class="line">        <span class="comment">//puts(s);</span></span><br><span class="line">        <span class="comment">//printf("\n");</span></span><br><span class="line">        <span class="comment">//int len=strlen(s);</span></span><br><span class="line">        <span class="comment">//printf("len=%d\n",len);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//int index=s[i]-'0';</span></span><br><span class="line">           <span class="comment">// printf("s[i]=%c,index=%d \n",s[i],index);</span></span><br><span class="line">            <span class="comment">//b[index]++;</span></span><br><span class="line">            b[ind[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(int i=0;i&lt;10;++i)printf("%d ",b[i]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d: "</span>,max);</span><br><span class="line">    <span class="keyword">int</span> f[n],cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]==max)</span><br><span class="line">        &#123;</span><br><span class="line">            f[cnt++]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[i]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;cnt<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;++k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">sprintf</span>(s,<span class="string">"%d"</span>,a[k]);</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)</span><br><span class="line">            b[s[i]-<span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d: "</span>,max);</span><br><span class="line">    <span class="keyword">int</span> f[n],cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]==max)</span><br><span class="line">        &#123;</span><br><span class="line">            f[cnt++]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[i]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;cnt<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>最大子串和</title>
    <link href="http://yoursite.com/2020/05/17/%E6%9C%80%E5%A4%A7%E5%AD%90%E4%B8%B2%E5%92%8C/"/>
    <id>http://yoursite.com/2020/05/17/最大子串和/</id>
    <published>2020-05-17T01:05:55.000Z</published>
    <updated>2020-05-17T01:06:23.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给定n个整数（可能为负数）组成的序列a[1],a[2],a[3],…,a[n],求该序列如a[i]+a[i+1]+…+a[j]的子段和的最大值。</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入有多组数据。每组数据第一行输入一个整数n(n&lt;=10^6)，第二行输入n个整数。n=0时程序结束。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每组数据输出一个答案。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">-2 11 -4 13 -5 -2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>((<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">int</span> a[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max=a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> sum;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)<span class="comment">//开始</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;n;++j)<span class="comment">//结束</span></span><br><span class="line">            &#123;</span><br><span class="line">                sum=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=j;++k)<span class="comment">//求子段和</span></span><br><span class="line">                &#123;</span><br><span class="line">                    sum+=a[k];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;max)</span><br><span class="line">                    max=sum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;给定n个整数（可能为负数）组成的序列a[1],a[2],a[3],…
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>求因子个数-时间开销优化版本</title>
    <link href="http://yoursite.com/2020/05/17/%E6%B1%82%E5%9B%A0%E5%AD%90%E4%B8%AA%E6%95%B0-%E6%97%B6%E9%97%B4%E5%BC%80%E9%94%80%E4%BC%98%E5%8C%96%E7%89%88%E6%9C%AC/"/>
    <id>http://yoursite.com/2020/05/17/求因子个数-时间开销优化版本/</id>
    <published>2020-05-17T01:04:28.000Z</published>
    <updated>2020-05-17T01:05:21.957Z</updated>
    
    <content type="html"><![CDATA[<p>Time Limit: 1000 ms<br>Memory Limit: 32768 mb</p><h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>输入n个整数,依次输出每个数的约数的个数</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入的第一行为N，即数组的个数(N&lt;=1000)</span><br><span class="line">接下来的1行包括N个整数，其中每个数的范围为(1&lt;=Num&lt;=1000000000)</span><br><span class="line">当N=0时输入结束。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可能有多组输入数据，对于每组输入数据，</span><br><span class="line">输出N行，其中每一行对应上面的一个数的约数的个数。</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 4 6 12</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h5 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清华大学上机题</span><br></pre></td></tr></table></figure><h5 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h5><p>有时间限制，而num最大为1000000000，若使用最直接的做法，会有部分数据测试时运行超时</p><p>比如下面的代码就出现这一情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=a[i];++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]%j==<span class="number">0</span>)</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="AC"><a href="#AC" class="headerlink" title="AC"></a>AC</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="built_in">sqrt</span>(a[i]);++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j*j==a[i])<span class="comment">//比如3*3=9</span></span><br><span class="line">            &#123;</span><br><span class="line">                cnt+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]%j==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt+=<span class="number">2</span>;<span class="comment">//因子有一必有二，而我们只做到根号num，因此加2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Time Limit: 1000 ms&lt;br&gt;Memory Limit: 32768 mb&lt;/p&gt;
&lt;h5 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h5&gt;&lt;p&gt;输入n个整数,依次
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言处理时间的一道题</title>
    <link href="http://yoursite.com/2020/05/17/C%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E7%9A%84%E4%B8%80%E9%81%93%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/17/C语言处理时间的一道题/</id>
    <published>2020-05-17T01:02:11.000Z</published>
    <updated>2020-05-17T01:02:56.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>本题要求编写程序，以<code>hh:mm:ss</code>的格式输出某给定时间再过<code>n</code>秒后的时间值（超过23:59:59就从0点开始计时）。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中以<code>hh:mm:ss</code>的格式给出起始时间，第二行给出整秒数<code>n</code>（&lt;60）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出在一行中给出<code>hh:mm:ss</code>格式的结果时间。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11:59:40</span><br><span class="line">30</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12:00:10</span><br></pre></td></tr></table></figure><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h,m,s,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d:%d:%d"</span>,&amp;h,&amp;m,&amp;s);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    h=n/<span class="number">3600</span>+h;<span class="comment">//计算n秒中包含的小时数，并相加</span></span><br><span class="line">    <span class="keyword">int</span> r=n%<span class="number">3600</span>;<span class="comment">//剩余秒数</span></span><br><span class="line">   </span><br><span class="line">    m=m+r/<span class="number">60</span>;<span class="comment">//计算剩余的秒数r中包含的分钟数，并相加</span></span><br><span class="line"></span><br><span class="line">    s=s+r%<span class="number">60</span>;<span class="comment">//计算剩余的秒数，此时r一定&lt;60，因此不用再r=r%60一次了</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(s&gt;=<span class="number">60</span>)<span class="comment">//秒数大于等于60，向分钟进位</span></span><br><span class="line">    &#123;</span><br><span class="line">        m+=s/<span class="number">60</span>;</span><br><span class="line">        s=s%<span class="number">60</span>;<span class="comment">//求真实秒数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m&gt;=<span class="number">60</span>)<span class="comment">//分钟数大于等于60，向小时进位</span></span><br><span class="line">    &#123;</span><br><span class="line">        h+=m/<span class="number">60</span>;</span><br><span class="line">        m=m%<span class="number">60</span>;<span class="comment">//求真实分钟数</span></span><br><span class="line">    &#125;</span><br><span class="line">    h=h%<span class="number">24</span>;<span class="comment">//求真实小时数</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d"</span>,h,m,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;本题要求编写程序，以&lt;code&gt;hh:mm:ss&lt;/code&gt;的格式输出某给定时间再过&lt;code&gt;n&lt;/code&gt;秒后的时间
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>今天是星期几</title>
    <link href="http://yoursite.com/2020/05/17/%E4%BB%8A%E5%A4%A9%E6%98%AF%E6%98%9F%E6%9C%9F%E5%87%A0/"/>
    <id>http://yoursite.com/2020/05/17/今天是星期几/</id>
    <published>2020-05-17T01:01:03.000Z</published>
    <updated>2020-05-17T01:01:30.054Z</updated>
    
    <content type="html"><![CDATA[<h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>今天是2012年4月12日星期四，编写程序，输入今天开始到12月31日之间的任意日期，输出那一天是星期几。例如输入“5（回车）20（回车）”（5月20日），输出应为“Sunday”。</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入第一行为月份。</span><br><span class="line">输入第二行为这个月的第几天。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入这一天是星期几。</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sunday</span><br></pre></td></tr></table></figure><h5 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">贵州大学2012机试</span><br></pre></td></tr></table></figure><h6 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h6><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//计算今天距离4/12的天数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal_day</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> month[<span class="number">12</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;<span class="comment">//4月-&gt;12月，每月的天数</span></span><br><span class="line">    <span class="keyword">int</span> days=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m<span class="number">-1</span>;++i)<span class="comment">//统计整月的天数</span></span><br><span class="line">    &#123;</span><br><span class="line">        days+=month[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    days+=d;<span class="comment">//加上新月天数</span></span><br><span class="line">    days-=<span class="number">12</span>;<span class="comment">//减去4月多算的天数</span></span><br><span class="line">    <span class="keyword">return</span> days;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">7</span>][<span class="number">10</span>]=&#123;<span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> m,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">4</span>;<span class="comment">//今天是周四</span></span><br><span class="line">    sum+=cal_day(m,d);</span><br><span class="line">    <span class="keyword">int</span> xq=sum%<span class="number">7</span>;<span class="comment">//对7取余便得星期数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,a[xq]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似问题：链接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h5&gt;&lt;p&gt;今天是2012年4月12日星期四，编写程序，输入今天开始到12月31日之间的任意日期，输出那一天是星期几。例如输入“5（回车
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>今天是今年第几天</title>
    <link href="http://yoursite.com/2020/05/17/%E4%BB%8A%E5%A4%A9%E6%98%AF%E4%BB%8A%E5%B9%B4%E7%AC%AC%E5%87%A0%E5%A4%A9/"/>
    <id>http://yoursite.com/2020/05/17/今天是今年第几天/</id>
    <published>2020-05-17T00:58:50.000Z</published>
    <updated>2020-05-17T00:59:28.517Z</updated>
    
    <content type="html"><![CDATA[<h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>输入一个年月日的有效日期，输出这一天是今年第几天？</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如题。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如题。</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018-01-11</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h5 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">云南大学机试题</span><br></pre></td></tr></table></figure><h6 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h6><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isr</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">400</span>==<span class="number">0</span>||y%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y%<span class="number">100</span>!=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y,m,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d-%d-%d"</span>,&amp;y,&amp;m,&amp;d);</span><br><span class="line">    <span class="keyword">int</span> month[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> day=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m<span class="number">-1</span>;i++)</span><br><span class="line">        day+=month[i<span class="number">-1</span>];<span class="comment">//统计整月天数</span></span><br><span class="line">    day+=d;<span class="comment">//统计新月已过天数</span></span><br><span class="line">    <span class="keyword">if</span>(m&gt;<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isr(y))</span><br><span class="line">            day++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,day);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="本题同类型加强版"><a href="#本题同类型加强版" class="headerlink" title="本题同类型加强版"></a>本题同类型加强版</h6><p>链接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h5&gt;&lt;p&gt;输入一个年月日的有效日期，输出这一天是今年第几天？&lt;/p&gt;
&lt;h5 id=&quot;输入输出格式&quot;&gt;&lt;a href=&quot;#输入输出格式
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>数字金字塔</title>
    <link href="http://yoursite.com/2020/05/17/%E6%95%B0%E5%AD%97%E9%87%91%E5%AD%97%E5%A1%94/"/>
    <id>http://yoursite.com/2020/05/17/数字金字塔/</id>
    <published>2020-05-17T00:57:36.000Z</published>
    <updated>2020-05-17T00:58:09.014Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h3><p>考虑在下面被显示的数字金字塔。 写一个程序来计算从最高点开始在底部任意处结束的路径经过数字的和的最大。 每一步可以走到左下方的点也可以到达右下方的点。   7   3 8  8 1 0  2 7 4 4 4 5 2 6 5 在上面的样例中,从7 到 3 到 8 到 7 到 5 的路径产生了最大和:30</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h3><p>第一行输入测试数据的组数T； 接下来每组测试数据： 第一个行包含 R(1&lt;= R&lt;=1000) ,表示行的数目。 后面每行为这个数字金字塔特定行包含的整数。</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h3><p>对每组数据输出最大值</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">5</span><br><span class="line">    7</span><br><span class="line">   3 8</span><br><span class="line">  8 1 0</span><br><span class="line"> 2 7 4 4</span><br><span class="line">4 5 2 6 5</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><h3 id="Solve"><a href="#Solve" class="headerlink" title="Solve"></a>Solve</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,a[<span class="number">100</span>][<span class="number">100</span>],i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)<span class="comment">//列</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]&gt;a[i][j+<span class="number">1</span>])</span><br><span class="line">a[i<span class="number">-1</span>][j]+=a[i][j];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a[i<span class="number">-1</span>][j]+=a[i][j+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description:&quot;&gt;&lt;/a&gt;Description:&lt;/h3&gt;&lt;p&gt;考虑在下面被显示的数字金字塔。 写一个程序来计算从最高点开始在底
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>素数加强版</title>
    <link href="http://yoursite.com/2020/05/17/%E7%B4%A0%E6%95%B0%E5%8A%A0%E5%BC%BA%E7%89%88/"/>
    <id>http://yoursite.com/2020/05/17/素数加强版/</id>
    <published>2020-05-17T00:56:28.000Z</published>
    <updated>2020-05-17T00:57:05.626Z</updated>
    
    <content type="html"><![CDATA[<p>us胡##### 题目描述</p><p>输入一个整数，判断该整数是否为素数，若是，输出该整数，若否，输出大于该整数的第一个素数。（例如，输入为14，输出17，因为17是大于14的第一个素数）</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一个整数n，n最大为10000。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按题意输出。</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17</span><br></pre></td></tr></table></figure><h5 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">贵州大学2014机试</span><br></pre></td></tr></table></figure><h5 id="AC代码1"><a href="#AC代码1" class="headerlink" title="AC代码1"></a>AC代码1</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ips</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(n);++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(!ips(n))<span class="comment">//只要不是质数，n就加1</span></span><br><span class="line">    &#123;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="AC代码2"><a href="#AC代码2" class="headerlink" title="AC代码2"></a>AC代码2</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ips</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(n);++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=n;j&lt;=<span class="number">10009</span>;++j)<span class="comment">//n=10000时，10007是质数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ips(j))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,j);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;us胡##### 题目描述&lt;/p&gt;
&lt;p&gt;输入一个整数，判断该整数是否为素数，若是，输出该整数，若否，输出大于该整数的第一个素数。（例如，输入为14，输出17，因为17是大于14的第一个素数）&lt;/p&gt;
&lt;h5 id=&quot;输入输出格式&quot;&gt;&lt;a href=&quot;#输入输出格式&quot; cl
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>特殊的阶乘考法</title>
    <link href="http://yoursite.com/2020/05/17/%E7%89%B9%E6%AE%8A%E7%9A%84%E9%98%B6%E4%B9%98%E8%80%83%E6%B3%95/"/>
    <id>http://yoursite.com/2020/05/17/特殊的阶乘考法/</id>
    <published>2020-05-17T00:54:27.000Z</published>
    <updated>2020-05-17T00:55:02.130Z</updated>
    
    <content type="html"><![CDATA[<h6 id="特殊的阶乘考法"><a href="#特殊的阶乘考法" class="headerlink" title="特殊的阶乘考法"></a>特殊的阶乘考法</h6><p>也许你早就知道阶乘的含义，N阶乘是由1到N相乘而产生，如： 12! = 1 x 2 x 3 x 4 x 5 x 6 x 7 x 8 x 9 x 10 x 11 x 12 = 479,001,600 12的阶乘最右边的非零位为6。 写一个程序，计算N(1&lt;=N&lt;=50,000,000)阶乘的最右边的非零位的值。 注意:10,000,000！有2499999个零。</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">仅一行包含一个正整数N。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">单独一行包含一个整数表示最右边的非零位的值。</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h6 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h6><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> ans=<span class="number">1</span>,cnt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        ans*=i;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去掉末尾的0，因为求的是最右边的非零位</span></span><br><span class="line">        <span class="keyword">while</span>(ans%<span class="number">10</span>==<span class="number">0</span>)</span><br><span class="line">            ans/=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        ans=ans%<span class="number">1000000000000</span>;<span class="comment">//0不能超过11位，否则WA？</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此时求出来的不仅仅有非零的最右边的个位，还有前面的一堆</span></span><br><span class="line">    <span class="comment">//因此要取个位</span></span><br><span class="line">    cnt=ans%<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;特殊的阶乘考法&quot;&gt;&lt;a href=&quot;#特殊的阶乘考法&quot; class=&quot;headerlink&quot; title=&quot;特殊的阶乘考法&quot;&gt;&lt;/a&gt;特殊的阶乘考法&lt;/h6&gt;&lt;p&gt;也许你早就知道阶乘的含义，N阶乘是由1到N相乘而产生，如： 12! = 1 x 2 x 3 x 4 
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>分解质因数</title>
    <link href="http://yoursite.com/2020/05/17/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/"/>
    <id>http://yoursite.com/2020/05/17/分解质因数/</id>
    <published>2020-05-17T00:51:52.000Z</published>
    <updated>2020-05-17T00:53:39.023Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h3><p>输入一个正整数，将它分解为质因数（质数即素数）。例如，输入90，输出<code>90=2*3*3*5</code>。</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20=2*2*5</span><br></pre></td></tr></table></figure><h3 id="AC"><a href="#AC" class="headerlink" title="AC"></a>AC</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">iss</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> nn=n;</span><br><span class="line">    <span class="keyword">int</span> su[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iss(i)&amp;&amp;n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            su[cnt++]=i;</span><br><span class="line">            n/=i;</span><br><span class="line">            i=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d="</span>,nn);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,su[i]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;cnt<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description:&quot;&gt;&lt;/a&gt;Description:&lt;/h3&gt;&lt;p&gt;输入一个正整数，将它分解为质因数（质数即素数）。例如，输入90，
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>set</title>
    <link href="http://yoursite.com/2020/05/03/set/"/>
    <id>http://yoursite.com/2020/05/03/set/</id>
    <published>2020-05-03T04:34:25.000Z</published>
    <updated>2020-05-03T04:41:53.894Z</updated>
    
    <content type="html"><![CDATA[<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><blockquote><p>集合，一个内部自动有序且不含重复元素的容器</p></blockquote><p>set只能通过迭代器访问其元素：<code>set &lt;typename&gt;::iterrator it;</code></p><ul><li><p>insert()</p><p>insert(x)可将x插入set容器中，并自动递增排序和去重</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.insert(<span class="number">3</span>);</span><br><span class="line">    st.insert(<span class="number">5</span>);</span><br><span class="line">    st.insert(<span class="number">4</span>);</span><br><span class="line">    st.insert(<span class="number">2</span>);</span><br><span class="line">    <span class="comment">//必须使用迭代器访问元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=st.begin();it!=st.end();++it)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,*it);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>find()</p><p>find(value)返回set中对应值为value的迭代器</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        st.insert(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span> &gt;::iterator it=st.find(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,*it);</span><br><span class="line">    <span class="comment">//上面两句可写成printf("%d",*(st.find(2)));</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>erase</p><ul><li><p>删除单个元素</p><ul><li><p>st.erase(it)，it为所需删除元素的迭代器</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.insert(<span class="number">100</span>);</span><br><span class="line">    st.insert(<span class="number">200</span>);</span><br><span class="line">    st.insert(<span class="number">100</span>);</span><br><span class="line">    st.insert(<span class="number">300</span>);</span><br><span class="line">    st.erase(st.find(<span class="number">100</span>));<span class="comment">//利用find函数找到100，然后用erase删除它</span></span><br><span class="line">    <span class="comment">//st.erase(st.find(200));//利用find函数找到200，然后用erase删除它</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须使用迭代器访问元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=st.begin();it!=st.end();++it)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,*it);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">200</span> <span class="number">300</span></span><br></pre></td></tr></table></figure></li><li><p>st.erase(value)，value为所需删除元素的值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.insert(<span class="number">100</span>);</span><br><span class="line">    st.insert(<span class="number">200</span>);</span><br><span class="line">    st.insert(<span class="number">100</span>);</span><br><span class="line">    st.insert(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">    st.erase(<span class="number">100</span>);<span class="comment">//删除set中值为100的元素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须使用迭代器访问元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=st.begin();it!=st.end();++it)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,*it);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">200</span> <span class="number">300</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除一个区间内的所有元素</p><p>st.erase(first,last)，first和last为迭代器，左闭右开</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.insert(<span class="number">100</span>);</span><br><span class="line">    st.insert(<span class="number">200</span>);</span><br><span class="line">    st.insert(<span class="number">150</span>);</span><br><span class="line">    st.insert(<span class="number">300</span>);</span><br><span class="line">    st.insert(<span class="number">700</span>);</span><br><span class="line">    st.insert(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt;::iterator it =st.find(<span class="number">200</span>);</span><br><span class="line">    st.erase(it,st.end());<span class="comment">//删除元素200至set末尾的全部元素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须使用迭代器访问元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=st.begin();it!=st.end();++it)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,*it);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100</span> <span class="number">150</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>size()</p><p>获得set内元素的个数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span> &gt; st;</span><br><span class="line">    st.insert(<span class="number">2</span>);</span><br><span class="line">    st.insert(<span class="number">5</span>);</span><br><span class="line">    st.insert(<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,st.size());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>clear()</p><p>清空set中的所有元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span> &lt;<span class="keyword">int</span> &gt; st;</span><br><span class="line">    st.insert(<span class="number">2</span>);</span><br><span class="line">    st.insert(<span class="number">5</span>);</span><br><span class="line">    st.insert(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    st.clear();<span class="comment">//清空set</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,st.size());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;set&quot;&gt;&lt;a href=&quot;#set&quot; class=&quot;headerlink&quot; title=&quot;set&quot;&gt;&lt;/a&gt;set&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;集合，一个内部自动有序且不含重复元素的容器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;set只能通过迭代器
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>vector</title>
    <link href="http://yoursite.com/2020/05/03/vector/"/>
    <id>http://yoursite.com/2020/05/03/vector/</id>
    <published>2020-05-03T04:34:17.000Z</published>
    <updated>2020-05-03T04:42:18.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><p>变长数组</p><ul><li><p>push_back()</p><p>在vector后面添加元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        v.push_back(i);<span class="comment">//在v后面添加元素</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>pop_back()</p><p>删除vector的尾元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    v.pop_back();<span class="comment">//删除v的尾元素4</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>size()</p><p>获得vector中元素的个数</p></li><li><p>clear()</p><p>清空vector中的所有元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    v.clear();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"v.size=%d\n"</span>,v.size());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//以下代码不会被执行，因为不满足循环判断条件</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.size=<span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>insert()</p><p>insert(it,x)用来向vector的任意迭代器it处插入一个元素x</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    v.insert(v.begin()+<span class="number">2</span>,<span class="number">9</span>);<span class="comment">//将9插入到v[2]的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">9</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>erase()</p><ul><li><p>删除单个元素</p><p>erase(it)：删除迭代器为it处的元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    v.erase(v.begin()+<span class="number">2</span>);<span class="comment">//删除下标为2的元素</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>删除一个区间内的所有元素</p><p>erase(first,last)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">        v.push_back(i);</span><br><span class="line">    v.erase(v.begin()+<span class="number">2</span>,v.begin()+<span class="number">4</span>);<span class="comment">//删除下标为2到4的元素</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vector&quot;&gt;&lt;a href=&quot;#vector&quot; class=&quot;headerlink&quot; title=&quot;vector&quot;&gt;&lt;/a&gt;vector&lt;/h3&gt;&lt;p&gt;变长数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;push_back()&lt;/p&gt;
&lt;p&gt;在vector后面添加元素&lt;
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>人口普查--偷懒的做法反而能AC！</title>
    <link href="http://yoursite.com/2020/05/03/%E4%BA%BA%E5%8F%A3%E6%99%AE%E6%9F%A5/"/>
    <id>http://yoursite.com/2020/05/03/人口普查/</id>
    <published>2020-05-03T03:58:07.000Z</published>
    <updated>2020-05-03T04:44:54.799Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。</p><p>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出正整数 <em>N</em>，取值在(0,105]；随后 <em>N</em> 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 <code>yyyy/mm/dd</code>（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">John 2001/05/12</span><br><span class="line">Tom 1814/09/06</span><br><span class="line">Ann 2121/01/30</span><br><span class="line">James 1814/09/05</span><br><span class="line">Steve 1967/11/20</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 Tom John</span><br></pre></td></tr></table></figure><blockquote><p>当没有合法生日时，要输出0</p></blockquote><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><ul><li><p>我的代码没有通过PTA最后一个测试点，但是却能在牛客网AC。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否是闰年</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isp</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">400</span>==<span class="number">0</span>||y%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y%<span class="number">100</span>!=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给定某人出生日期，计算其总共存活天数day</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">allday</span><span class="params">(<span class="keyword">int</span> y,<span class="keyword">int</span> m,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> month[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">        <span class="comment">//计算出生那一年所占的天数byd</span></span><br><span class="line">        <span class="keyword">int</span> byd=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=y+<span class="number">1</span>;j&lt;=<span class="number">12</span>;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            byd+=month[j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> day=byd+month[m<span class="number">-1</span>]-d;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;=<span class="number">2</span>&amp;&amp;isp(y))</span><br><span class="line">            day+=<span class="number">1</span>;<span class="comment">//闰年则加1</span></span><br><span class="line">        <span class="comment">//计算从出生第二年至2014年1月1号之间的天数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=y+<span class="number">1</span>;k&lt;<span class="number">2014</span>;++k)</span><br><span class="line">        &#123;</span><br><span class="line">            day+=<span class="number">365</span>;</span><br><span class="line">            <span class="keyword">if</span>(isp(k))</span><br><span class="line">                day+=<span class="number">1</span>;<span class="comment">//闰年则加1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算2014年1月1号2014年9月6日之间的天数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>;p&lt;=<span class="number">8</span>;++p)</span><br><span class="line">        &#123;</span><br><span class="line">            day+=month[p<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(isp(<span class="number">2014</span>))</span><br><span class="line">            day+=<span class="number">1</span>;<span class="comment">//闰年则加1</span></span><br><span class="line">        day+=<span class="number">6</span>;<span class="comment">//这便是总共的生存天数</span></span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;<span class="comment">//给定的人数</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">6</span>];<span class="comment">//名字</span></span><br><span class="line">    <span class="keyword">int</span> y,m,d;<span class="comment">//出生年月日</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;<span class="comment">//合法的生日个数</span></span><br><span class="line">    <span class="keyword">int</span> day=<span class="number">0</span>;<span class="comment">//总共存活天数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> th=allday(<span class="number">1814</span>,<span class="number">9</span>,<span class="number">6</span>);<span class="comment">//计算两百岁的人所存活的总天数th</span></span><br><span class="line">    <span class="comment">//printf("200岁共%d天\n\n",th);</span></span><br><span class="line">    <span class="keyword">char</span> maxname[<span class="number">6</span>],minname[<span class="number">6</span>];<span class="comment">//记录年龄最大和年龄最小的人的姓名</span></span><br><span class="line">    <span class="keyword">int</span> maxday=<span class="number">0</span>,minday=th+<span class="number">1</span>;<span class="comment">//初始化年龄最大和最小的人的总共存活天数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %d/%d/%d"</span>,name,&amp;y,&amp;m,&amp;d);</span><br><span class="line">        <span class="comment">//printf("m=%d d=%d\n",m,d);</span></span><br><span class="line">        day=allday(y,m,d);<span class="comment">//计算这个人的总共存活天数</span></span><br><span class="line">        <span class="comment">//printf("%s:%d\n",name,day);</span></span><br><span class="line">        <span class="comment">//合法性判断</span></span><br><span class="line">        <span class="keyword">if</span>(day&gt;th)<span class="comment">//年龄超过200岁</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf("%s超过200岁了\n",name);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(y&gt;<span class="number">2014</span>||(y==<span class="number">2014</span>)&amp;&amp;(m&gt;<span class="number">9</span>)||(y==<span class="number">2014</span>)&amp;&amp;(m==<span class="number">9</span>)&amp;&amp;(d&gt;<span class="number">6</span>))<span class="comment">//此人还未出生</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf("%s 还未出生\n",name);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//此时合法，继续下面的操作</span></span><br><span class="line">        ++cnt;</span><br><span class="line">        <span class="keyword">if</span>(day&gt;maxday)</span><br><span class="line">        &#123;</span><br><span class="line">            maxday=day;</span><br><span class="line">            <span class="built_in">strcpy</span>(maxname,name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(day&lt;minday)</span><br><span class="line">        &#123;</span><br><span class="line">            minday=day;</span><br><span class="line">            <span class="built_in">strcpy</span>(minname,name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>,cnt,maxname,minname);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>网上的做法大部分都是将生日转化为数字来做的，不用像我那样考虑的那么复杂</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> year,month,day;</span><br><span class="line"><span class="keyword">int</span> n,i,count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> min_age=<span class="number">18140905</span>,max_age=<span class="number">20140907</span>;<span class="comment">//初始化时稍微大过范围即可 </span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">8</span>],max_name[<span class="number">8</span>],min_name[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%d/%d/%d"</span>,name,&amp;year,&amp;month,&amp;day);</span><br><span class="line"><span class="keyword">int</span> k=solve(year,month,day);</span><br><span class="line"><span class="keyword">if</span>(k&gt;<span class="number">0</span>)<span class="comment">//年龄在范围内 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(max_age&gt;k)<span class="comment">//年龄越大，日期越小 </span></span><br><span class="line">&#123;</span><br><span class="line">max_age=k;</span><br><span class="line"><span class="built_in">strcpy</span>(max_name,name);<span class="comment">//字符串复制 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(min_age&lt;k)<span class="comment">//年龄越小，日期越大 </span></span><br><span class="line">&#123;</span><br><span class="line">min_age=k;</span><br><span class="line"><span class="built_in">strcpy</span>(min_name,name);</span><br><span class="line">&#125; </span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当合法生日为0时，只输出0，测试点3 </span></span><br><span class="line"><span class="keyword">if</span>(count)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>,count,max_name,min_name);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//因为题目说明，输入的日期一定合理，所以可以这样算 </span></span><br><span class="line"><span class="keyword">int</span> e=year*<span class="number">10000</span>+month*<span class="number">100</span>+day;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(e&gt;<span class="number">20140906</span>||e&lt;<span class="number">18140906</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">number</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> m, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> y*<span class="number">10000</span> + m*<span class="number">100</span> + d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">10</span>], name_max[<span class="number">10</span>], name_min[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> y, m, d, n, count=<span class="number">0</span>, x;</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">18140906</span>, min = <span class="number">120140906</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s %d/%d/%d"</span>, temp, &amp;y, &amp;m, &amp;d);</span><br><span class="line">x = number(y, m, d);</span><br><span class="line"><span class="keyword">if</span>(x &gt;= <span class="number">18140906</span> &amp;&amp; x &lt;= <span class="number">20140906</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span>(x &gt; max)&#123;</span><br><span class="line">max = x;</span><br><span class="line"><span class="built_in">strcpy</span>(name_max, temp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x &lt; min)&#123;</span><br><span class="line">min = x;</span><br><span class="line"><span class="built_in">strcpy</span>(name_min, temp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(count == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %s %s"</span>, count,name_min, name_max );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。&lt;/p&gt;
&lt;p&gt;这里确保每个输入的日期
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>空间换时间的思想</title>
    <link href="http://yoursite.com/2020/05/03/%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4%E7%9A%84%E6%80%9D%E6%83%B3/"/>
    <id>http://yoursite.com/2020/05/03/空间换时间的思想/</id>
    <published>2020-05-03T03:57:46.000Z</published>
    <updated>2020-05-03T04:43:34.281Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>本题要求读入 <em>N</em> 名学生的成绩，将获得某一给定分数的学生人数输出。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即学生总人数。随后一行给出 <em>N</em> 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 <em>K</em>（不超过 <em>N</em> 的正整数），随后是 <em>K</em> 个分数，中间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">60 75 90 55 75 99 82 90 75 50</span><br><span class="line">3 75 90 88</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 0</span><br></pre></td></tr></table></figure><h3 id="开始解题"><a href="#开始解题" class="headerlink" title="开始解题"></a>开始解题</h3><p>这题最容易想到的就是判断那k个分数是否存在于(in)前面的N个分数列表中，代码如下，但是最后一个测试点运行超时，原来题目限时250ms。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> b[k];</span><br><span class="line">    <span class="keyword">int</span> count[k]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;n;++m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==a[m])</span><br><span class="line">            &#123;</span><br><span class="line">                count[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,count[i]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;k<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和前面的那题【挖掘机技术哪家强】一样，这里也可以采用空间换时间的思想，代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="comment">//开个大数组</span></span><br><span class="line">    <span class="keyword">int</span> s[<span class="number">100001</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        s[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> b[k];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,s[b[i]]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;k<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AC!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;本题要求读入 &lt;em&gt;N&lt;/em&gt; 名学生的成绩，将获得某一给定分数的学生人数输出。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>螺旋矩阵</title>
    <link href="http://yoursite.com/2020/05/03/%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/"/>
    <id>http://yoursite.com/2020/05/03/螺旋矩阵/</id>
    <published>2020-05-03T03:57:24.000Z</published>
    <updated>2020-05-17T01:12:05.875Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><p>打印出一个旋转方阵,见样例输出。</p><h5 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h5><h6 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一个整数n(1 &lt;= n &lt;= 20), n为方阵的行数。</span><br></pre></td></tr></table></figure><h6 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一个大小为n*n的距阵</span><br></pre></td></tr></table></figure><h5 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h5><h6 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例#:"></a>输入样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h6 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例#:"></a>输出样例#:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1   16  15  14  13</span><br><span class="line">2   17  24  23  12</span><br><span class="line">3   18  25  22  11</span><br><span class="line">4   19  20  21  10</span><br><span class="line">5   6   7   8   9</span><br></pre></td></tr></table></figure><h5 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">福州大学2018年机试题</span><br></pre></td></tr></table></figure><h5 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,len;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        len=n/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        len=n/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> w=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;len;++k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//左上--&gt;左下</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;n-k;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][k]=w;</span><br><span class="line">            w++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//左下--&gt;右下</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k+<span class="number">1</span>;i&lt;n-k;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            a[n-k<span class="number">-1</span>][i]=w;</span><br><span class="line">            w++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//右下--&gt;右上</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-k<span class="number">-2</span>;i&gt;=k;--i)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][n-k<span class="number">-1</span>]=w;</span><br><span class="line">            w++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//右上--&gt;左上</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-k<span class="number">-2</span>;i&gt;k;--i)</span><br><span class="line">        &#123;</span><br><span class="line">            a[k][i]=w;</span><br><span class="line">            w++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-4d"</span>,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>本题要求将给定的 <em>N</em> 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 <em>m</em> 行 <em>n</em> 列，满足条件：<em>m</em>×<em>n</em> 等于 <em>N</em>；<em>m</em>≥<em>n</em>；且 <em>m</em>−<em>n</em> 取所有可能值中的最小值。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行中给出一个正整数 <em>N</em>，第 2 行给出 <em>N</em> 个待填充的正整数。所有数字不超过 104，相邻数字以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出螺旋矩阵。每行 <em>n</em> 个数字，共 <em>m</em> 行。相邻数字以 1 个空格分隔，行末不得有多余空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12</span><br><span class="line">37 76 20 98 76 42 53 95 60 81 58 93</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">98 95 93</span><br><span class="line">42 37 81</span><br><span class="line">53 20 76</span><br><span class="line">58 60 76</span><br></pre></td></tr></table></figure><h3 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    <span class="keyword">int</span> a[N];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;++i) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+N);</span><br><span class="line">    <span class="keyword">int</span> b[N],j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">        b[j++]=a[i];</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=N;i&gt;=<span class="number">1</span>;--i)<span class="comment">//m</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=N;++j)<span class="comment">//n</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((i*j==N)&amp;&amp;(i&gt;=j))</span><br><span class="line">            &#123;</span><br><span class="line">                m=i;</span><br><span class="line">                n=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("%d %d",m,n);</span></span><br><span class="line">    <span class="keyword">int</span> out[m][n];</span><br><span class="line">    <span class="keyword">int</span> time;<span class="comment">//每个方向上的循环次数</span></span><br><span class="line">    <span class="keyword">if</span>(m%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        time=m/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        time=m/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;<span class="comment">//正在填充第几个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;time;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//左上--&gt;右上</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;t&lt;N&amp;&amp;j&lt;n-i;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            out[i][j]=b[t++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//右上--&gt;右下</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;t&lt;N&amp;&amp;j&lt;m<span class="number">-1</span>-i;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            out[j][n<span class="number">-1</span>-i]=b[t++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//右下--&gt;左下</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=n<span class="number">-1</span>-i;t&lt;N&amp;&amp;j&gt;=i;--j)</span><br><span class="line">        &#123;</span><br><span class="line">            out[m<span class="number">-1</span>-i][j]=b[t++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//左下--&gt;左上</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-2</span>-i;t&lt;N&amp;&amp;j&gt;=i+<span class="number">1</span>;--j)</span><br><span class="line">        &#123;</span><br><span class="line">            out[j][i]=b[t++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,out[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(j&lt;n<span class="number">-1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;m<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一题&quot;&gt;&lt;a href=&quot;#第一题&quot; class=&quot;headerlink&quot; title=&quot;第一题&quot;&gt;&lt;/a&gt;第一题&lt;/h1&gt;&lt;p&gt;打印出一个旋转方阵,见样例输出。&lt;/p&gt;
&lt;h5 id=&quot;输入输出格式&quot;&gt;&lt;a href=&quot;#输入输出格式&quot; class=&quot;head
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>sprintf与sscanf</title>
    <link href="http://yoursite.com/2020/05/03/sprintf%E4%B8%8Esscanf/"/>
    <id>http://yoursite.com/2020/05/03/sprintf与sscanf/</id>
    <published>2020-05-03T03:57:07.000Z</published>
    <updated>2020-05-03T04:42:50.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sscanf与sprintf"><a href="#sscanf与sprintf" class="headerlink" title="sscanf与sprintf"></a>sscanf与sprintf</h3><blockquote><p>str与int的互转</p></blockquote><ul><li><p>sscanf()：str-&gt;int</p><ul><li><p>用法：<code>sscanf(str,&quot;%d&quot;,&amp;n);</code></p><ul><li><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>]=<span class="string">"1223343"</span>;</span><br><span class="line">    <span class="built_in">sscanf</span>(str,<span class="string">"%d"</span>,&amp;n);<span class="comment">//从左向右传值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1223343</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>sprintf()：int-&gt;str</p><ul><li><p>用法：<code>sprintf(str,&quot;%d&quot;,&amp;n);</code></p><ul><li><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">2333</span>;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(str,<span class="string">"%d"</span>,n);<span class="comment">//从右向左传值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2333</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;sscanf与sprintf&quot;&gt;&lt;a href=&quot;#sscanf与sprintf&quot; class=&quot;headerlink&quot; title=&quot;sscanf与sprintf&quot;&gt;&lt;/a&gt;sscanf与sprintf&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;str与int的互
      
    
    </summary>
    
      <category term="C" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
</feed>
